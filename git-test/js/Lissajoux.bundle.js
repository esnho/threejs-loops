(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{23:function(t,e,i){(function(){"use strict";var r,s,a,n=this.THREE||i(16);if(!n)throw new Error("MeshLine requires three.js");function o(){this.positions=[],this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[],this.counters=[],this.geometry=new n.BufferGeometry,this.widthCallback=null,this.matrixWorld=new n.Matrix4}function u(t,e,i,r,s){var a;if(t=t.subarray||t.slice?t:t.buffer,i=i.subarray||i.slice?i:i.buffer,t=e?t.subarray?t.subarray(e,s&&e+s):t.slice(e,s&&e+s):t,i.set)i.set(t,r);else for(a=0;a<t.length;a++)i[a+r]=t[a];return i}function h(t){n.ShaderMaterial.call(this,{uniforms:Object.assign({},n.UniformsLib.fog,{lineWidth:{value:1},map:{value:null},useMap:{value:0},alphaMap:{value:null},useAlphaMap:{value:0},color:{value:new n.Color(16777215)},opacity:{value:1},resolution:{value:new n.Vector2(1,1)},sizeAttenuation:{value:1},near:{value:1},far:{value:1},dashArray:{value:0},dashOffset:{value:0},dashRatio:{value:.5},useDash:{value:0},visibility:{value:1},alphaTest:{value:0},repeat:{value:new n.Vector2(1,1)}}),vertexShader:n.ShaderChunk.meshline_vert,fragmentShader:n.ShaderChunk.meshline_frag}),this.type="MeshLineMaterial",Object.defineProperties(this,{lineWidth:{enumerable:!0,get:function(){return this.uniforms.lineWidth.value},set:function(t){this.uniforms.lineWidth.value=t}},map:{enumerable:!0,get:function(){return this.uniforms.map.value},set:function(t){this.uniforms.map.value=t}},useMap:{enumerable:!0,get:function(){return this.uniforms.useMap.value},set:function(t){this.uniforms.useMap.value=t}},alphaMap:{enumerable:!0,get:function(){return this.uniforms.alphaMap.value},set:function(t){this.uniforms.alphaMap.value=t}},useAlphaMap:{enumerable:!0,get:function(){return this.uniforms.useAlphaMap.value},set:function(t){this.uniforms.useAlphaMap.value=t}},color:{enumerable:!0,get:function(){return this.uniforms.color.value},set:function(t){this.uniforms.color.value=t}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(t){this.uniforms.opacity.value=t}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(t){this.uniforms.resolution.value.copy(t)}},sizeAttenuation:{enumerable:!0,get:function(){return this.uniforms.sizeAttenuation.value},set:function(t){this.uniforms.sizeAttenuation.value=t}},near:{enumerable:!0,get:function(){return this.uniforms.near.value},set:function(t){this.uniforms.near.value=t}},far:{enumerable:!0,get:function(){return this.uniforms.far.value},set:function(t){this.uniforms.far.value=t}},dashArray:{enumerable:!0,get:function(){return this.uniforms.dashArray.value},set:function(t){this.uniforms.dashArray.value=t,this.useDash=0!==t?1:0}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(t){this.uniforms.dashOffset.value=t}},dashRatio:{enumerable:!0,get:function(){return this.uniforms.dashRatio.value},set:function(t){this.uniforms.dashRatio.value=t}},useDash:{enumerable:!0,get:function(){return this.uniforms.useDash.value},set:function(t){this.uniforms.useDash.value=t}},visibility:{enumerable:!0,get:function(){return this.uniforms.visibility.value},set:function(t){this.uniforms.visibility.value=t}},alphaTest:{enumerable:!0,get:function(){return this.uniforms.alphaTest.value},set:function(t){this.uniforms.alphaTest.value=t}},repeat:{enumerable:!0,get:function(){return this.uniforms.repeat.value},set:function(t){this.uniforms.repeat.value.copy(t)}}}),this.setValues(t)}o.prototype.setMatrixWorld=function(t){this.matrixWorld=t},o.prototype.setGeometry=function(t,e){if(this.widthCallback=e,this.positions=[],this.counters=[],t instanceof n.Geometry)for(var i=0;i<t.vertices.length;i++){var r=t.vertices[i];e=i/t.vertices.length;this.positions.push(r.x,r.y,r.z),this.positions.push(r.x,r.y,r.z),this.counters.push(e),this.counters.push(e)}if(n.BufferGeometry,t instanceof Float32Array||t instanceof Array)for(i=0;i<t.length;i+=3){e=i/t.length;this.positions.push(t[i],t[i+1],t[i+2]),this.positions.push(t[i],t[i+1],t[i+2]),this.counters.push(e),this.counters.push(e)}this.process()},o.prototype.raycast=(r=new n.Matrix4,s=new n.Ray,a=new n.Sphere,function(t,e){var i=t.linePrecision,o=i*i,u=this.geometry;if(null===u.boundingSphere&&u.computeBoundingSphere(),a.copy(u.boundingSphere),a.applyMatrix4(this.matrixWorld),!1!==t.ray.intersectSphere(a)){r.getInverse(this.matrixWorld),s.copy(t.ray).applyMatrix4(r);var h=new n.Vector3,l=new n.Vector3,p=new n.Vector3,c=new n.Vector3,f=this instanceof n.LineSegments?2:1;if(u instanceof n.BufferGeometry){var v=u.index,d=u.attributes;if(null!==v)for(var y=v.array,m=d.position.array,b=0,x=y.length-1;b<x;b+=f){var w=y[b],g=y[b+1];h.fromArray(m,3*w),l.fromArray(m,3*g),s.distanceSqToSegment(h,l,c,p)>o||(c.applyMatrix4(this.matrixWorld),(C=t.ray.origin.distanceTo(c))<t.near||C>t.far||e.push({distance:C,point:p.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this}))}else for(b=0,x=(m=d.position.array).length/3-1;b<x;b+=f)h.fromArray(m,3*b),l.fromArray(m,3*b+3),s.distanceSqToSegment(h,l,c,p)>o||(c.applyMatrix4(this.matrixWorld),(C=t.ray.origin.distanceTo(c))<t.near||C>t.far||e.push({distance:C,point:p.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this}))}else if(u instanceof n.Geometry){var A=u.vertices,M=A.length;for(b=0;b<M-1;b+=f){var C;s.distanceSqToSegment(A[b],A[b+1],c,p)>o||(c.applyMatrix4(this.matrixWorld),(C=t.ray.origin.distanceTo(c))<t.near||C>t.far||e.push({distance:C,point:p.clone().applyMatrix4(this.matrixWorld),index:b,face:null,faceIndex:null,object:this}))}}}}),o.prototype.compareV3=function(t,e){var i=6*t,r=6*e;return this.positions[i]===this.positions[r]&&this.positions[i+1]===this.positions[r+1]&&this.positions[i+2]===this.positions[r+2]},o.prototype.copyV3=function(t){var e=6*t;return[this.positions[e],this.positions[e+1],this.positions[e+2]]},o.prototype.process=function(){var t,e,i=this.positions.length/6;this.previous=[],this.next=[],this.side=[],this.width=[],this.indices_array=[],this.uvs=[];for(var r=0;r<i;r++)this.side.push(1),this.side.push(-1);for(r=0;r<i;r++)t=this.widthCallback?this.widthCallback(r/(i-1)):1,this.width.push(t),this.width.push(t);for(r=0;r<i;r++)this.uvs.push(r/(i-1),0),this.uvs.push(r/(i-1),1);e=this.compareV3(0,i-1)?this.copyV3(i-2):this.copyV3(0),this.previous.push(e[0],e[1],e[2]),this.previous.push(e[0],e[1],e[2]);for(r=0;r<i-1;r++)e=this.copyV3(r),this.previous.push(e[0],e[1],e[2]),this.previous.push(e[0],e[1],e[2]);for(r=1;r<i;r++)e=this.copyV3(r),this.next.push(e[0],e[1],e[2]),this.next.push(e[0],e[1],e[2]);e=this.compareV3(i-1,0)?this.copyV3(1):this.copyV3(i-1),this.next.push(e[0],e[1],e[2]),this.next.push(e[0],e[1],e[2]);for(r=0;r<i-1;r++){var s=2*r;this.indices_array.push(s,s+1,s+2),this.indices_array.push(s+2,s+1,s+3)}this.attributes?(this.attributes.position.copyArray(new Float32Array(this.positions)),this.attributes.position.needsUpdate=!0,this.attributes.previous.copyArray(new Float32Array(this.previous)),this.attributes.previous.needsUpdate=!0,this.attributes.next.copyArray(new Float32Array(this.next)),this.attributes.next.needsUpdate=!0,this.attributes.side.copyArray(new Float32Array(this.side)),this.attributes.side.needsUpdate=!0,this.attributes.width.copyArray(new Float32Array(this.width)),this.attributes.width.needsUpdate=!0,this.attributes.uv.copyArray(new Float32Array(this.uvs)),this.attributes.uv.needsUpdate=!0,this.attributes.index.copyArray(new Uint16Array(this.indices_array)),this.attributes.index.needsUpdate=!0):this.attributes={position:new n.BufferAttribute(new Float32Array(this.positions),3),previous:new n.BufferAttribute(new Float32Array(this.previous),3),next:new n.BufferAttribute(new Float32Array(this.next),3),side:new n.BufferAttribute(new Float32Array(this.side),1),width:new n.BufferAttribute(new Float32Array(this.width),1),uv:new n.BufferAttribute(new Float32Array(this.uvs),2),index:new n.BufferAttribute(new Uint16Array(this.indices_array),1),counters:new n.BufferAttribute(new Float32Array(this.counters),1)},this.geometry.addAttribute("position",this.attributes.position),this.geometry.addAttribute("previous",this.attributes.previous),this.geometry.addAttribute("next",this.attributes.next),this.geometry.addAttribute("side",this.attributes.side),this.geometry.addAttribute("width",this.attributes.width),this.geometry.addAttribute("uv",this.attributes.uv),this.geometry.addAttribute("counters",this.attributes.counters),this.geometry.setIndex(this.attributes.index)},o.prototype.advance=function(t){var e=this.attributes.position.array,i=this.attributes.previous.array,r=this.attributes.next.array,s=e.length;u(e,0,i,0,s),u(e,6,e,0,s-6),e[s-6]=t.x,e[s-5]=t.y,e[s-4]=t.z,e[s-3]=t.x,e[s-2]=t.y,e[s-1]=t.z,u(e,6,r,0,s-6),r[s-6]=t.x,r[s-5]=t.y,r[s-4]=t.z,r[s-3]=t.x,r[s-2]=t.y,r[s-1]=t.z,this.attributes.position.needsUpdate=!0,this.attributes.previous.needsUpdate=!0,this.attributes.next.needsUpdate=!0},n.ShaderChunk.meshline_vert=["",n.ShaderChunk.logdepthbuf_pars_vertex,n.ShaderChunk.fog_pars_vertex,"","attribute vec3 previous;","attribute vec3 next;","attribute float side;","attribute float width;","attribute float counters;","","uniform vec2 resolution;","uniform float lineWidth;","uniform vec3 color;","uniform float opacity;","uniform float near;","uniform float far;","uniform float sizeAttenuation;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","vec2 fix( vec4 i, float aspect ) {","","    vec2 res = i.xy / i.w;","    res.x *= aspect;","\t vCounters = counters;","    return res;","","}","","void main() {","","    float aspect = resolution.x / resolution.y;","    float pixelWidthRatio = 1. / (resolution.x * projectionMatrix[0][0]);","","    vColor = vec4( color, opacity );","    vUV = uv;","","    mat4 m = projectionMatrix * modelViewMatrix;","    vec4 finalPosition = m * vec4( position, 1.0 );","    vec4 prevPos = m * vec4( previous, 1.0 );","    vec4 nextPos = m * vec4( next, 1.0 );","","    vec2 currentP = fix( finalPosition, aspect );","    vec2 prevP = fix( prevPos, aspect );","    vec2 nextP = fix( nextPos, aspect );","","    float pixelWidth = finalPosition.w * pixelWidthRatio;","    float w = 1.8 * pixelWidth * lineWidth * width;","","    if( sizeAttenuation == 1. ) {","        w = 1.8 * lineWidth * width;","    }","","    vec2 dir;","    if( nextP == currentP ) dir = normalize( currentP - prevP );","    else if( prevP == currentP ) dir = normalize( nextP - currentP );","    else {","        vec2 dir1 = normalize( currentP - prevP );","        vec2 dir2 = normalize( nextP - currentP );","        dir = normalize( dir1 + dir2 );","","        vec2 perp = vec2( -dir1.y, dir1.x );","        vec2 miter = vec2( -dir.y, dir.x );","        //w = clamp( w / dot( miter, perp ), 0., 4. * lineWidth * width );","","    }","","    //vec2 normal = ( cross( vec3( dir, 0. ), vec3( 0., 0., 1. ) ) ).xy;","    vec2 normal = vec2( -dir.y, dir.x );","    normal.x /= aspect;","    normal *= .5 * w;","","    vec4 offset = vec4( normal * side, 0.0, 1.0 );","    finalPosition.xy += offset.xy;","","    gl_Position = finalPosition;","",n.ShaderChunk.logdepthbuf_vertex,n.ShaderChunk.fog_vertex&&"    vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",n.ShaderChunk.fog_vertex,"}"].join("\r\n"),n.ShaderChunk.meshline_frag=["",n.ShaderChunk.fog_pars_fragment,n.ShaderChunk.logdepthbuf_pars_fragment,"","uniform sampler2D map;","uniform sampler2D alphaMap;","uniform float useMap;","uniform float useAlphaMap;","uniform float useDash;","uniform float dashArray;","uniform float dashOffset;","uniform float dashRatio;","uniform float visibility;","uniform float alphaTest;","uniform vec2 repeat;","","varying vec2 vUV;","varying vec4 vColor;","varying float vCounters;","","void main() {","",n.ShaderChunk.logdepthbuf_fragment,"","    vec4 c = vColor;","    if( useMap == 1. ) c *= texture2D( map, vUV * repeat );","    if( useAlphaMap == 1. ) c.a *= texture2D( alphaMap, vUV * repeat ).a;","    if( c.a < alphaTest ) discard;","    if( useDash == 1. ){","        c.a *= ceil(mod(vCounters + dashOffset, dashArray) - (dashArray * dashRatio));","    }","    gl_FragColor = c;","    gl_FragColor.a *= step(vCounters, visibility);","",n.ShaderChunk.fog_fragment,"}"].join("\r\n"),h.prototype=Object.create(n.ShaderMaterial.prototype),h.prototype.constructor=h,h.prototype.isMeshLineMaterial=!0,h.prototype.copy=function(t){return n.ShaderMaterial.prototype.copy.call(this,t),this.lineWidth=t.lineWidth,this.map=t.map,this.useMap=t.useMap,this.alphaMap=t.alphaMap,this.useAlphaMap=t.useAlphaMap,this.color.copy(t.color),this.opacity=t.opacity,this.resolution.copy(t.resolution),this.sizeAttenuation=t.sizeAttenuation,this.near=t.near,this.far=t.far,this.dashArray.copy(t.dashArray),this.dashOffset.copy(t.dashOffset),this.dashRatio.copy(t.dashRatio),this.useDash=t.useDash,this.visibility=t.visibility,this.alphaTest=t.alphaTest,this.repeat.copy(t.repeat),this},t.exports&&(e=t.exports={MeshLine:o,MeshLineMaterial:h}),e.MeshLine=o,e.MeshLineMaterial=h}).call(this)},3:function(t,e,i){"use strict";i.r(e),i.d(e,"default",function(){return n});var r=i(16),s=i(23);function a(t,e){for(var i=0;i<e.length;i++){var r=e[i];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}var n=function(){function t(e){var i=e.scene,a=e.onLoad;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var n=new r.Color;n.setIntHSL(48,90,64),i.renderer.setClearColor(n);var o=i.camera.aspect;i.camera=new r.OrthographicCamera(10*o/-2,10*o/2,5,-5,1,150),i.camera.position.copy(new r.Vector3(0,0,10)),i.camera.lookAt(new r.Vector3(0,0,0)),this.root=new r.Group,this.lissaRatio=.9968,this.lissaCount=600;for(var u=new r.Geometry,h=0;h<this.lissaCount;h++){var l=new r.Vector3(5*Math.cos(h),5*Math.cos(.8*h),0);u.vertices.push(l)}this.lineGeometry=new s.MeshLine,this.lineGeometry.setGeometry(u);var p=new s.MeshLineMaterial({color:new r.Color("#7c6bd2"),sizeAttenuation:1,lineWidth:.003});this.lineMesh=new r.Mesh(this.lineGeometry.geometry,p),this.root.add(this.lineMesh),a&&a()}var e,i,n;return e=t,(i=[{key:"update",value:function(t,e){for(var i=.3*t,s=new r.Geometry,a=0;a<this.lissaCount;a++){var n=new r.Vector3(3.8*Math.cos(a+i),3.8*Math.cos((a+i)*this.lissaRatio),3.8*Math.cos((a+i)*this.lissaRatio*this.lissaRatio));s.vertices.push(n)}this.lineGeometry.setGeometry(s),this.lineMesh.rotateY(.2*e),this.lineMesh.rotateX(.09*e)}}])&&a(e.prototype,i),n&&a(e,n),t}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,