(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{14:function(e,t,n){"use strict";n.r(t);var r=n(15);n(18);function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}r.Color.prototype.setIntHSL=function(e,t,n){r.Color.prototype.setHSL(e/360,t/100,n/100)},n.d(t,"default",function(){return a});var a=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.updatables=[],this.objects=[],this.clock=new r.Clock}var t,n,a;return t=e,(n=[{key:"InitScene",value:function(){this.scene=new r.Scene,this.camera=this.GetCamera(),this.camera.position.z=10;var e=this.GetRenderer();this.clearColor=e.clearColor,this.renderer=e.renderer,this.canvas=document.body.appendChild(this.renderer.domElement),this.renderer.render(this.scene,this.camera),this.Update()}},{key:"Destroy",value:function(){var e=this;this.objects.map(function(t){return e.Remove(t)}),cancelAnimationFrame(this.animationFrame),this.scene=null,this.camera=null,this.renderer=null,this.canvas.remove()}},{key:"GetCamera",value:function(){var e=window.innerWidth/window.innerHeight;return new r.PerspectiveCamera(65,e,1,100)}},{key:"GetRenderer",value:function(){var e=new r.Color;e.setRGB(.1,.1,.1);var t=new r.WebGLRenderer({antialias:!0});return t.setSize(window.innerWidth,window.innerHeight),t.setClearColor(e),{clearColor:e,renderer:t}}},{key:"Add",value:function(e){var t=this;this.objects.push(e),this.scene.add(e.root),e.update&&this.updatables.push(e),e.OnDie=function(){t.Remove(e)}}},{key:"Remove",value:function(e){e.onRemove&&e.onRemove(),this.scene.remove(e.root),this.updatables=this.updatables.filter(function(t){return t.root.uuid!==e.root.uuid})}},{key:"Update",value:function(){var e=this,t=this.clock.getElapsedTime(),n=!0,r=!1,i=void 0;try{for(var a,o=this.updatables[Symbol.iterator]();!(n=(a=o.next()).done);n=!0){a.value.update(t)}}catch(e){r=!0,i=e}finally{try{n||null==o.return||o.return()}finally{if(r)throw i}}this.renderer.render(this.scene,this.camera),this.animationFrame=requestAnimationFrame(function(){return e.Update()})}}])&&i(t.prototype,n),a&&i(t,a),e}()},18:function(e,t){Math.clamp=function(e,t,n){return Math.min(Math.max(e,t),n)},Math.NormalizeHue=function(e){return e/360}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvanMvSGVscGVycy9USFJFRS1leHRlbnNpb25zLmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9PYmplY3RzL0Jhc2ljU2NlbmUuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL0hlbHBlcnMvTWF0aC5qcyJdLCJuYW1lcyI6WyJUSFJFRSIsInByb3RvdHlwZSIsInNldEludEhTTCIsImgiLCJzIiwibCIsInNldEhTTCIsIkJhc2ljU2NlbmUiLCJfY2xhc3NDYWxsQ2hlY2siLCJ0aGlzIiwidXBkYXRhYmxlcyIsIm9iamVjdHMiLCJjbG9jayIsInNjZW5lIiwiY2FtZXJhIiwiR2V0Q2FtZXJhIiwicG9zaXRpb24iLCJ6IiwicmVuZGVyT2JqZWN0IiwiR2V0UmVuZGVyZXIiLCJjbGVhckNvbG9yIiwicmVuZGVyZXIiLCJjYW52YXMiLCJkb2N1bWVudCIsImJvZHkiLCJhcHBlbmRDaGlsZCIsImRvbUVsZW1lbnQiLCJyZW5kZXIiLCJVcGRhdGUiLCJfdGhpcyIsIm1hcCIsIm9iamVjdCIsIlJlbW92ZSIsImNhbmNlbEFuaW1hdGlvbkZyYW1lIiwiYW5pbWF0aW9uRnJhbWUiLCJyZW1vdmUiLCJhc3BlY3RSYXRpbyIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJpbm5lckhlaWdodCIsInNldFJHQiIsImFudGlhbGlhcyIsInNldFNpemUiLCJzZXRDbGVhckNvbG9yIiwiX3RoaXMyIiwicHVzaCIsImFkZCIsInJvb3QiLCJ1cGRhdGUiLCJPbkRpZSIsIm9uUmVtb3ZlIiwiZmlsdGVyIiwib2JqIiwidXVpZCIsIl90aGlzMyIsInRpbWVFbGFwc2VkIiwiZ2V0RWxhcHNlZFRpbWUiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uIiwiX2RpZEl0ZXJhdG9yRXJyb3IiLCJfaXRlcmF0b3JFcnJvciIsInVuZGVmaW5lZCIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiU3ltYm9sIiwiaXRlcmF0b3IiLCJuZXh0IiwiZG9uZSIsInZhbHVlIiwiZXJyIiwicmV0dXJuIiwicmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwiTWF0aCIsImNsYW1wIiwibWluIiwibWF4IiwiTm9ybWFsaXplSHVlIl0sIm1hcHBpbmdzIjoid1JBRUFBLFFBQVlDLFVBQVVDLFVBQVksU0FBU0MsRUFBR0MsRUFBR0MsR0FDN0NMLFFBQVlDLFVBQVVLLE9BQ3BCSCxFQUFFLElBQ0ZDLEVBQUUsSUFDRkMsRUFBRSxnRENGYUUsYUFDbkIsU0FBQUEsaUdBQWNDLENBQUFDLEtBQUFGLEdBQ1pFLEtBQUtDLFdBQWEsR0FDbEJELEtBQUtFLFFBQVUsR0FDZkYsS0FBS0csTUFBUSxJQUFJWixtRUFJakJTLEtBQUtJLE1BQVEsSUFBSWIsUUFDakJTLEtBQUtLLE9BQVNMLEtBQUtNLFlBRW5CTixLQUFLSyxPQUFPRSxTQUFTQyxFQUFJLEdBRXpCLElBQU1DLEVBQWVULEtBQUtVLGNBQzFCVixLQUFLVyxXQUFhRixFQUFhRSxXQUMvQlgsS0FBS1ksU0FBV0gsRUFBYUcsU0FDN0JaLEtBQUthLE9BQVNDLFNBQVNDLEtBQUtDLFlBQVloQixLQUFLWSxTQUFTSyxZQUV0RGpCLEtBQUtZLFNBQVNNLE9BQU9sQixLQUFLSSxNQUFPSixLQUFLSyxRQUV0Q0wsS0FBS21CLDJDQUdHLElBQUFDLEVBQUFwQixLQUNSQSxLQUFLRSxRQUFRbUIsSUFBSSxTQUFBQyxHQUFNLE9BQUlGLEVBQUtHLE9BQU9ELEtBQ3ZDRSxxQkFBcUJ4QixLQUFLeUIsZ0JBQzFCekIsS0FBS0ksTUFBUSxLQUNiSixLQUFLSyxPQUFTLEtBQ2RMLEtBQUtZLFNBQVcsS0FDaEJaLEtBQUthLE9BQU9hLDZDQUlaLElBQU1DLEVBQWNDLE9BQU9DLFdBQWFELE9BQU9FLFlBRS9DLE9BRGUsSUFBSXZDLG9CQUF3QixHQUFJb0MsRUFBYSxFQUFHLDJDQUsvRCxJQUFNaEIsRUFBYSxJQUFJcEIsUUFDdkJvQixFQUFXb0IsT0FBTyxHQUFLLEdBQUssSUFFNUIsSUFBTW5CLEVBQVcsSUFBSXJCLGdCQUFvQixDQUN2Q3lDLFdBQVcsSUFLYixPQUhBcEIsRUFBU3FCLFFBQVFMLE9BQU9DLFdBQVlELE9BQU9FLGFBQzNDbEIsRUFBU3NCLGNBQWN2QixHQUVoQixDQUNMQSxXQUFZQSxFQUNaQyxTQUFVQSwrQkFJVlUsR0FBUSxJQUFBYSxFQUFBbkMsS0FDVkEsS0FBS0UsUUFBUWtDLEtBQUtkLEdBQ2xCdEIsS0FBS0ksTUFBTWlDLElBQUlmLEVBQU9nQixNQUNsQmhCLEVBQU9pQixRQUNUdkMsS0FBS0MsV0FBV21DLEtBQUtkLEdBRXZCQSxFQUFPa0IsTUFBUSxXQUNiTCxFQUFLWixPQUFPRCxtQ0FJVEEsR0FDREEsRUFBT21CLFVBQ1RuQixFQUFPbUIsV0FFVHpDLEtBQUtJLE1BQU1zQixPQUFPSixFQUFPZ0IsTUFDekJ0QyxLQUFLQyxXQUFhRCxLQUFLQyxXQUFXeUMsT0FDaEMsU0FBQUMsR0FBRyxPQUFJQSxFQUFJTCxLQUFLTSxPQUFTdEIsRUFBT2dCLEtBQUtNLHdDQUloQyxJQUFBQyxFQUFBN0MsS0FDRDhDLEVBQWM5QyxLQUFLRyxNQUFNNEMsaUJBRHhCQyxHQUFBLEVBQUFDLEdBQUEsRUFBQUMsT0FBQUMsRUFBQSxJQUVQLFFBQUFDLEVBQUFDLEVBQXNCckQsS0FBS0MsV0FBM0JxRCxPQUFBQyxjQUFBUCxHQUFBSSxFQUFBQyxFQUFBRyxRQUFBQyxNQUFBVCxHQUFBLEVBQXVDLENBQUFJLEVBQUFNLE1BQzNCbkIsT0FBT08sSUFIWixNQUFBYSxHQUFBVixHQUFBLEVBQUFDLEVBQUFTLEVBQUEsWUFBQVgsR0FBQSxNQUFBSyxFQUFBTyxRQUFBUCxFQUFBTyxTQUFBLFdBQUFYLEVBQUEsTUFBQUMsR0FLUGxELEtBQUtZLFNBQVNNLE9BQU9sQixLQUFLSSxNQUFPSixLQUFLSyxRQUN0Q0wsS0FBS3lCLGVBQWlCb0Msc0JBQXNCLGtCQUFNaEIsRUFBSzFCLGtFQ3JGM0QyQyxLQUFLQyxNQUFRLFNBQVNMLEVBQU9NLEVBQUtDLEdBQ2hDLE9BQU9ILEtBQUtFLElBQUlGLEtBQUtHLElBQUlQLEVBQU9NLEdBQU1DLElBR3hDSCxLQUFLSSxhQUFlLFNBQVN4RSxHQUM1QixPQUFPQSxFQUFFIiwiZmlsZSI6Ii4vanMvYmFzaWMtc2NlbmUuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgVEhSRUUgZnJvbSAndGhyZWUnO1xuXG5USFJFRS5Db2xvci5wcm90b3R5cGUuc2V0SW50SFNMID0gZnVuY3Rpb24oaCwgcywgbCkge1xuICAgIFRIUkVFLkNvbG9yLnByb3RvdHlwZS5zZXRIU0woXG4gICAgICBoLzM2MC4wLFxuICAgICAgcy8xMDAuMCxcbiAgICAgIGwvMTAwLjBcbiAgICApO1xufSIsImltcG9ydCAqIGFzIFRIUkVFIGZyb20gJ3RocmVlJztcbmltcG9ydCAnLi4vSGVscGVycy9NYXRoLmpzJztcbmltcG9ydCAnLi4vSGVscGVycy9USFJFRS1leHRlbnNpb25zLmpzJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQmFzaWNTY2VuZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMudXBkYXRhYmxlcyA9IFtdO1xuICAgIHRoaXMub2JqZWN0cyA9IFtdO1xuICAgIHRoaXMuY2xvY2sgPSBuZXcgVEhSRUUuQ2xvY2soKTtcbiAgfVxuXG4gIEluaXRTY2VuZSgpIHtcbiAgICB0aGlzLnNjZW5lID0gbmV3IFRIUkVFLlNjZW5lKCk7XG4gICAgdGhpcy5jYW1lcmEgPSB0aGlzLkdldENhbWVyYSgpO1xuXG4gICAgdGhpcy5jYW1lcmEucG9zaXRpb24ueiA9IDEwO1xuXG4gICAgY29uc3QgcmVuZGVyT2JqZWN0ID0gdGhpcy5HZXRSZW5kZXJlcigpO1xuICAgIHRoaXMuY2xlYXJDb2xvciA9IHJlbmRlck9iamVjdC5jbGVhckNvbG9yO1xuICAgIHRoaXMucmVuZGVyZXIgPSByZW5kZXJPYmplY3QucmVuZGVyZXI7XG4gICAgdGhpcy5jYW52YXMgPSBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMucmVuZGVyZXIuZG9tRWxlbWVudCk7XG5cbiAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcih0aGlzLnNjZW5lLCB0aGlzLmNhbWVyYSk7XG5cbiAgICB0aGlzLlVwZGF0ZSgpO1xuICB9XG5cbiAgRGVzdHJveSgpIHtcbiAgICB0aGlzLm9iamVjdHMubWFwKG9iamVjdCA9PiB0aGlzLlJlbW92ZShvYmplY3QpKTtcbiAgICBjYW5jZWxBbmltYXRpb25GcmFtZSh0aGlzLmFuaW1hdGlvbkZyYW1lKTtcbiAgICB0aGlzLnNjZW5lID0gbnVsbDtcbiAgICB0aGlzLmNhbWVyYSA9IG51bGw7XG4gICAgdGhpcy5yZW5kZXJlciA9IG51bGw7XG4gICAgdGhpcy5jYW52YXMucmVtb3ZlKCk7XG4gIH1cblxuICBHZXRDYW1lcmEoKSB7XG4gICAgY29uc3QgYXNwZWN0UmF0aW8gPSB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICBjb25zdCBjYW1lcmEgPSBuZXcgVEhSRUUuUGVyc3BlY3RpdmVDYW1lcmEoNjUsIGFzcGVjdFJhdGlvLCAxLCAxMDApO1xuICAgIHJldHVybiBjYW1lcmE7XG4gIH1cblxuICBHZXRSZW5kZXJlcigpIHtcbiAgICBjb25zdCBjbGVhckNvbG9yID0gbmV3IFRIUkVFLkNvbG9yKCk7XG4gICAgY2xlYXJDb2xvci5zZXRSR0IoMC4xLCAwLjEsIDAuMSk7XG5cbiAgICBjb25zdCByZW5kZXJlciA9IG5ldyBUSFJFRS5XZWJHTFJlbmRlcmVyKHtcbiAgICAgIGFudGlhbGlhczogdHJ1ZVxuICAgIH0pO1xuICAgIHJlbmRlcmVyLnNldFNpemUod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7XG4gICAgcmVuZGVyZXIuc2V0Q2xlYXJDb2xvcihjbGVhckNvbG9yKTtcblxuICAgIHJldHVybiB7XG4gICAgICBjbGVhckNvbG9yOiBjbGVhckNvbG9yLFxuICAgICAgcmVuZGVyZXI6IHJlbmRlcmVyXG4gICAgfVxuICB9XG5cbiAgQWRkKG9iamVjdCkge1xuICAgIHRoaXMub2JqZWN0cy5wdXNoKG9iamVjdCk7XG4gICAgdGhpcy5zY2VuZS5hZGQob2JqZWN0LnJvb3QpO1xuICAgIGlmIChvYmplY3QudXBkYXRlKSB7XG4gICAgICB0aGlzLnVwZGF0YWJsZXMucHVzaChvYmplY3QpO1xuICAgIH1cbiAgICBvYmplY3QuT25EaWUgPSAoKSA9PiB7XG4gICAgICB0aGlzLlJlbW92ZShvYmplY3QpO1xuICAgIH07XG4gIH1cblxuICBSZW1vdmUob2JqZWN0KSB7XG4gICAgaWYgKG9iamVjdC5vblJlbW92ZSkge1xuICAgICAgb2JqZWN0Lm9uUmVtb3ZlKCk7XG4gICAgfVxuICAgIHRoaXMuc2NlbmUucmVtb3ZlKG9iamVjdC5yb290KTtcbiAgICB0aGlzLnVwZGF0YWJsZXMgPSB0aGlzLnVwZGF0YWJsZXMuZmlsdGVyKFxuICAgICAgb2JqID0+IG9iai5yb290LnV1aWQgIT09IG9iamVjdC5yb290LnV1aWRcbiAgICApO1xuICB9XG5cbiAgVXBkYXRlKCkge1xuICAgIGNvbnN0IHRpbWVFbGFwc2VkID0gdGhpcy5jbG9jay5nZXRFbGFwc2VkVGltZSgpO1xuICAgIGZvciAobGV0IHVwZGF0YWJsZSBvZiB0aGlzLnVwZGF0YWJsZXMpIHtcbiAgICAgIHVwZGF0YWJsZS51cGRhdGUodGltZUVsYXBzZWQpO1xuICAgIH1cbiAgICB0aGlzLnJlbmRlcmVyLnJlbmRlcih0aGlzLnNjZW5lLCB0aGlzLmNhbWVyYSk7XG4gICAgdGhpcy5hbmltYXRpb25GcmFtZSA9IHJlcXVlc3RBbmltYXRpb25GcmFtZSgoKSA9PiB0aGlzLlVwZGF0ZSgpKTtcbiAgfVxufVxuIiwiTWF0aC5jbGFtcCA9IGZ1bmN0aW9uKHZhbHVlLCBtaW4sIG1heCkge1xuICByZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgodmFsdWUsIG1pbiksIG1heCk7XG59O1xuXG5NYXRoLk5vcm1hbGl6ZUh1ZSA9IGZ1bmN0aW9uKGgpIHtcblx0cmV0dXJuIGgvMzYwLjA7XG59OyJdLCJzb3VyY2VSb290IjoiIn0=