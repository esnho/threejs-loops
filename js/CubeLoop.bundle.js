(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{14:function(t,e,n){"use strict";n.d(e,"a",function(){return o});var r=n(13);var o=function t(e){var n=e.size,o=void 0===n?5:n,a=e.material,i=e.position;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.seed=Math.random();var s=1,c=1,u=1;this.color=new r.d,this.color.setRGB(s,c,u),this.material=a||new r.k({color:this.color}),this.geometry=new r.b(o,o,o),this.mesh=new r.j(this.geometry,this.material),i&&this.mesh.position.copy(i),this.root=this.mesh}},5:function(t,e,n){"use strict";n.r(e);var r=n(13);function o(t){return(o="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){return!e||"object"!==o(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function i(t){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function s(t,e){return(s=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var c=function(t){function e(){var t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),t=a(this,i(e).call(this));var n=new r.i(16777215,16777215,1.5);return n.color.setHSL(u(250),.9,.94),n.groundColor.setHSL(u(250),.9,.44),n.position.set(0,2,0),t.add(n),t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&s(t,e)}(e,r["h"]),e}();function u(t){return t/360}var l=n(14);function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}n.d(e,"default",function(){return f});var f=function(){function t(e){var n=e.scene,o=e.onLoad;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var a=new r.d;a.setIntHSL(48,90,64),n.renderer.setClearColor(a);var i=n.camera.aspect;n.camera=new r.m(10*i/-2,10*i/2,5,-5,1,150),n.camera.position.copy(new r.r(-10,10,10)),n.camera.lookAt(new r.r(0,0,0)),this.root=new r.h;var s=new c;this.root.add(s);var u=new r.l({color:16777215,metalness:.4,roughness:.2});this.cubes=[new l.a({size:2,material:u,position:new r.r(-1,1,1)}),new l.a({size:2,material:u,position:new r.r(1,1,1)}),new l.a({size:2,material:u,position:new r.r(-1,1,-1)}),new l.a({size:2,material:u,position:new r.r(1,1,-1)}),new l.a({size:2,material:u,position:new r.r(-1,-1,1)}),new l.a({size:2,material:u,position:new r.r(1,-1,1)}),new l.a({size:2,material:u,position:new r.r(-1,-1,-1)}),new l.a({size:2,material:u,position:new r.r(1,-1,-1)})],this.cubesParent=new r.h;var h=!0,f=!1,p=void 0;try{for(var w,y=this.cubes[Symbol.iterator]();!(h=(w=y.next()).done);h=!0){var b=w.value;this.cubesParent.add(b.root)}}catch(t){f=!0,p=t}finally{try{h||null==y.return||y.return()}finally{if(f)throw p}}this.cubesParent.position.copy(new r.r(1,-1,-1)),this.root.add(this.cubesParent),o&&o()}var e,n,o;return e=t,(n=[{key:"update",value:function(t){var e=3*t;e%(2*Math.PI)<Math.PI?this.firstSection(e):this.secondSection(e)}},{key:"firstSection",value:function(t){var e=Math.sin(.5*t),n=Math.abs(e);this.cubesParent.children[7].position.copy(new r.r(1,-1,-1));for(var o=0;o<this.cubesParent.children.length;o++){var a=this.cubesParent.children[o],i=Math.clamp((1-n)*(.5*Math.PI)+.125*o,0,1),s=new r.r(i,i,i);a.scale.copy(s),a.rotation.z=i*Math.PI,a.rotation.x=i*Math.PI*.5}}},{key:"secondSection",value:function(t){var e=Math.sin(.5*t),n=Math.abs(e),o=Math.cos(.5*t),a=Math.abs(o),i=this.cubesParent.children[7],s=Math.clamp((1-n)*(.5*Math.PI)+.875+a,0,2),c=new r.r(s,s,s);i.scale.copy(c),i.rotation.z=s*Math.PI,i.rotation.x=s*Math.PI*.5;var u=new r.r(1,-1,-1);i.position.copy(u.lerp(new r.r(0,0,0),Math.clamp(6*(1-n),0,1)));for(var l=0;l<this.cubesParent.children.length-1;l++){var h=this.cubesParent.children[l],f=Math.clamp(Math.clamp((1-n)*(.5*Math.PI)+.125*l,0,1)-a,0,1),p=new r.r(f,f,f);h.scale.copy(p),h.rotation.z=f*Math.PI,h.rotation.x=f*Math.PI*.5}}}])&&h(e.prototype,n),o&&h(e,o),t}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,