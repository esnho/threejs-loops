(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{16:function(t,e,o){"use strict";o.d(e,"a",function(){return r});var n=o(15);var r=function t(e){var o=e.size,r=void 0===o?5:o,a=e.material,i=e.position;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this.seed=Math.random();var c=1,s=1,u=1;this.color=new n.Color,this.color.setRGB(c,s,u),this.material=a||new n.MeshBasicMaterial({color:this.color}),this.geometry=new n.BoxGeometry(r,r,r),this.mesh=new n.Mesh(this.geometry,this.material),i&&this.mesh.position.copy(i),this.root=this.mesh}},7:function(t,e,o){"use strict";o.r(e);var n=o(15);function r(t){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function a(t,e){return!e||"object"!==r(e)&&"function"!=typeof e?function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t):e}function i(t){return(i=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}function c(t,e){return(c=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}var s=function(t){function e(){var t;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e),t=a(this,i(e).call(this));var o=new n.HemisphereLight(16777215,16777215,1.5);return o.color.setHSL(u(250),.9,.94),o.groundColor.setHSL(u(250),.9,.44),o.position.set(0,2,0),t.add(o),t}return function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&c(t,e)}(e,n["Group"]),e}();function u(t){return t/360}var h=o(16);function l(t,e){for(var o=0;o<e.length;o++){var n=e[o];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}o.d(e,"default",function(){return p});var p=function(){function t(e){var o=e.scene,r=e.onLoad;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t);var a=new n.Color;a.setIntHSL(48,90,64),o.renderer.setClearColor(a);var i=o.camera.aspect;o.camera=new n.OrthographicCamera(10*i/-2,10*i/2,5,-5,1,150),o.camera.position.copy(new n.Vector3(-10,10,10)),o.camera.lookAt(new n.Vector3(0,0,0)),this.root=new n.Group;var c=new s;this.root.add(c);var u=new n.MeshStandardMaterial({color:16777215,metalness:.4,roughness:.2});this.cubes=[new h.a({size:2,material:u,position:new n.Vector3(-1,1,1)}),new h.a({size:2,material:u,position:new n.Vector3(1,1,1)}),new h.a({size:2,material:u,position:new n.Vector3(-1,1,-1)}),new h.a({size:2,material:u,position:new n.Vector3(1,1,-1)}),new h.a({size:2,material:u,position:new n.Vector3(-1,-1,1)}),new h.a({size:2,material:u,position:new n.Vector3(1,-1,1)}),new h.a({size:2,material:u,position:new n.Vector3(-1,-1,-1)}),new h.a({size:2,material:u,position:new n.Vector3(1,-1,-1)})],this.cubesParent=new n.Group;var l=!0,p=!1,f=void 0;try{for(var w,y=this.cubes[Symbol.iterator]();!(l=(w=y.next()).done);l=!0){var b=w.value;this.cubesParent.add(b.root)}}catch(t){p=!0,f=t}finally{try{l||null==y.return||y.return()}finally{if(p)throw f}}this.cubesParent.position.copy(new n.Vector3(1,-1,-1)),this.root.add(this.cubesParent),r&&r()}var e,o,r;return e=t,(o=[{key:"update",value:function(t){var e=3*t;e%(2*Math.PI)<Math.PI?this.firstSection(e):this.secondSection(e)}},{key:"firstSection",value:function(t){var e=Math.sin(.5*t),o=Math.abs(e);this.cubesParent.children[7].position.copy(new n.Vector3(1,-1,-1));for(var r=0;r<this.cubesParent.children.length;r++){var a=this.cubesParent.children[r],i=Math.clamp((1-o)*(.5*Math.PI)+.125*r,0,1),c=new n.Vector3(i,i,i);a.scale.copy(c),a.rotation.z=i*Math.PI,a.rotation.x=i*Math.PI*.5}}},{key:"secondSection",value:function(t){var e=Math.sin(.5*t),o=Math.abs(e),r=Math.cos(.5*t),a=Math.abs(r),i=this.cubesParent.children[7],c=Math.clamp((1-o)*(.5*Math.PI)+.875+a,0,2),s=new n.Vector3(c,c,c);i.scale.copy(s),i.rotation.z=c*Math.PI,i.rotation.x=c*Math.PI*.5;var u=new n.Vector3(1,-1,-1);i.position.copy(u.lerp(new n.Vector3(0,0,0),Math.clamp(6*(1-o),0,1)));for(var h=0;h<this.cubesParent.children.length-1;h++){var l=this.cubesParent.children[h],p=Math.clamp(Math.clamp((1-o)*(.5*Math.PI)+.125*h,0,1)-a,0,1),f=new n.Vector3(p,p,p);l.scale.copy(f),l.rotation.z=p*Math.PI,l.rotation.x=p*Math.PI*.5}}}])&&l(e.prototype,o),r&&l(e,r),t}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,