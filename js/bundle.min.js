!function(d){function u(u){for(var e,n,c=u[0],f=u[1],t=0,i=[];t<c.length;t++)n=c[t],a[n]&&i.push(a[n][0]),a[n]=0;for(e in f)Object.prototype.hasOwnProperty.call(f,e)&&(d[e]=f[e]);for(r&&r(u);i.length;)i.shift()()}var e={},a={12:0};function n(u){if(e[u])return e[u].exports;var a=e[u]={i:u,l:!1,exports:{}};return d[u].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.e=function(d){var u=[],e=a[d];if(0!==e)if(e)u.push(e[2]);else{var c=new Promise(function(u,n){e=a[d]=[u,n]});u.push(e[2]=c);var f,t=document.createElement("script");t.charset="utf-8",t.timeout=120,n.nc&&t.setAttribute("nonce",n.nc),t.src=function(d){return n.p+"./js/"+({0:"vendors~CubeLoop~FloatingBio~GridLoop~Lissajoux~MorphingSphere~OpenHead~SkyscrapersLoop~SunLoop~Tree~a6d1f387",1:"OpenHead~TreeExample",2:"CubeLoop",3:"FloatingBio",4:"GridLoop",5:"Lissajoux",6:"MorphingSphere",7:"OpenHead",8:"SkyscrapersLoop",9:"SunLoop",10:"TreeExample",11:"basic-scene"}[d]||d)+".bundle.js"}(d),f=function(u){t.onerror=t.onload=null,clearTimeout(r);var e=a[d];if(0!==e){if(e){var n=u&&("load"===u.type?"missing":u.type),c=u&&u.target&&u.target.src,f=new Error("Loading chunk "+d+" failed.\n("+n+": "+c+")");f.type=n,f.request=c,e[1](f)}a[d]=void 0}};var r=setTimeout(function(){f({type:"timeout",target:t})},12e4);t.onerror=t.onload=f,document.head.appendChild(t)}return Promise.all(u)},n.m=d,n.c=e,n.d=function(d,u,e){n.o(d,u)||Object.defineProperty(d,u,{enumerable:!0,get:e})},n.r=function(d){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(d,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(d,"__esModule",{value:!0})},n.t=function(d,u){if(1&u&&(d=n(d)),8&u)return d;if(4&u&&"object"==typeof d&&d&&d.__esModule)return d;var e=Object.create(null);if(n.r(e),Object.defineProperty(e,"default",{enumerable:!0,value:d}),2&u&&"string"!=typeof d)for(var a in d)n.d(e,a,function(u){return d[u]}.bind(null,a));return e},n.n=function(d){var u=d&&d.__esModule?function(){return d.default}:function(){return d};return n.d(u,"a",u),u},n.o=function(d,u){return Object.prototype.hasOwnProperty.call(d,u)},n.p="",n.oe=function(d){throw console.error(d),d};var c=window.webpackJsonp=window.webpackJsonp||[],f=c.push.bind(c);c.push=u,c=c.slice();for(var t=0;t<c.length;t++)u(c[t]);var r=f;n(n.s=11)}([function(d,u,e){"use strict";d.exports=function(d){var u=[];return u.toString=function(){return this.map(function(u){var e=function(d,u){var e=d[1]||"",a=d[3];if(!a)return e;if(u&&"function"==typeof btoa){var n=(f=a,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(f))))+" */"),c=a.sources.map(function(d){return"/*# sourceURL="+a.sourceRoot+d+" */"});return[e].concat(c).concat([n]).join("\n")}var f;return[e].join("\n")}(u,d);return u[2]?"@media "+u[2]+"{"+e+"}":e}).join("")},u.i=function(d,e){"string"==typeof d&&(d=[[null,d,""]]);for(var a={},n=0;n<this.length;n++){var c=this[n][0];null!=c&&(a[c]=!0)}for(n=0;n<d.length;n++){var f=d[n];null!=f[0]&&a[f[0]]||(e&&!f[2]?f[2]=e:e&&(f[2]="("+f[2]+") and ("+e+")"),u.push(f))}},u}},function(d,u,e){var a,n,c={},f=(a=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===n&&(n=a.apply(this,arguments)),n}),t=function(d){var u={};return function(d,e){if("function"==typeof d)return d();if(void 0===u[d]){var a=function(d,u){return u?u.querySelector(d):document.querySelector(d)}.call(this,d,e);if(window.HTMLIFrameElement&&a instanceof window.HTMLIFrameElement)try{a=a.contentDocument.head}catch(d){a=null}u[d]=a}return u[d]}}(),r=null,i=0,o=[],l=e(14);function s(d,u){for(var e=0;e<d.length;e++){var a=d[e],n=c[a.id];if(n){n.refs++;for(var f=0;f<n.parts.length;f++)n.parts[f](a.parts[f]);for(;f<a.parts.length;f++)n.parts.push(g(a.parts[f],u))}else{var t=[];for(f=0;f<a.parts.length;f++)t.push(g(a.parts[f],u));c[a.id]={id:a.id,refs:1,parts:t}}}}function m(d,u){for(var e=[],a={},n=0;n<d.length;n++){var c=d[n],f=u.base?c[0]+u.base:c[0],t={css:c[1],media:c[2],sourceMap:c[3]};a[f]?a[f].parts.push(t):e.push(a[f]={id:f,parts:[t]})}return e}function b(d,u){var e=t(d.insertInto);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var a=o[o.length-1];if("top"===d.insertAt)a?a.nextSibling?e.insertBefore(u,a.nextSibling):e.appendChild(u):e.insertBefore(u,e.firstChild),o.push(u);else if("bottom"===d.insertAt)e.appendChild(u);else{if("object"!=typeof d.insertAt||!d.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var n=t(d.insertAt.before,e);e.insertBefore(u,n)}}function p(d){if(null===d.parentNode)return!1;d.parentNode.removeChild(d);var u=o.indexOf(d);u>=0&&o.splice(u,1)}function h(d){var u=document.createElement("style");if(void 0===d.attrs.type&&(d.attrs.type="text/css"),void 0===d.attrs.nonce){var a=function(){0;return e.nc}();a&&(d.attrs.nonce=a)}return _(u,d.attrs),b(d,u),u}function _(d,u){Object.keys(u).forEach(function(e){d.setAttribute(e,u[e])})}function g(d,u){var e,a,n,c;if(u.transform&&d.css){if(!(c="function"==typeof u.transform?u.transform(d.css):u.transform.default(d.css)))return function(){};d.css=c}if(u.singleton){var f=i++;e=r||(r=h(u)),a=y.bind(null,e,f,!1),n=y.bind(null,e,f,!0)}else d.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(e=function(d){var u=document.createElement("link");return void 0===d.attrs.type&&(d.attrs.type="text/css"),d.attrs.rel="stylesheet",_(u,d.attrs),b(d,u),u}(u),a=function(d,u,e){var a=e.css,n=e.sourceMap,c=void 0===u.convertToAbsoluteUrls&&n;(u.convertToAbsoluteUrls||c)&&(a=l(a));n&&(a+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(n))))+" */");var f=new Blob([a],{type:"text/css"}),t=d.href;d.href=URL.createObjectURL(f),t&&URL.revokeObjectURL(t)}.bind(null,e,u),n=function(){p(e),e.href&&URL.revokeObjectURL(e.href)}):(e=h(u),a=function(d,u){var e=u.css,a=u.media;a&&d.setAttribute("media",a);if(d.styleSheet)d.styleSheet.cssText=e;else{for(;d.firstChild;)d.removeChild(d.firstChild);d.appendChild(document.createTextNode(e))}}.bind(null,e),n=function(){p(e)});return a(d),function(u){if(u){if(u.css===d.css&&u.media===d.media&&u.sourceMap===d.sourceMap)return;a(d=u)}else n()}}d.exports=function(d,u){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(u=u||{}).attrs="object"==typeof u.attrs?u.attrs:{},u.singleton||"boolean"==typeof u.singleton||(u.singleton=f()),u.insertInto||(u.insertInto="head"),u.insertAt||(u.insertAt="bottom");var e=m(d,u);return s(e,u),function(d){for(var a=[],n=0;n<e.length;n++){var f=e[n];(t=c[f.id]).refs--,a.push(t)}d&&s(m(d,u),u);for(n=0;n<a.length;n++){var t;if(0===(t=a[n]).refs){for(var r=0;r<t.parts.length;r++)t.parts[r]();delete c[t.id]}}}};var I,v=(I=[],function(d,u){return I[d]=u,I.filter(Boolean).join("\n")});function y(d,u,e,a){var n=e?"":a.css;if(d.styleSheet)d.styleSheet.cssText=v(u,n);else{var c=document.createTextNode(n),f=d.childNodes;f[u]&&d.removeChild(f[u]),f.length?d.insertBefore(c,f[u]):d.appendChild(c)}}},,,,,,,,,,function(d,u,e){"use strict";e.r(u);e(12);function a(d,u){for(var e=0;e<u.length;e++){var a=u[e];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(d,a.key,a)}}var n=e(15),c=e(25),f=["CubeLoop","GridLoop","SkyscrapersLoop","SunLoop","FloatingBio","MorphingSphere","Lissajoux","OpenHead","TreeExample"];(new(function(){function d(){!function(d,u){if(!(d instanceof u))throw new TypeError("Cannot call a class as a function")}(this,d),this.loops=[]}var u,t,r;return u=d,(t=[{key:"Init",value:function(){this.CreateMenu(),this.AddCloseRendererToMenu(),this.PopulateMenu(),this.CreateOpenMenuButton(),this.StartLoop(this.loops[this.loops.length-2])}},{key:"CreateMenu",value:function(){this.menuContainer=document.createElement("div"),this.menuContainer.setAttribute("id","menu-container"),this.menuContainer.setAttribute("class","show"),this.menu=document.createElement("ul"),this.menu.setAttribute("id","menu"),this.menuContainer.appendChild(this.menu),document.body.appendChild(this.menuContainer)}},{key:"AddCloseRendererToMenu",value:function(){var d=this;this.menu.appendChild(this.MenuElement("Close rendering",function(u){d.DestroyScene(),d.SelectMenuVoice(u.target)}))}},{key:"PopulateMenu",value:function(){for(var d=0;d<f.length;d++){var u=f[d];this.loops.push(this.AddLoopButton(c(n(u," ")),u))}}},{key:"AddLoopButton",value:function(d,u){var e=this,a=this.MenuElement(d,function(d){e.StartLoop(d.target)});return a.setAttribute("loopName",u),this.menu.appendChild(a)}},{key:"MenuElement",value:function(d,u){var e=document.createElement("li");return e.innerHTML=d,e.addEventListener("click",u),e}},{key:"StartLoop",value:function(d){var u=this;console.log(d.parentElement),console.log(d),d.parentElement.scrollTo(0,d.getBoundingClientRect().top),this.SelectMenuVoice(d),console.log("starting loop"),this.StartLoading(),e(26)("./".concat(d.getAttribute("loopname"))).then(function(d){var e=d.default;u.InstantiateLoop(e)})}},{key:"StartLoading",value:function(){this.loading||(this.loading=document.createElement("div"),this.loading.className="loading",document.body.append(this.loading))}},{key:"StopLoading",value:function(){this.loading&&(this.loading.remove(),this.loading=null)}},{key:"SelectMenuVoice",value:function(d){var u=!0,e=!1,a=void 0;try{for(var n,c=this.menu.childNodes[Symbol.iterator]();!(u=(n=c.next()).done);u=!0){n.value.classList.remove("selected")}}catch(d){e=!0,a=d}finally{try{u||null==c.return||c.return()}finally{if(e)throw a}}d.classList.add("selected")}},{key:"InstantiateLoop",value:function(d){var u=this;this.DestroyScene(),Promise.all([e.e(0),e.e(11)]).then(e.bind(null,27)).then(function(e){u.basicScene=new e.default,u.basicScene.InitScene(),u.loop=new d({scene:u.basicScene,onLoad:function(){return u.StopLoading()}}),u.basicScene.Add(u.loop)})}},{key:"CreateOpenMenuButton",value:function(){var d=this,u=document.createElement("a");u.innerHTML="&#9776",u.setAttribute("id","menu-ctrl"),u.addEventListener("click",function(){return d.ShowHideMenu()}),document.body.appendChild(u)}},{key:"ShowHideMenu",value:function(){var d=this.menuContainer.getAttribute("class");this.menuContainer.classList.remove(d),this.menuContainer.offsetWidth,this.menuContainer.classList.add("hide"===d?"show":"hide")}},{key:"DestroyScene",value:function(){this.basicScene&&(this.basicScene.Destroy(),this.basicScene=null)}}])&&a(u.prototype,t),r&&a(u,r),d}())).Init()},function(d,u,e){var a=e(13);"string"==typeof a&&(a=[[d.i,a,""]]);var n={hmr:!0,transform:void 0,insertInto:void 0};e(1)(a,n);a.locals&&(d.exports=a.locals)},function(d,u,e){(d.exports=e(0)(!1)).push([d.i,'body {\n    width: 100vw;\n    display: flex;\n    flex-direction: row;\n    overflow: hidden;\n    background-color: lightgray;\n}\n\ncanvas {\n    position: absolute;\n    left: 0;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    z-index: -10;\n}\n\n#menu-container {\n    position: absolute;\n    top: 0;\n    background: white;\n    padding: 0.5em 0 0 0.5em;\n    margin: 0;\n    opacity: 0.7;\n    /* height: calc(100vh - 0.5em); */\n    bottom: 0;\n    font-size: 3.5vh;\n}\n\n\n#menu {\n    position: relative;\n    top: 0;\n    padding: 0.5em 0em 0 0.5em;\n    padding-right: 1em;\n    bottom: 0;\n    margin: 0;\n    display: flex;\n    flex-flow: column;\n    overflow: auto;\n    height: calc(100% - 5em);\n}\n\n#menu::after {\n    height: 4em;\n    background-color: red;\n}\n\n/* @media only screen \nand (min-device-width: 768px) \nand (max-device-width: 1024px)\nand (-webkit-min-device-pixel-ratio: 2) { \n    #menu {\n        font-size: 1.3em;\n    }\n}\n\n@media only screen\nand (min-device-width : 360px)\nand (max-device-width : 640px){\n    #menu {\n        font-size: 1.3em;\n    }\n}\n\n@media only screen  \nand (max-device-width: 500px)\nand (-webkit-min-device-pixel-ratio: 3)\nand (orientation: portrait) { \n      #menu {\n          font-size: 1.35em;\n      }\n  }\n\n@media only screen  \nand (max-device-width: 1024px)\nand (-webkit-min-device-pixel-ratio: 3)\nand (orientation: landscape) { \n    #menu {\n        font-size: 1.35em;\n    }\n}\n\n@media only screen \nand (min-device-width: 1025px)\nand (orientation: landscape) {\n    #menu {\n        font-size: 1em;\n    }\n} */\n\n#menu li {\n    margin: 0.1em 0;\n    list-style: none;\n    font-family: monospace;\n    font-variant: all-small-caps;\n    cursor: pointer;\n    position: relative;\n    display: block;\n    margin-bottom: 0.2em;\n    padding: 0.5em 0;\n}\n\n#menu li:hover {\n    text-shadow: 2px 2px gray;\n    left: -2px;\n    top: -2px;\n    color: lightgray;\n}\n\n#menu li.selected {\n    font-weight: bold;\n}\n\n#menu-ctrl {\n    position: absolute;\n    left: 0.1em;\n    bottom: 0.1em;\n    display: block;\n    font-size: 3.5em;\n    color: #f5f5f5;\n    text-shadow: 2px 2px #999;\n    cursor: pointer;\n    transform: translate(35%, 0) scaleX(1.4);\n}\n\n#menu-container.show {\n    animation-name: menu-anim;\n    animation-duration: 0.5s;\n    animation-fill-mode: forwards;\n    animation-direction: normal;\n}\n\n#menu-container.hide {\n    animation-name: menu-anim;\n    animation-duration: 0.5s;\n    animation-fill-mode: forwards;\n    animation-direction: reverse;\n}\n\n@keyframes menu-anim {\n    from {left: -100%}\n    to {left: 0vw}\n}\n\n\n.loading {\n    width: 15vw;\n    height: 15vw;\n    position: absolute;\n    top: calc(50% - 7vw);\n    left: calc(50% - 7vw);\n    border-radius: 7vw;\n    align-content: center;\n    display: flex;\n    z-index: 9999;\n}\n\n.loading::after {\n    content: "LOADING";\n    height: 100%;\n    width: 100%;\n    display: block;\n    text-align: center;\n    align-self: center;\n    vertical-align: middle;\n    line-height: normal;\n    font-size: 3em;\n    font-family: sans-serif;\n    font-weight: bolder;\n}\n\n@keyframes loading {\n    from {transform: translateX(70%);}\n    to {transform: translateX(-100%);}\n  }',""])},function(d,u){d.exports=function(d){var u="undefined"!=typeof window&&window.location;if(!u)throw new Error("fixUrls requires window.location");if(!d||"string"!=typeof d)return d;var e=u.protocol+"//"+u.host,a=e+u.pathname.replace(/\/[^\/]*$/,"/");return d.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(d,u){var n,c=u.trim().replace(/^"(.*)"$/,function(d,u){return u}).replace(/^'(.*)'$/,function(d,u){return u});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(c)?d:(n=0===c.indexOf("//")?c:0===c.indexOf("/")?e+c:a+c.replace(/^\.\//,""),"url("+JSON.stringify(n)+")")})}},function(d,u,e){"use strict";const a=e(16);d.exports=((d,u)=>{if("string"!=typeof d)throw new TypeError("Expected a string");u=void 0===u?"_":u;const e=a("([\\p{Ll}\\d])(\\p{Lu})","g"),n=a("(\\p{Lu}+)(\\p{Lu}[\\p{Ll}\\d]+)","g");return d.replace(e,`$1${u}$2`).replace(n,`$1${u}$2`).toLowerCase()})},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0});var a=l(e(17)),n=l(e(18)),c=l(e(19)),f=l(e(20)),t=l(e(21)),r=l(e(22)),i=l(e(23)),o=l(e(24));function l(d){return d&&d.__esModule?d:{default:d}}(0,n.default)(a.default),(0,c.default)(a.default),(0,f.default)(a.default),(0,t.default)(a.default),(0,r.default)(a.default),(0,i.default)(a.default),(0,o.default)(a.default),u.default=a.default,d.exports=u.default},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0});
/*!
 * XRegExp 4.0.0
 * <xregexp.com>
 * Steven Levithan (c) 2007-2017 MIT License
 */
var a="xregexp",n={astral:!1},c={exec:RegExp.prototype.exec,test:RegExp.prototype.test,match:String.prototype.match,replace:String.prototype.replace,split:String.prototype.split},f={},t={},r={},i=[],o="default",l="class",s={default:/\\(?:0(?:[0-3][0-7]{0,2}|[4-7][0-7]?)?|[1-9]\d*|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|\(\?(?:[:=!]|<[=!])|[?*+]\?|{\d+(?:,\d*)?}\??|[\s\S]/,class:/\\(?:[0-3][0-7]{0,2}|[4-7][0-7]?|x[\dA-Fa-f]{2}|u(?:[\dA-Fa-f]{4}|{[\dA-Fa-f]+})|c[A-Za-z]|[\s\S])|[\s\S]/},m=/\$(?:{([\w$]+)}|<([\w$]+)>|(\d\d?|[\s\S]))/g,b=void 0===c.exec.call(/()??/,"")[1],p=void 0!==/x/.flags,h={}.toString;function _(d){var u=!0;try{new RegExp("",d)}catch(d){u=!1}return u}var g=_("u"),I=_("y"),v={g:!0,i:!0,m:!0,u:g,y:I};function y(d,u,e,n,c){var f=void 0;if(d[a]={captureNames:u},c)return d;if(d.__proto__)d.__proto__=B.prototype;else for(f in B.prototype)d[f]=B.prototype[f];return d[a].source=e,d[a].flags=n?n.split("").sort().join(""):n,d}function x(d){return c.replace.call(d,/([\s\S])(?=[\s\S]*\1)/g,"")}function S(d,u){if(!B.isRegExp(d))throw new TypeError("Type RegExp expected");var e=d[a]||{},n=function(d){return p?d.flags:c.exec.call(/\/([a-z]*)$/i,RegExp.prototype.toString.call(d))[1]}(d),f="",t="",r=null,i=null;return(u=u||{}).removeG&&(t+="g"),u.removeY&&(t+="y"),t&&(n=c.replace.call(n,new RegExp("["+t+"]+","g"),"")),u.addG&&(f+="g"),u.addY&&(f+="y"),f&&(n=x(n+f)),u.isInternalOnly||(void 0!==e.source&&(r=e.source),null!=e.flags&&(i=f?x(e.flags+f):e.flags)),d=y(new RegExp(u.source||d.source,n),function(d){return!(!d[a]||!d[a].captureNames)}(d)?e.captureNames.slice(0):null,r,i,u.isInternalOnly)}function w(d){return parseInt(d,16)}function C(d,u,e){return"("===d.input[d.index-1]||")"===d.input[d.index+d[0].length]||function(d,u,e){return c.test.call(-1!==e.indexOf("x")?/^(?:\s|#[^#\n]*|\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/:/^(?:\(\?#[^)]*\))*(?:[?*+]|{\d+(?:,\d*)?})/,d.slice(u))}(d.input,d.index+d[0].length,e)?"":"(?:)"}function E(d){return parseInt(d,10).toString(16)}function k(d,u){return h.call(d)==="[object "+u+"]"}function L(d){for(;d.length<4;)d="0"+d;return d}function A(d){var u={};return k(d,"String")?(B.forEach(d,/[^\s,]+/,function(d){u[d]=!0}),u):d}function M(d){if(!/^[\w$]$/.test(d))throw new Error("Flag must be a single character A-Za-z0-9_$");v[d]=!0}function O(d,u,e,a,n){for(var c=i.length,f=d[e],t=null,r=void 0,o=void 0;c--;)if(!((o=i[c]).leadChar&&o.leadChar!==f||o.scope!==a&&"all"!==o.scope||o.flag&&-1===u.indexOf(o.flag))&&(r=B.exec(d,o.regex,e,"sticky"))){t={matchLength:r[0].length,output:o.handler.call(n,r,a,u),reparse:o.reparse};break}return t}function P(d){n.astral=d}function T(d){if(null==d)throw new TypeError("Cannot convert null or undefined to object");return d}function B(d,u){if(B.isRegExp(d)){if(void 0!==u)throw new TypeError("Cannot supply flags when copying a RegExp");return S(d)}if(d=void 0===d?"":String(d),u=void 0===u?"":String(u),B.isInstalled("astral")&&-1===u.indexOf("A")&&(u+="A"),r[d]||(r[d]={}),!r[d][u]){for(var e={hasNamedCapture:!1,captureNames:[]},a=o,n="",f=0,t=void 0,i=function(d,u){var e=void 0;if(x(u)!==u)throw new SyntaxError("Invalid duplicate regex flag "+u);for(d=c.replace.call(d,/^\(\?([\w$]+)\)/,function(d,e){if(c.test.call(/[gy]/,e))throw new SyntaxError("Cannot use flag g or y in mode modifier "+d);return u=x(u+e),""}),e=0;e<u.length;++e)if(!v[u[e]])throw new SyntaxError("Unknown regex flag "+u[e]);return{pattern:d,flags:u}}(d,u),m=i.pattern,b=i.flags;f<m.length;){do{(t=O(m,b,f,a,e))&&t.reparse&&(m=m.slice(0,f)+t.output+m.slice(f+t.matchLength))}while(t&&t.reparse);if(t)n+=t.output,f+=t.matchLength||1;else{var p=B.exec(m,s[a],f,"sticky")[0];n+=p,f+=p.length,"["===p&&a===o?a=l:"]"===p&&a===l&&(a=o)}}r[d][u]={pattern:c.replace.call(n,/(?:\(\?:\))+/g,"(?:)"),flags:c.replace.call(b,/[^gimuy]+/g,""),captures:e.hasNamedCapture?e.captureNames:null}}var h=r[d][u];return y(new RegExp(h.pattern,h.flags),h.captures,d,u)}B.prototype=/(?:)/,B.version="4.0.0",B._clipDuplicates=x,B._hasNativeFlag=_,B._dec=w,B._hex=E,B._pad4=L,B.addToken=function(d,u,e){var a=(e=e||{}).optionalFlags,n=void 0;if(e.flag&&M(e.flag),a)for(a=c.split.call(a,""),n=0;n<a.length;++n)M(a[n]);i.push({regex:S(d,{addG:!0,addY:I,isInternalOnly:!0}),handler:u,scope:e.scope||o,flag:e.flag,reparse:e.reparse,leadChar:e.leadChar}),B.cache.flush("patterns")},B.cache=function(d,u){return t[d]||(t[d]={}),t[d][u]||(t[d][u]=B(d,u))},B.cache.flush=function(d){"patterns"===d?r={}:t={}},B.escape=function(d){return c.replace.call(T(d),/[-\[\]{}()*+?.,\\^$|#\s]/g,"\\$&")},B.exec=function(d,u,e,n){var c,t="g",r=!1,i=void 0;(c=I&&!!(n||u.sticky&&!1!==n))?t+="y":n&&(r=!0,t+="FakeY"),u[a]=u[a]||{};var o=u[a][t]||(u[a][t]=S(u,{addG:!0,addY:c,source:r?u.source+"|()":void 0,removeY:!1===n,isInternalOnly:!0}));return e=e||0,o.lastIndex=e,i=f.exec.call(o,d),r&&i&&""===i.pop()&&(i=null),u.global&&(u.lastIndex=i?o.lastIndex:0),i},B.forEach=function(d,u,e){for(var a=0,n=-1,c=void 0;c=B.exec(d,u,a);)e(c,++n,d,u),a=c.index+(c[0].length||1)},B.globalize=function(d){return S(d,{addG:!0})},B.install=function(d){d=A(d),!n.astral&&d.astral&&P(!0)},B.isInstalled=function(d){return!!n[d]},B.isRegExp=function(d){return"[object RegExp]"===h.call(d)},B.match=function(d,u,e){var n=u.global&&"one"!==e||"all"===e,f=(n?"g":"")+(u.sticky?"y":"")||"noGY";u[a]=u[a]||{};var t=u[a][f]||(u[a][f]=S(u,{addG:!!n,removeG:"one"===e,isInternalOnly:!0})),r=c.match.call(T(d),t);return u.global&&(u.lastIndex="one"===e&&r?r.index+r[0].length:0),n?r||[]:r&&r[0]},B.matchChain=function(d,u){return function d(e,a){var n=u[a].regex?u[a]:{regex:u[a]},c=[];function f(d){if(n.backref){if(!(d.hasOwnProperty(n.backref)||+n.backref<d.length))throw new ReferenceError("Backreference to undefined group: "+n.backref);c.push(d[n.backref]||"")}else c.push(d[0])}for(var t=0;t<e.length;++t)B.forEach(e[t],n.regex,f);return a!==u.length-1&&c.length?d(c,a+1):c}([d],0)},B.replace=function(d,u,e,n){var c=B.isRegExp(u),t=u.global&&"one"!==n||"all"===n,r=(t?"g":"")+(u.sticky?"y":"")||"noGY",i=u;c?(u[a]=u[a]||{},i=u[a][r]||(u[a][r]=S(u,{addG:!!t,removeG:"one"===n,isInternalOnly:!0}))):t&&(i=new RegExp(B.escape(String(u)),"g"));var o=f.replace.call(T(d),i,e);return c&&u.global&&(u.lastIndex=0),o},B.replaceEach=function(d,u){var e=void 0,a=void 0;for(e=0;e<u.length;++e)a=u[e],d=B.replace(d,a[0],a[1],a[2]);return d},B.split=function(d,u,e){return f.split.call(T(d),u,e)},B.test=function(d,u,e,a){return!!B.exec(d,u,e,a)},B.uninstall=function(d){d=A(d),n.astral&&d.astral&&P(!1)},B.union=function(d,u,e){var n=(e=e||{}).conjunction||"or",f=0,t=void 0,r=void 0;function i(d,u,e){var a=r[f-t];if(u){if(++f,a)return"(?<"+a+">"}else if(e)return"\\"+(+e+t);return d}if(!k(d,"Array")||!d.length)throw new TypeError("Must provide a nonempty array of patterns to merge");for(var o=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g,l=[],s=void 0,m=0;m<d.length;++m)s=d[m],B.isRegExp(s)?(t=f,r=s[a]&&s[a].captureNames||[],l.push(c.replace.call(B(s.source).source,o,i))):l.push(B.escape(s));var b="none"===n?"":"|";return B(l.join(b),u)},f.exec=function(d){var u=this.lastIndex,e=c.exec.apply(this,arguments);if(e){if(!b&&e.length>1&&-1!==e.indexOf("")){var n=S(this,{removeG:!0,isInternalOnly:!0});c.replace.call(String(d).slice(e.index),n,function(){for(var d=arguments.length,u=Array(d),a=0;a<d;a++)u[a]=arguments[a];for(var n=u.length,c=1;c<n-2;++c)void 0===u[c]&&(e[c]=void 0)})}if(this[a]&&this[a].captureNames)for(var f=1;f<e.length;++f){var t=this[a].captureNames[f-1];t&&(e[t]=e[f])}this.global&&!e[0].length&&this.lastIndex>e.index&&(this.lastIndex=e.index)}return this.global||(this.lastIndex=u),e},f.test=function(d){return!!f.exec.call(this,d)},f.match=function(d){if(B.isRegExp(d)){if(d.global){var u=c.match.apply(this,arguments);return d.lastIndex=0,u}}else d=new RegExp(d);return f.exec.call(d,T(this))},f.replace=function(d,u){var e=B.isRegExp(d),n=void 0,f=void 0,t=void 0;return e?(d[a]&&(f=d[a].captureNames),n=d.lastIndex):d+="",t=k(u,"Function")?c.replace.call(String(this),d,function(){for(var a=arguments.length,n=Array(a),c=0;c<a;c++)n[c]=arguments[c];if(f){n[0]=new String(n[0]);for(var t=0;t<f.length;++t)f[t]&&(n[0][f[t]]=n[t+1])}return e&&d.global&&(d.lastIndex=n[n.length-2]+n[0].length),u.apply(void 0,n)}):c.replace.call(null==this?this:String(this),d,function(){for(var d=arguments.length,e=Array(d),a=0;a<d;a++)e[a]=arguments[a];return c.replace.call(String(u),m,function(d,u,a,n){if(u=u||a){var c=+u;if(c<=e.length-3)return e[c]||"";if((c=f?f.indexOf(u):-1)<0)throw new SyntaxError("Backreference to undefined group "+d);return e[c+1]||""}if("$"===n)return"$";if("&"===n||0==+n)return e[0];if("`"===n)return e[e.length-1].slice(0,e[e.length-2]);if("'"===n)return e[e.length-1].slice(e[e.length-2]+e[0].length);if(n=+n,!isNaN(n)){if(n>e.length-3)throw new SyntaxError("Backreference to undefined group "+d);return e[n]||""}throw new SyntaxError("Invalid token "+d)})}),e&&(d.global?d.lastIndex=0:d.lastIndex=n),t},f.split=function(d,u){if(!B.isRegExp(d))return c.split.apply(this,arguments);var e=String(this),a=[],n=d.lastIndex,f=0,t=void 0;return u=(void 0===u?-1:u)>>>0,B.forEach(e,d,function(d){d.index+d[0].length>f&&(a.push(e.slice(f,d.index)),d.length>1&&d.index<e.length&&Array.prototype.push.apply(a,d.slice(1)),t=d[0].length,f=d.index+t)}),f===e.length?c.test.call(d,"")&&!t||a.push(""):a.push(e.slice(f)),d.lastIndex=n,a.length>u?a.slice(0,u):a},B.addToken(/\\([ABCE-RTUVXYZaeg-mopqyz]|c(?![A-Za-z])|u(?![\dA-Fa-f]{4}|{[\dA-Fa-f]+})|x(?![\dA-Fa-f]{2}))/,function(d,u){if("B"===d[1]&&u===o)return d[0];throw new SyntaxError("Invalid escape "+d[0])},{scope:"all",leadChar:"\\"}),B.addToken(/\\u{([\dA-Fa-f]+)}/,function(d,u,e){var a=w(d[1]);if(a>1114111)throw new SyntaxError("Invalid Unicode code point "+d[0]);if(a<=65535)return"\\u"+L(E(a));if(g&&-1!==e.indexOf("u"))return d[0];throw new SyntaxError("Cannot use Unicode code point above \\u{FFFF} without flag u")},{scope:"all",leadChar:"\\"}),B.addToken(/\[(\^?)\]/,function(d){return d[1]?"[\\s\\S]":"\\b\\B"},{leadChar:"["}),B.addToken(/\(\?#[^)]*\)/,C,{leadChar:"("}),B.addToken(/\s+|#[^\n]*\n?/,C,{flag:"x"}),B.addToken(/\./,function(){return"[\\s\\S]"},{flag:"s",leadChar:"."}),B.addToken(/\\k<([\w$]+)>/,function(d){var u=isNaN(d[1])?this.captureNames.indexOf(d[1])+1:+d[1],e=d.index+d[0].length;if(!u||u>this.captureNames.length)throw new SyntaxError("Backreference to undefined group "+d[0]);return"\\"+u+(e===d.input.length||isNaN(d.input[e])?"":"(?:)")},{leadChar:"\\"}),B.addToken(/\\(\d+)/,function(d,u){if(!(u===o&&/^[1-9]/.test(d[1])&&+d[1]<=this.captureNames.length)&&"0"!==d[1])throw new SyntaxError("Cannot use octal escape or backreference to undefined group "+d[0]);return d[0]},{scope:"all",leadChar:"\\"}),B.addToken(/\(\?P?<([\w$]+)>/,function(d){if(!isNaN(d[1]))throw new SyntaxError("Cannot use integer as capture name "+d[0]);if("length"===d[1]||"__proto__"===d[1])throw new SyntaxError("Cannot use reserved word as capture name "+d[0]);if(-1!==this.captureNames.indexOf(d[1]))throw new SyntaxError("Cannot use same name for multiple groups "+d[0]);return this.captureNames.push(d[1]),this.hasNamedCapture=!0,"("},{leadChar:"("}),B.addToken(/\((?!\?)/,function(d,u,e){return-1!==e.indexOf("n")?"(?:":(this.captureNames.push(null),"(")},{optionalFlags:"n",leadChar:"("}),u.default=B,d.exports=u.default},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0}),
/*!
 * XRegExp.build 4.0.0
 * <xregexp.com>
 * Steven Levithan (c) 2012-2017 MIT License
 */
u.default=function(d){var u="xregexp",e=/(\()(?!\?)|\\([1-9]\d*)|\\[\s\S]|\[(?:[^\\\]]|\\[\s\S])*\]/g,a=d.union([/\({{([\w$]+)}}\)|{{([\w$]+)}}/,e],"g",{conjunction:"or"});function n(d){var u=/^(?:\(\?:\))*\^/,e=/\$(?:\(\?:\))*$/;return u.test(d)&&e.test(d)&&e.test(d.replace(/\\[\s\S]/g,""))?d.replace(u,"").replace(e,""):d}function c(e,a){var n=a?"x":"";return d.isRegExp(e)?e[u]&&e[u].captureNames?e:d(e.source,n):d(e,n)}function f(u){return u instanceof RegExp?u:d.escape(u)}function t(d,u,e){return d["subpattern"+e]=u,d}function r(d,u,e){return d+(u<e.length-1?"{{subpattern"+u+"}}":"")}d.tag=function(u){return function(e){for(var a=arguments.length,n=Array(a>1?a-1:0),c=1;c<a;c++)n[c-1]=arguments[c];var i=n.map(f).reduce(t,{}),o=e.raw.map(r).join("");return d.build(o,i,u)}},d.build=function(f,t,r){var i=-1!==(r=r||"").indexOf("x"),o=/^\(\?([\w$]+)\)/.exec(f);o&&(r=d._clipDuplicates(r+o[1]));var l={};for(var s in t)if(t.hasOwnProperty(s)){var m=c(t[s],i);l[s]={pattern:n(m.source),names:m[u].captureNames||[]}}var b=c(f,i),p=0,h=void 0,_=0,g=[0],I=b[u].captureNames||[],v=b.source.replace(a,function(d,u,a,n,c){var f=u||a,t=void 0,r=void 0,i=void 0;if(f){if(!l.hasOwnProperty(f))throw new ReferenceError("Undefined property "+d);return u?(t=I[_],g[++_]=++p,r="(?<"+(t||f)+">"):r="(?:",h=p,""+r+l[f].pattern.replace(e,function(d,u,e){if(u){if(t=l[f].names[p-h],++p,t)return"(?<"+t+">"}else if(e)return i=+e-1,l[f].names[i]?"\\k<"+l[f].names[i]+">":"\\"+(+e+h);return d})+")"}if(n){if(t=I[_],g[++_]=++p,t)return"(?<"+t+">"}else if(c)return I[i=+c-1]?"\\k<"+I[i]+">":"\\"+g[+c];return d});return d(v,r)}},d.exports=u.default},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0}),
/*!
 * XRegExp.matchRecursive 4.0.0
 * <xregexp.com>
 * Steven Levithan (c) 2009-2017 MIT License
 */
u.default=function(d){function u(d,u,e,a){return{name:d,value:u,start:e,end:a}}d.matchRecursive=function(e,a,n,c,f){f=f||{};var t=-1!==(c=c||"").indexOf("g"),r=-1!==c.indexOf("y"),i=c.replace(/y/g,""),o=f.escapeChar,l=f.valueNames,s=[],m=0,b=0,p=0,h=0,_=void 0,g=void 0,I=void 0,v=void 0,y=void 0;if(a=d(a,i),n=d(n,i),o){if(o.length>1)throw new Error("Cannot use more than one escape character");o=d.escape(o),y=new RegExp("(?:"+o+"[\\S\\s]|(?:(?!"+d.union([a,n],"",{conjunction:"or"}).source+")[^"+o+"])+)+",c.replace(/[^imu]+/g,""))}for(;;){if(o&&(p+=(d.exec(e,y,p,"sticky")||[""])[0].length),I=d.exec(e,a,p),v=d.exec(e,n,p),I&&v&&(I.index<=v.index?v=null:I=null),I||v)p=(b=(I||v).index)+(I||v)[0].length;else if(!m)break;if(r&&!m&&b>h)break;if(I)m||(_=b,g=p),++m;else{if(!v||!m)throw new Error("Unbalanced delimiter found in string");if(!--m&&(l?(l[0]&&_>h&&s.push(u(l[0],e.slice(h,_),h,_)),l[1]&&s.push(u(l[1],e.slice(_,g),_,g)),l[2]&&s.push(u(l[2],e.slice(g,b),g,b)),l[3]&&s.push(u(l[3],e.slice(b,p),b,p))):s.push(e.slice(g,b)),h=p,!t))break}b===p&&++p}return t&&!r&&l&&l[0]&&e.length>h&&s.push(u(l[0],e.slice(h),h,e.length)),s}},d.exports=u.default},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0}),
/*!
 * XRegExp Unicode Base 4.0.0
 * <xregexp.com>
 * Steven Levithan (c) 2008-2017 MIT License
 */
u.default=function(d){var u={},e=d._dec,a=d._hex,n=d._pad4;function c(d){return d.replace(/[- _]+/g,"").toLowerCase()}function f(d){var u=/^\\[xu](.+)/.exec(d);return u?e(u[1]):d.charCodeAt("\\"===d[0]?1:0)}function t(e){var c,t,r;return u[e]["b!"]||(u[e]["b!"]=(c=u[e].bmp,t="",r=-1,d.forEach(c,/(\\x..|\\u....|\\?[\s\S])(?:-(\\x..|\\u....|\\?[\s\S]))?/,function(d){var u=f(d[1]);u>r+1&&(t+="\\u"+n(a(r+1)),u>r+2&&(t+="-\\u"+n(a(u-1)))),r=f(d[2]||d[1])}),r<65535&&(t+="\\u"+n(a(r+1)),r<65534&&(t+="-\\uFFFF")),t))}function r(d,e){var a=e?"a!":"a=";return u[d][a]||(u[d][a]=function(d,e){var a=u[d],n="";return a.bmp&&!a.isBmpLast&&(n="["+a.bmp+"]"+(a.astral?"|":"")),a.astral&&(n+=a.astral),a.isBmpLast&&a.bmp&&(n+=(a.astral?"|":"")+"["+a.bmp+"]"),e?"(?:(?!"+n+")(?:[\ud800-\udbff][\udc00-\udfff]|[\0-￿]))":"(?:"+n+")"}(d,e))}d.addToken(/\\([pP])(?:{(\^?)([^}]*)}|([A-Za-z]))/,function(d,e,a){var n="P"===d[1]||!!d[2],f=-1!==a.indexOf("A"),i=c(d[4]||d[3]),o=u[i];if("P"===d[1]&&d[2])throw new SyntaxError("Invalid double negation "+d[0]);if(!u.hasOwnProperty(i))throw new SyntaxError("Unknown Unicode token "+d[0]);if(o.inverseOf){if(i=c(o.inverseOf),!u.hasOwnProperty(i))throw new ReferenceError("Unicode token missing data "+d[0]+" -> "+o.inverseOf);o=u[i],n=!n}if(!o.bmp&&!f)throw new SyntaxError("Astral mode required for Unicode token "+d[0]);if(f){if("class"===e)throw new SyntaxError("Astral mode does not support Unicode tokens within character classes");return r(i,n)}return"class"===e?n?t(i):o.bmp:(n?"[^":"[")+o.bmp+"]"},{scope:"all",optionalFlags:"A",leadChar:"\\"}),d.addUnicodeData=function(e){for(var a=void 0,n=0;n<e.length;++n){if(!(a=e[n]).name)throw new Error("Unicode token requires name");if(!(a.inverseOf||a.bmp||a.astral))throw new Error("Unicode token has no character data "+a.name);u[c(a.name)]=a,a.alias&&(u[c(a.alias)]=a)}d.cache.flush("patterns")},d._getUnicodeProperty=function(d){var e=c(d);return u[e]}},d.exports=u.default},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0}),
/*!
 * XRegExp Unicode Blocks 4.0.0
 * <xregexp.com>
 * Steven Levithan (c) 2010-2017 MIT License
 * Unicode data by Mathias Bynens <mathiasbynens.be>
 */
u.default=function(d){if(!d.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Blocks");d.addUnicodeData([{name:"InAdlam",astral:"\ud83a[\udd00-\udd5f]"},{name:"InAegean_Numbers",astral:"\ud800[\udd00-\udd3f]"},{name:"InAhom",astral:"\ud805[\udf00-\udf3f]"},{name:"InAlchemical_Symbols",astral:"\ud83d[\udf00-\udf7f]"},{name:"InAlphabetic_Presentation_Forms",bmp:"ﬀ-ﭏ"},{name:"InAnatolian_Hieroglyphs",astral:"\ud811[\udc00-\ude7f]"},{name:"InAncient_Greek_Musical_Notation",astral:"\ud834[\ude00-\ude4f]"},{name:"InAncient_Greek_Numbers",astral:"\ud800[\udd40-\udd8f]"},{name:"InAncient_Symbols",astral:"\ud800[\udd90-\uddcf]"},{name:"InArabic",bmp:"؀-ۿ"},{name:"InArabic_Extended_A",bmp:"ࢠ-ࣿ"},{name:"InArabic_Mathematical_Alphabetic_Symbols",astral:"\ud83b[\ude00-\udeff]"},{name:"InArabic_Presentation_Forms_A",bmp:"ﭐ-﷿"},{name:"InArabic_Presentation_Forms_B",bmp:"ﹰ-\ufeff"},{name:"InArabic_Supplement",bmp:"ݐ-ݿ"},{name:"InArmenian",bmp:"԰-֏"},{name:"InArrows",bmp:"←-⇿"},{name:"InAvestan",astral:"\ud802[\udf00-\udf3f]"},{name:"InBalinese",bmp:"ᬀ-᭿"},{name:"InBamum",bmp:"ꚠ-꛿"},{name:"InBamum_Supplement",astral:"\ud81a[\udc00-\ude3f]"},{name:"InBasic_Latin",bmp:"\0-"},{name:"InBassa_Vah",astral:"\ud81a[\uded0-\udeff]"},{name:"InBatak",bmp:"ᯀ-᯿"},{name:"InBengali",bmp:"ঀ-৿"},{name:"InBhaiksuki",astral:"\ud807[\udc00-\udc6f]"},{name:"InBlock_Elements",bmp:"▀-▟"},{name:"InBopomofo",bmp:"㄀-ㄯ"},{name:"InBopomofo_Extended",bmp:"ㆠ-ㆿ"},{name:"InBox_Drawing",bmp:"─-╿"},{name:"InBrahmi",astral:"\ud804[\udc00-\udc7f]"},{name:"InBraille_Patterns",bmp:"⠀-⣿"},{name:"InBuginese",bmp:"ᨀ-᨟"},{name:"InBuhid",bmp:"ᝀ-᝟"},{name:"InByzantine_Musical_Symbols",astral:"\ud834[\udc00-\udcff]"},{name:"InCJK_Compatibility",bmp:"㌀-㏿"},{name:"InCJK_Compatibility_Forms",bmp:"︰-﹏"},{name:"InCJK_Compatibility_Ideographs",bmp:"豈-﫿"},{name:"InCJK_Compatibility_Ideographs_Supplement",astral:"\ud87e[\udc00-\ude1f]"},{name:"InCJK_Radicals_Supplement",bmp:"⺀-⻿"},{name:"InCJK_Strokes",bmp:"㇀-㇯"},{name:"InCJK_Symbols_and_Punctuation",bmp:"　-〿"},{name:"InCJK_Unified_Ideographs",bmp:"一-鿿"},{name:"InCJK_Unified_Ideographs_Extension_A",bmp:"㐀-䶿"},{name:"InCJK_Unified_Ideographs_Extension_B",astral:"[\ud840-\ud868][\udc00-\udfff]|\ud869[\udc00-\udedf]"},{name:"InCJK_Unified_Ideographs_Extension_C",astral:"\ud869[\udf00-\udfff]|[\ud86a-\ud86c][\udc00-\udfff]|\ud86d[\udc00-\udf3f]"},{name:"InCJK_Unified_Ideographs_Extension_D",astral:"\ud86d[\udf40-\udfff]|\ud86e[\udc00-\udc1f]"},{name:"InCJK_Unified_Ideographs_Extension_E",astral:"\ud86e[\udc20-\udfff]|[\ud86f-\ud872][\udc00-\udfff]|\ud873[\udc00-\udeaf]"},{name:"InCarian",astral:"\ud800[\udea0-\udedf]"},{name:"InCaucasian_Albanian",astral:"\ud801[\udd30-\udd6f]"},{name:"InChakma",astral:"\ud804[\udd00-\udd4f]"},{name:"InCham",bmp:"ꨀ-꩟"},{name:"InCherokee",bmp:"Ꭰ-᏿"},{name:"InCherokee_Supplement",bmp:"ꭰ-ꮿ"},{name:"InCombining_Diacritical_Marks",bmp:"̀-ͯ"},{name:"InCombining_Diacritical_Marks_Extended",bmp:"᪰-᫿"},{name:"InCombining_Diacritical_Marks_Supplement",bmp:"᷀-᷿"},{name:"InCombining_Diacritical_Marks_for_Symbols",bmp:"⃐-⃿"},{name:"InCombining_Half_Marks",bmp:"︠-︯"},{name:"InCommon_Indic_Number_Forms",bmp:"꠰-꠿"},{name:"InControl_Pictures",bmp:"␀-␿"},{name:"InCoptic",bmp:"Ⲁ-⳿"},{name:"InCoptic_Epact_Numbers",astral:"\ud800[\udee0-\udeff]"},{name:"InCounting_Rod_Numerals",astral:"\ud834[\udf60-\udf7f]"},{name:"InCuneiform",astral:"\ud808[\udc00-\udfff]"},{name:"InCuneiform_Numbers_and_Punctuation",astral:"\ud809[\udc00-\udc7f]"},{name:"InCurrency_Symbols",bmp:"₠-⃏"},{name:"InCypriot_Syllabary",astral:"\ud802[\udc00-\udc3f]"},{name:"InCyrillic",bmp:"Ѐ-ӿ"},{name:"InCyrillic_Extended_A",bmp:"ⷠ-ⷿ"},{name:"InCyrillic_Extended_B",bmp:"Ꙁ-ꚟ"},{name:"InCyrillic_Extended_C",bmp:"ᲀ-᲏"},{name:"InCyrillic_Supplement",bmp:"Ԁ-ԯ"},{name:"InDeseret",astral:"\ud801[\udc00-\udc4f]"},{name:"InDevanagari",bmp:"ऀ-ॿ"},{name:"InDevanagari_Extended",bmp:"꣠-ꣿ"},{name:"InDingbats",bmp:"✀-➿"},{name:"InDomino_Tiles",astral:"\ud83c[\udc30-\udc9f]"},{name:"InDuployan",astral:"\ud82f[\udc00-\udc9f]"},{name:"InEarly_Dynastic_Cuneiform",astral:"\ud809[\udc80-\udd4f]"},{name:"InEgyptian_Hieroglyphs",astral:"\ud80c[\udc00-\udfff]|\ud80d[\udc00-\udc2f]"},{name:"InElbasan",astral:"\ud801[\udd00-\udd2f]"},{name:"InEmoticons",astral:"\ud83d[\ude00-\ude4f]"},{name:"InEnclosed_Alphanumeric_Supplement",astral:"\ud83c[\udd00-\uddff]"},{name:"InEnclosed_Alphanumerics",bmp:"①-⓿"},{name:"InEnclosed_CJK_Letters_and_Months",bmp:"㈀-㋿"},{name:"InEnclosed_Ideographic_Supplement",astral:"\ud83c[\ude00-\udeff]"},{name:"InEthiopic",bmp:"ሀ-፿"},{name:"InEthiopic_Extended",bmp:"ⶀ-⷟"},{name:"InEthiopic_Extended_A",bmp:"꬀-꬯"},{name:"InEthiopic_Supplement",bmp:"ᎀ-᎟"},{name:"InGeneral_Punctuation",bmp:" -⁯"},{name:"InGeometric_Shapes",bmp:"■-◿"},{name:"InGeometric_Shapes_Extended",astral:"\ud83d[\udf80-\udfff]"},{name:"InGeorgian",bmp:"Ⴀ-ჿ"},{name:"InGeorgian_Supplement",bmp:"ⴀ-⴯"},{name:"InGlagolitic",bmp:"Ⰰ-ⱟ"},{name:"InGlagolitic_Supplement",astral:"\ud838[\udc00-\udc2f]"},{name:"InGothic",astral:"\ud800[\udf30-\udf4f]"},{name:"InGrantha",astral:"\ud804[\udf00-\udf7f]"},{name:"InGreek_Extended",bmp:"ἀ-῿"},{name:"InGreek_and_Coptic",bmp:"Ͱ-Ͽ"},{name:"InGujarati",bmp:"઀-૿"},{name:"InGurmukhi",bmp:"਀-੿"},{name:"InHalfwidth_and_Fullwidth_Forms",bmp:"＀-￯"},{name:"InHangul_Compatibility_Jamo",bmp:"㄰-㆏"},{name:"InHangul_Jamo",bmp:"ᄀ-ᇿ"},{name:"InHangul_Jamo_Extended_A",bmp:"ꥠ-꥿"},{name:"InHangul_Jamo_Extended_B",bmp:"ힰ-퟿"},{name:"InHangul_Syllables",bmp:"가-힯"},{name:"InHanunoo",bmp:"ᜠ-᜿"},{name:"InHatran",astral:"\ud802[\udce0-\udcff]"},{name:"InHebrew",bmp:"֐-׿"},{name:"InHigh_Private_Use_Surrogates",bmp:"\udb80-\udbff"},{name:"InHigh_Surrogates",bmp:"\ud800-\udb7f"},{name:"InHiragana",bmp:"぀-ゟ"},{name:"InIPA_Extensions",bmp:"ɐ-ʯ"},{name:"InIdeographic_Description_Characters",bmp:"⿰-⿿"},{name:"InIdeographic_Symbols_and_Punctuation",astral:"\ud81b[\udfe0-\udfff]"},{name:"InImperial_Aramaic",astral:"\ud802[\udc40-\udc5f]"},{name:"InInscriptional_Pahlavi",astral:"\ud802[\udf60-\udf7f]"},{name:"InInscriptional_Parthian",astral:"\ud802[\udf40-\udf5f]"},{name:"InJavanese",bmp:"ꦀ-꧟"},{name:"InKaithi",astral:"\ud804[\udc80-\udccf]"},{name:"InKana_Supplement",astral:"\ud82c[\udc00-\udcff]"},{name:"InKanbun",bmp:"㆐-㆟"},{name:"InKangxi_Radicals",bmp:"⼀-⿟"},{name:"InKannada",bmp:"ಀ-೿"},{name:"InKatakana",bmp:"゠-ヿ"},{name:"InKatakana_Phonetic_Extensions",bmp:"ㇰ-ㇿ"},{name:"InKayah_Li",bmp:"꤀-꤯"},{name:"InKharoshthi",astral:"\ud802[\ude00-\ude5f]"},{name:"InKhmer",bmp:"ក-៿"},{name:"InKhmer_Symbols",bmp:"᧠-᧿"},{name:"InKhojki",astral:"\ud804[\ude00-\ude4f]"},{name:"InKhudawadi",astral:"\ud804[\udeb0-\udeff]"},{name:"InLao",bmp:"຀-໿"},{name:"InLatin_Extended_Additional",bmp:"Ḁ-ỿ"},{name:"InLatin_Extended_A",bmp:"Ā-ſ"},{name:"InLatin_Extended_B",bmp:"ƀ-ɏ"},{name:"InLatin_Extended_C",bmp:"Ⱡ-Ɀ"},{name:"InLatin_Extended_D",bmp:"꜠-ꟿ"},{name:"InLatin_Extended_E",bmp:"ꬰ-꭯"},{name:"InLatin_1_Supplement",bmp:"-ÿ"},{name:"InLepcha",bmp:"ᰀ-ᱏ"},{name:"InLetterlike_Symbols",bmp:"℀-⅏"},{name:"InLimbu",bmp:"ᤀ-᥏"},{name:"InLinear_A",astral:"\ud801[\ude00-\udf7f]"},{name:"InLinear_B_Ideograms",astral:"\ud800[\udc80-\udcff]"},{name:"InLinear_B_Syllabary",astral:"\ud800[\udc00-\udc7f]"},{name:"InLisu",bmp:"ꓐ-꓿"},{name:"InLow_Surrogates",bmp:"\udc00-\udfff"},{name:"InLycian",astral:"\ud800[\ude80-\ude9f]"},{name:"InLydian",astral:"\ud802[\udd20-\udd3f]"},{name:"InMahajani",astral:"\ud804[\udd50-\udd7f]"},{name:"InMahjong_Tiles",astral:"\ud83c[\udc00-\udc2f]"},{name:"InMalayalam",bmp:"ഀ-ൿ"},{name:"InMandaic",bmp:"ࡀ-࡟"},{name:"InManichaean",astral:"\ud802[\udec0-\udeff]"},{name:"InMarchen",astral:"\ud807[\udc70-\udcbf]"},{name:"InMathematical_Alphanumeric_Symbols",astral:"\ud835[\udc00-\udfff]"},{name:"InMathematical_Operators",bmp:"∀-⋿"},{name:"InMeetei_Mayek",bmp:"ꯀ-꯿"},{name:"InMeetei_Mayek_Extensions",bmp:"ꫠ-꫿"},{name:"InMende_Kikakui",astral:"\ud83a[\udc00-\udcdf]"},{name:"InMeroitic_Cursive",astral:"\ud802[\udda0-\uddff]"},{name:"InMeroitic_Hieroglyphs",astral:"\ud802[\udd80-\udd9f]"},{name:"InMiao",astral:"\ud81b[\udf00-\udf9f]"},{name:"InMiscellaneous_Mathematical_Symbols_A",bmp:"⟀-⟯"},{name:"InMiscellaneous_Mathematical_Symbols_B",bmp:"⦀-⧿"},{name:"InMiscellaneous_Symbols",bmp:"☀-⛿"},{name:"InMiscellaneous_Symbols_and_Arrows",bmp:"⬀-⯿"},{name:"InMiscellaneous_Symbols_and_Pictographs",astral:"\ud83c[\udf00-\udfff]|\ud83d[\udc00-\uddff]"},{name:"InMiscellaneous_Technical",bmp:"⌀-⏿"},{name:"InModi",astral:"\ud805[\ude00-\ude5f]"},{name:"InModifier_Tone_Letters",bmp:"꜀-ꜟ"},{name:"InMongolian",bmp:"᠀-᢯"},{name:"InMongolian_Supplement",astral:"\ud805[\ude60-\ude7f]"},{name:"InMro",astral:"\ud81a[\ude40-\ude6f]"},{name:"InMultani",astral:"\ud804[\ude80-\udeaf]"},{name:"InMusical_Symbols",astral:"\ud834[\udd00-\uddff]"},{name:"InMyanmar",bmp:"က-႟"},{name:"InMyanmar_Extended_A",bmp:"ꩠ-ꩿ"},{name:"InMyanmar_Extended_B",bmp:"ꧠ-꧿"},{name:"InNKo",bmp:"߀-߿"},{name:"InNabataean",astral:"\ud802[\udc80-\udcaf]"},{name:"InNew_Tai_Lue",bmp:"ᦀ-᧟"},{name:"InNewa",astral:"\ud805[\udc00-\udc7f]"},{name:"InNumber_Forms",bmp:"⅐-↏"},{name:"InOgham",bmp:" -᚟"},{name:"InOl_Chiki",bmp:"᱐-᱿"},{name:"InOld_Hungarian",astral:"\ud803[\udc80-\udcff]"},{name:"InOld_Italic",astral:"\ud800[\udf00-\udf2f]"},{name:"InOld_North_Arabian",astral:"\ud802[\ude80-\ude9f]"},{name:"InOld_Permic",astral:"\ud800[\udf50-\udf7f]"},{name:"InOld_Persian",astral:"\ud800[\udfa0-\udfdf]"},{name:"InOld_South_Arabian",astral:"\ud802[\ude60-\ude7f]"},{name:"InOld_Turkic",astral:"\ud803[\udc00-\udc4f]"},{name:"InOptical_Character_Recognition",bmp:"⑀-⑟"},{name:"InOriya",bmp:"଀-୿"},{name:"InOrnamental_Dingbats",astral:"\ud83d[\ude50-\ude7f]"},{name:"InOsage",astral:"\ud801[\udcb0-\udcff]"},{name:"InOsmanya",astral:"\ud801[\udc80-\udcaf]"},{name:"InPahawh_Hmong",astral:"\ud81a[\udf00-\udf8f]"},{name:"InPalmyrene",astral:"\ud802[\udc60-\udc7f]"},{name:"InPau_Cin_Hau",astral:"\ud806[\udec0-\udeff]"},{name:"InPhags_pa",bmp:"ꡀ-꡿"},{name:"InPhaistos_Disc",astral:"\ud800[\uddd0-\uddff]"},{name:"InPhoenician",astral:"\ud802[\udd00-\udd1f]"},{name:"InPhonetic_Extensions",bmp:"ᴀ-ᵿ"},{name:"InPhonetic_Extensions_Supplement",bmp:"ᶀ-ᶿ"},{name:"InPlaying_Cards",astral:"\ud83c[\udca0-\udcff]"},{name:"InPrivate_Use_Area",bmp:"-"},{name:"InPsalter_Pahlavi",astral:"\ud802[\udf80-\udfaf]"},{name:"InRejang",bmp:"ꤰ-꥟"},{name:"InRumi_Numeral_Symbols",astral:"\ud803[\ude60-\ude7f]"},{name:"InRunic",bmp:"ᚠ-᛿"},{name:"InSamaritan",bmp:"ࠀ-࠿"},{name:"InSaurashtra",bmp:"ꢀ-꣟"},{name:"InSharada",astral:"\ud804[\udd80-\udddf]"},{name:"InShavian",astral:"\ud801[\udc50-\udc7f]"},{name:"InShorthand_Format_Controls",astral:"\ud82f[\udca0-\udcaf]"},{name:"InSiddham",astral:"\ud805[\udd80-\uddff]"},{name:"InSinhala",bmp:"඀-෿"},{name:"InSinhala_Archaic_Numbers",astral:"\ud804[\udde0-\uddff]"},{name:"InSmall_Form_Variants",bmp:"﹐-﹯"},{name:"InSora_Sompeng",astral:"\ud804[\udcd0-\udcff]"},{name:"InSpacing_Modifier_Letters",bmp:"ʰ-˿"},{name:"InSpecials",bmp:"￰-￿"},{name:"InSundanese",bmp:"ᮀ-ᮿ"},{name:"InSundanese_Supplement",bmp:"᳀-᳏"},{name:"InSuperscripts_and_Subscripts",bmp:"⁰-₟"},{name:"InSupplemental_Arrows_A",bmp:"⟰-⟿"},{name:"InSupplemental_Arrows_B",bmp:"⤀-⥿"},{name:"InSupplemental_Arrows_C",astral:"\ud83e[\udc00-\udcff]"},{name:"InSupplemental_Mathematical_Operators",bmp:"⨀-⫿"},{name:"InSupplemental_Punctuation",bmp:"⸀-⹿"},{name:"InSupplemental_Symbols_and_Pictographs",astral:"\ud83e[\udd00-\uddff]"},{name:"InSupplementary_Private_Use_Area_A",astral:"[\udb80-\udbbf][\udc00-\udfff]"},{name:"InSupplementary_Private_Use_Area_B",astral:"[\udbc0-\udbff][\udc00-\udfff]"},{name:"InSutton_SignWriting",astral:"\ud836[\udc00-\udeaf]"},{name:"InSyloti_Nagri",bmp:"ꠀ-꠯"},{name:"InSyriac",bmp:"܀-ݏ"},{name:"InTagalog",bmp:"ᜀ-ᜟ"},{name:"InTagbanwa",bmp:"ᝠ-᝿"},{name:"InTags",astral:"\udb40[\udc00-\udc7f]"},{name:"InTai_Le",bmp:"ᥐ-᥿"},{name:"InTai_Tham",bmp:"ᨠ-᪯"},{name:"InTai_Viet",bmp:"ꪀ-꫟"},{name:"InTai_Xuan_Jing_Symbols",astral:"\ud834[\udf00-\udf5f]"},{name:"InTakri",astral:"\ud805[\ude80-\udecf]"},{name:"InTamil",bmp:"஀-௿"},{name:"InTangut",astral:"[\ud81c-\ud821][\udc00-\udfff]"},{name:"InTangut_Components",astral:"\ud822[\udc00-\udeff]"},{name:"InTelugu",bmp:"ఀ-౿"},{name:"InThaana",bmp:"ހ-޿"},{name:"InThai",bmp:"฀-๿"},{name:"InTibetan",bmp:"ༀ-࿿"},{name:"InTifinagh",bmp:"ⴰ-⵿"},{name:"InTirhuta",astral:"\ud805[\udc80-\udcdf]"},{name:"InTransport_and_Map_Symbols",astral:"\ud83d[\ude80-\udeff]"},{name:"InUgaritic",astral:"\ud800[\udf80-\udf9f]"},{name:"InUnified_Canadian_Aboriginal_Syllabics",bmp:"᐀-ᙿ"},{name:"InUnified_Canadian_Aboriginal_Syllabics_Extended",bmp:"ᢰ-᣿"},{name:"InVai",bmp:"ꔀ-꘿"},{name:"InVariation_Selectors",bmp:"︀-️"},{name:"InVariation_Selectors_Supplement",astral:"\udb40[\udd00-\uddef]"},{name:"InVedic_Extensions",bmp:"᳐-᳿"},{name:"InVertical_Forms",bmp:"︐-︟"},{name:"InWarang_Citi",astral:"\ud806[\udca0-\udcff]"},{name:"InYi_Radicals",bmp:"꒐-꓏"},{name:"InYi_Syllables",bmp:"ꀀ-꒏"},{name:"InYijing_Hexagram_Symbols",bmp:"䷀-䷿"}])},d.exports=u.default},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0}),
/*!
 * XRegExp Unicode Categories 4.0.0
 * <xregexp.com>
 * Steven Levithan (c) 2010-2017 MIT License
 * Unicode data by Mathias Bynens <mathiasbynens.be>
 */
u.default=function(d){if(!d.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Categories");d.addUnicodeData([{name:"C",alias:"Other",isBmpLast:!0,bmp:"\0--­͸͹΀-΃΋΍΢԰՗՘ՠֈ֋֌֐׈-׏׫-ׯ׵-؅؜؝۝܎܏݋݌޲-޿߻-߿࠮࠯࠿࡜࡝࡟-࢟ࢵࢾ-࣓࣢঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥ৼ-਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੶-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸ૺ-଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୕୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿ఄ఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౷಄಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-ഀഄ഍഑഻഼൅൉൐-൓൤൥඀ඁ඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅ຆຉ຋ຌຎ-ຓຘຠ຤຦ຨຩຬ຺຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠎᠏᠚-᠟ᡸ-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯ᪿ-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌Ᲊ-Ჿ᳈-᳏᳷ᳺ-᳿᷶-᷺἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿​-‏‪-‮⁠-⁯⁲⁳₏₝-₟₿-⃏⃱-⃿↌-↏⏿␧-␿⑋-⑟⭴⭵⮖⮗⮺-⮼⯉⯒-⯫⯰-⯿Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹅-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄ㄮ-㄰㆏ㆻ-ㆿ㇤-㇯㈟㋿䶶-䶿鿖-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿ꞯꞸ-ꟶ꠬-꠯꠺-꠿꡸-꡿꣆-꣍꣚-꣟ꣾꣿ꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯ꭦ-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽-＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￻￾￿",astral:"\ud800[\udc0c\udc27\udc3b\udc3e\udc4e\udc4f\udc5e-\udc7f\udcfb-\udcff\udd03-\udd06\udd34-\udd36\udd8f\udd9c-\udd9f\udda1-\uddcf\uddfe-\ude7f\ude9d-\ude9f\uded1-\udedf\udefc-\udeff\udf24-\udf2f\udf4b-\udf4f\udf7b-\udf7f\udf9e\udfc4-\udfc7\udfd6-\udfff]|\ud801[\udc9e\udc9f\udcaa-\udcaf\udcd4-\udcd7\udcfc-\udcff\udd28-\udd2f\udd64-\udd6e\udd70-\uddff\udf37-\udf3f\udf56-\udf5f\udf68-\udfff]|\ud802[\udc06\udc07\udc09\udc36\udc39-\udc3b\udc3d\udc3e\udc56\udc9f-\udca6\udcb0-\udcdf\udcf3\udcf6-\udcfa\udd1c-\udd1e\udd3a-\udd3e\udd40-\udd7f\uddb8-\uddbb\uddd0\uddd1\ude04\ude07-\ude0b\ude14\ude18\ude34-\ude37\ude3b-\ude3e\ude48-\ude4f\ude59-\ude5f\udea0-\udebf\udee7-\udeea\udef7-\udeff\udf36-\udf38\udf56\udf57\udf73-\udf77\udf92-\udf98\udf9d-\udfa8\udfb0-\udfff]|\ud803[\udc49-\udc7f\udcb3-\udcbf\udcf3-\udcf9\udd00-\ude5f\ude7f-\udfff]|\ud804[\udc4e-\udc51\udc70-\udc7e\udcbd\udcc2-\udccf\udce9-\udcef\udcfa-\udcff\udd35\udd44-\udd4f\udd77-\udd7f\uddce\uddcf\udde0\uddf5-\uddff\ude12\ude3f-\ude7f\ude87\ude89\ude8e\ude9e\udeaa-\udeaf\udeeb-\udeef\udefa-\udeff\udf04\udf0d\udf0e\udf11\udf12\udf29\udf31\udf34\udf3a\udf3b\udf45\udf46\udf49\udf4a\udf4e\udf4f\udf51-\udf56\udf58-\udf5c\udf64\udf65\udf6d-\udf6f\udf75-\udfff]|\ud805[\udc5a\udc5c\udc5e-\udc7f\udcc8-\udccf\udcda-\udd7f\uddb6\uddb7\uddde-\uddff\ude45-\ude4f\ude5a-\ude5f\ude6d-\ude7f\udeb8-\udebf\udeca-\udeff\udf1a-\udf1c\udf2c-\udf2f\udf40-\udfff]|\ud806[\udc00-\udc9f\udcf3-\udcfe\udd00-\udebf\udef9-\udfff]|\ud807[\udc09\udc37\udc46-\udc4f\udc6d-\udc6f\udc90\udc91\udca8\udcb7-\udfff]|\ud808[\udf9a-\udfff]|\ud809[\udc6f\udc75-\udc7f\udd44-\udfff]|[\ud80a\ud80b\ud80e-\ud810\ud812-\ud819\ud823-\ud82b\ud82d\ud82e\ud830-\ud833\ud837\ud839\ud83f\ud874-\ud87d\ud87f-\udb3f\udb41-\udbff][\udc00-\udfff]|\ud80d[\udc2f-\udfff]|\ud811[\ude47-\udfff]|\ud81a[\ude39-\ude3f\ude5f\ude6a-\ude6d\ude70-\udecf\udeee\udeef\udef6-\udeff\udf46-\udf4f\udf5a\udf62\udf78-\udf7c\udf90-\udfff]|\ud81b[\udc00-\udeff\udf45-\udf4f\udf7f-\udf8e\udfa0-\udfdf\udfe1-\udfff]|\ud821[\udfed-\udfff]|\ud822[\udef3-\udfff]|\ud82c[\udc02-\udfff]|\ud82f[\udc6b-\udc6f\udc7d-\udc7f\udc89-\udc8f\udc9a\udc9b\udca0-\udfff]|\ud834[\udcf6-\udcff\udd27\udd28\udd73-\udd7a\udde9-\uddff\ude46-\udeff\udf57-\udf5f\udf72-\udfff]|\ud835[\udc55\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc4\udd06\udd0b\udd0c\udd15\udd1d\udd3a\udd3f\udd45\udd47-\udd49\udd51\udea6\udea7\udfcc\udfcd]|\ud836[\ude8c-\ude9a\udea0\udeb0-\udfff]|\ud838[\udc07\udc19\udc1a\udc22\udc25\udc2b-\udfff]|\ud83a[\udcc5\udcc6\udcd7-\udcff\udd4b-\udd4f\udd5a-\udd5d\udd60-\udfff]|\ud83b[\udc00-\uddff\ude04\ude20\ude23\ude25\ude26\ude28\ude33\ude38\ude3a\ude3c-\ude41\ude43-\ude46\ude48\ude4a\ude4c\ude50\ude53\ude55\ude56\ude58\ude5a\ude5c\ude5e\ude60\ude63\ude65\ude66\ude6b\ude73\ude78\ude7d\ude7f\ude8a\ude9c-\udea0\udea4\udeaa\udebc-\udeef\udef2-\udfff]|\ud83c[\udc2c-\udc2f\udc94-\udc9f\udcaf\udcb0\udcc0\udcd0\udcf6-\udcff\udd0d-\udd0f\udd2f\udd6c-\udd6f\uddad-\udde5\ude03-\ude0f\ude3c-\ude3f\ude49-\ude4f\ude52-\udeff]|\ud83d[\uded3-\udedf\udeed-\udeef\udef7-\udeff\udf74-\udf7f\udfd5-\udfff]|\ud83e[\udc0c-\udc0f\udc48-\udc4f\udc5a-\udc5f\udc88-\udc8f\udcae-\udd0f\udd1f\udd28-\udd2f\udd31\udd32\udd3f\udd4c-\udd4f\udd5f-\udd7f\udd92-\uddbf\uddc1-\udfff]|\ud869[\uded7-\udeff]|\ud86d[\udf35-\udf3f]|\ud86e[\udc1e\udc1f]|\ud873[\udea2-\udfff]|\ud87e[\ude1e-\udfff]|\udb40[\udc00-\udcff\uddf0-\udfff]"},{name:"Cc",alias:"Control",bmp:"\0--"},{name:"Cf",alias:"Format",bmp:"­؀-؅؜۝܏࣢᠎​-‏‪-‮⁠-⁤⁦-⁯\ufeff￹-￻",astral:"𑂽|\ud82f[\udca0-\udca3]|\ud834[\udd73-\udd7a]|\udb40[\udc01\udc20-\udc7f]"},{name:"Cn",alias:"Unassigned",bmp:"͸͹΀-΃΋΍΢԰՗՘ՠֈ֋֌֐׈-׏׫-ׯ׵-׿؝܎݋݌޲-޿߻-߿࠮࠯࠿࡜࡝࡟-࢟ࢵࢾ-࣓঄঍঎঑঒঩঱঳-঵঺঻৅৆৉৊৏-৖৘-৛৞৤৥ৼ-਀਄਋-਎਑਒਩਱਴਷਺਻਽੃-੆੉੊੎-੐੒-੘੝੟-੥੶-઀઄઎઒઩઱઴઺઻૆૊૎૏૑-૟૤૥૲-૸ૺ-଀଄଍଎଑଒଩଱଴଺଻୅୆୉୊୎-୕୘-୛୞୤୥୸-஁஄஋-஍஑஖-஘஛஝஠-஢஥-஧஫-஭஺-஽௃-௅௉௎௏௑-௖௘-௥௻-௿ఄ఍఑఩఺-఼౅౉౎-౔౗౛-౟౤౥౰-౷಄಍಑಩಴಺಻೅೉೎-೔೗-ೝ೟೤೥೰ೳ-ഀഄ഍഑഻഼൅൉൐-൓൤൥඀ඁ඄඗-඙඲඼඾඿෇-෉෋-෎෕෗෠-෥෰෱෵-฀฻-฾๜-຀຃຅ຆຉ຋ຌຎ-ຓຘຠ຤຦ຨຩຬ຺຾຿໅໇໎໏໚໛໠-໿཈཭-཰྘྽࿍࿛-࿿჆჈-჌჎჏቉቎቏቗቙቞቟኉኎኏኱኶኷኿዁዆዇዗጑጖጗፛፜፽-፿᎚-᎟᏶᏷᏾᏿᚝-᚟᛹-᛿ᜍ᜕-ᜟ᜷-᜿᝔-᝟᝭᝱᝴-᝿៞៟៪-៯៺-៿᠏᠚-᠟ᡸ-᡿᢫-᢯᣶-᣿᤟᤬-᤯᤼-᤿᥁-᥃᥮᥯᥵-᥿᦬-᦯᧊-᧏᧛-᧝᨜᨝᩟᩽᩾᪊-᪏᪚-᪟᪮᪯ᪿ-᫿ᭌ-᭏᭽-᭿᯴-᯻᰸-᰺᱊-᱌Ᲊ-Ჿ᳈-᳏᳷ᳺ-᳿᷶-᷺἖἗἞἟὆὇὎὏὘὚὜὞὾὿᾵῅῔῕῜῰῱῵῿⁥⁲⁳₏₝-₟₿-⃏⃱-⃿↌-↏⏿␧-␿⑋-⑟⭴⭵⮖⮗⮺-⮼⯉⯒-⯫⯰-⯿Ⱟⱟ⳴-⳸⴦⴨-⴬⴮⴯⵨-⵮⵱-⵾⶗-⶟⶧⶯⶷⶿⷇⷏⷗⷟⹅-⹿⺚⻴-⻿⿖-⿯⿼-⿿぀゗゘㄀-㄄ㄮ-㄰㆏ㆻ-ㆿ㇤-㇯㈟㋿䶶-䶿鿖-鿿꒍-꒏꓇-꓏꘬-꘿꛸-꛿ꞯꞸ-ꟶ꠬-꠯꠺-꠿꡸-꡿꣆-꣍꣚-꣟ꣾꣿ꥔-꥞꥽-꥿꧎꧚-꧝꧿꨷-꨿꩎꩏꩚꩛꫃-꫚꫷-꬀꬇꬈꬏꬐꬗-꬟꬧꬯ꭦ-꭯꯮꯯꯺-꯿힤-힯퟇-퟊퟼-퟿﩮﩯﫚-﫿﬇-﬒﬘-﬜﬷﬽﬿﭂﭅﯂-﯒﵀-﵏﶐﶑﷈-﷯﷾﷿︚-︟﹓﹧﹬-﹯﹵﻽﻾＀﾿-￁￈￉￐￑￘￙￝-￟￧￯-￸￾￿",astral:"\ud800[\udc0c\udc27\udc3b\udc3e\udc4e\udc4f\udc5e-\udc7f\udcfb-\udcff\udd03-\udd06\udd34-\udd36\udd8f\udd9c-\udd9f\udda1-\uddcf\uddfe-\ude7f\ude9d-\ude9f\uded1-\udedf\udefc-\udeff\udf24-\udf2f\udf4b-\udf4f\udf7b-\udf7f\udf9e\udfc4-\udfc7\udfd6-\udfff]|\ud801[\udc9e\udc9f\udcaa-\udcaf\udcd4-\udcd7\udcfc-\udcff\udd28-\udd2f\udd64-\udd6e\udd70-\uddff\udf37-\udf3f\udf56-\udf5f\udf68-\udfff]|\ud802[\udc06\udc07\udc09\udc36\udc39-\udc3b\udc3d\udc3e\udc56\udc9f-\udca6\udcb0-\udcdf\udcf3\udcf6-\udcfa\udd1c-\udd1e\udd3a-\udd3e\udd40-\udd7f\uddb8-\uddbb\uddd0\uddd1\ude04\ude07-\ude0b\ude14\ude18\ude34-\ude37\ude3b-\ude3e\ude48-\ude4f\ude59-\ude5f\udea0-\udebf\udee7-\udeea\udef7-\udeff\udf36-\udf38\udf56\udf57\udf73-\udf77\udf92-\udf98\udf9d-\udfa8\udfb0-\udfff]|\ud803[\udc49-\udc7f\udcb3-\udcbf\udcf3-\udcf9\udd00-\ude5f\ude7f-\udfff]|\ud804[\udc4e-\udc51\udc70-\udc7e\udcc2-\udccf\udce9-\udcef\udcfa-\udcff\udd35\udd44-\udd4f\udd77-\udd7f\uddce\uddcf\udde0\uddf5-\uddff\ude12\ude3f-\ude7f\ude87\ude89\ude8e\ude9e\udeaa-\udeaf\udeeb-\udeef\udefa-\udeff\udf04\udf0d\udf0e\udf11\udf12\udf29\udf31\udf34\udf3a\udf3b\udf45\udf46\udf49\udf4a\udf4e\udf4f\udf51-\udf56\udf58-\udf5c\udf64\udf65\udf6d-\udf6f\udf75-\udfff]|\ud805[\udc5a\udc5c\udc5e-\udc7f\udcc8-\udccf\udcda-\udd7f\uddb6\uddb7\uddde-\uddff\ude45-\ude4f\ude5a-\ude5f\ude6d-\ude7f\udeb8-\udebf\udeca-\udeff\udf1a-\udf1c\udf2c-\udf2f\udf40-\udfff]|\ud806[\udc00-\udc9f\udcf3-\udcfe\udd00-\udebf\udef9-\udfff]|\ud807[\udc09\udc37\udc46-\udc4f\udc6d-\udc6f\udc90\udc91\udca8\udcb7-\udfff]|\ud808[\udf9a-\udfff]|\ud809[\udc6f\udc75-\udc7f\udd44-\udfff]|[\ud80a\ud80b\ud80e-\ud810\ud812-\ud819\ud823-\ud82b\ud82d\ud82e\ud830-\ud833\ud837\ud839\ud83f\ud874-\ud87d\ud87f-\udb3f\udb41-\udb7f][\udc00-\udfff]|\ud80d[\udc2f-\udfff]|\ud811[\ude47-\udfff]|\ud81a[\ude39-\ude3f\ude5f\ude6a-\ude6d\ude70-\udecf\udeee\udeef\udef6-\udeff\udf46-\udf4f\udf5a\udf62\udf78-\udf7c\udf90-\udfff]|\ud81b[\udc00-\udeff\udf45-\udf4f\udf7f-\udf8e\udfa0-\udfdf\udfe1-\udfff]|\ud821[\udfed-\udfff]|\ud822[\udef3-\udfff]|\ud82c[\udc02-\udfff]|\ud82f[\udc6b-\udc6f\udc7d-\udc7f\udc89-\udc8f\udc9a\udc9b\udca4-\udfff]|\ud834[\udcf6-\udcff\udd27\udd28\udde9-\uddff\ude46-\udeff\udf57-\udf5f\udf72-\udfff]|\ud835[\udc55\udc9d\udca0\udca1\udca3\udca4\udca7\udca8\udcad\udcba\udcbc\udcc4\udd06\udd0b\udd0c\udd15\udd1d\udd3a\udd3f\udd45\udd47-\udd49\udd51\udea6\udea7\udfcc\udfcd]|\ud836[\ude8c-\ude9a\udea0\udeb0-\udfff]|\ud838[\udc07\udc19\udc1a\udc22\udc25\udc2b-\udfff]|\ud83a[\udcc5\udcc6\udcd7-\udcff\udd4b-\udd4f\udd5a-\udd5d\udd60-\udfff]|\ud83b[\udc00-\uddff\ude04\ude20\ude23\ude25\ude26\ude28\ude33\ude38\ude3a\ude3c-\ude41\ude43-\ude46\ude48\ude4a\ude4c\ude50\ude53\ude55\ude56\ude58\ude5a\ude5c\ude5e\ude60\ude63\ude65\ude66\ude6b\ude73\ude78\ude7d\ude7f\ude8a\ude9c-\udea0\udea4\udeaa\udebc-\udeef\udef2-\udfff]|\ud83c[\udc2c-\udc2f\udc94-\udc9f\udcaf\udcb0\udcc0\udcd0\udcf6-\udcff\udd0d-\udd0f\udd2f\udd6c-\udd6f\uddad-\udde5\ude03-\ude0f\ude3c-\ude3f\ude49-\ude4f\ude52-\udeff]|\ud83d[\uded3-\udedf\udeed-\udeef\udef7-\udeff\udf74-\udf7f\udfd5-\udfff]|\ud83e[\udc0c-\udc0f\udc48-\udc4f\udc5a-\udc5f\udc88-\udc8f\udcae-\udd0f\udd1f\udd28-\udd2f\udd31\udd32\udd3f\udd4c-\udd4f\udd5f-\udd7f\udd92-\uddbf\uddc1-\udfff]|\ud869[\uded7-\udeff]|\ud86d[\udf35-\udf3f]|\ud86e[\udc1e\udc1f]|\ud873[\udea2-\udfff]|\ud87e[\ude1e-\udfff]|\udb40[\udc00\udc02-\udc1f\udc80-\udcff\uddf0-\udfff]|[\udbbf\udbff][\udffe\udfff]"},{name:"Co",alias:"Private_Use",bmp:"-",astral:"[\udb80-\udbbe\udbc0-\udbfe][\udc00-\udfff]|[\udbbf\udbff][\udc00-\udffd]"},{name:"Cs",alias:"Surrogate",bmp:"\ud800-\udfff"},{name:"L",alias:"Letter",bmp:"A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևא-תװ-ײؠ-يٮٯٱ-ۓەۥۦۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪߴߵߺࠀ-ࠕࠚࠤࠨࡀ-ࡘࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॱ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๆກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໆໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៗៜᠠ-ᡷᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᪧᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱽᲀ-ᲈᳩ-ᳬᳮ-ᳱᳵᳶᴀ-ᶿḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎↃↄⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⸯ々〆〱-〵〻〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙿ-ꚝꚠ-ꛥꜗ-ꜟꜢ-ꞈꞋ-ꞮꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛ-ꫝꫠ-ꫪꫲ-ꫴꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf30-\udf40\udf42-\udf49\udf50-\udf75\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf]|\ud801[\udc00-\udc9d\udcb0-\udcd3\udcd8-\udcfb\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00\ude10-\ude13\ude15-\ude17\ude19-\ude33\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48\udc80-\udcb2\udcc0-\udcf2]|\ud804[\udc03-\udc37\udc83-\udcaf\udcd0-\udce8\udd03-\udd26\udd50-\udd72\udd76\udd83-\uddb2\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude2b\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udede\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d\udf50\udf5d-\udf61]|\ud805[\udc00-\udc34\udc47-\udc4a\udc80-\udcaf\udcc4\udcc5\udcc7\udd80-\uddae\uddd8-\udddb\ude00-\ude2f\ude44\ude80-\udeaa\udf00-\udf19]|\ud806[\udca0-\udcdf\udcff\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc2e\udc40\udc72-\udc8f]|\ud808[\udc00-\udf99]|\ud809[\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf2f\udf40-\udf43\udf63-\udf77\udf7d-\udf8f]|\ud81b[\udf00-\udf44\udf50\udf93-\udf9f\udfe0]|\ud821[\udc00-\udfec]|\ud822[\udc00-\udef2]|\ud82c[\udc00\udc01]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udec0\udec2-\udeda\udedc-\udefa\udefc-\udf14\udf16-\udf34\udf36-\udf4e\udf50-\udf6e\udf70-\udf88\udf8a-\udfa8\udfaa-\udfc2\udfc4-\udfcb]|\ud83a[\udc00-\udcc4\udd00-\udd43]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]"},{name:"Ll",alias:"Lowercase_Letter",bmp:"a-zµß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʯͱͳͷͻ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯա-ևᏸ-ᏽᲀ-ᲈᴀ-ᴫᵫ-ᵷᵹ-ᶚḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎↄⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱻⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯꝱ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞵꞷꟺꬰ-ꭚꭠ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",astral:"\ud801[\udc28-\udc4f\udcd8-\udcfb]|\ud803[\udcc0-\udcf2]|\ud806[\udcc0-\udcdf]|\ud835[\udc1a-\udc33\udc4e-\udc54\udc56-\udc67\udc82-\udc9b\udcb6-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udccf\udcea-\udd03\udd1e-\udd37\udd52-\udd6b\udd86-\udd9f\uddba-\uddd3\uddee-\ude07\ude22-\ude3b\ude56-\ude6f\ude8a-\udea5\udec2-\udeda\udedc-\udee1\udefc-\udf14\udf16-\udf1b\udf36-\udf4e\udf50-\udf55\udf70-\udf88\udf8a-\udf8f\udfaa-\udfc2\udfc4-\udfc9\udfcb]|\ud83a[\udd22-\udd43]"},{name:"Lm",alias:"Modifier_Letter",bmp:"ʰ-ˁˆ-ˑˠ-ˤˬˮʹͺՙـۥۦߴߵߺࠚࠤࠨॱๆໆჼៗᡃᪧᱸ-ᱽᴬ-ᵪᵸᶛ-ᶿⁱⁿₐ-ₜⱼⱽⵯⸯ々〱-〵〻ゝゞー-ヾꀕꓸ-ꓽꘌꙿꚜꚝꜗ-ꜟꝰꞈꟸꟹꧏꧦꩰꫝꫳꫴꭜ-ꭟｰﾞﾟ",astral:"\ud81a[\udf40-\udf43]|\ud81b[\udf93-\udf9f\udfe0]"},{name:"Lo",alias:"Other_Letter",bmp:"ªºƻǀ-ǃʔא-תװ-ײؠ-ؿف-يٮٯٱ-ۓەۮۯۺ-ۼۿܐܒ-ܯݍ-ޥޱߊ-ߪࠀ-ࠕࡀ-ࡘࢠ-ࢴࢶ-ࢽऄ-हऽॐक़-ॡॲ-ঀঅ-ঌএঐও-নপ-রলশ-হঽৎড়ঢ়য়-ৡৰৱਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਖ਼-ੜਫ਼ੲ-ੴઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽૐૠૡૹଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽଡ଼ଢ଼ୟ-ୡୱஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹௐఅ-ఌఎ-ఐఒ-నప-హఽౘ-ౚౠౡಀಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽೞೠೡೱೲഅ-ഌഎ-ഐഒ-ഺഽൎൔ-ൖൟ-ൡൺ-ൿඅ-ඖක-නඳ-රලව-ෆก-ะาำเ-ๅກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ະາຳຽເ-ໄໜ-ໟༀཀ-ཇཉ-ཬྈ-ྌက-ဪဿၐ-ၕၚ-ၝၡၥၦၮ-ၰၵ-ႁႎა-ჺჽ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚᎀ-ᎏᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛱ-ᛸᜀ-ᜌᜎ-ᜑᜠ-ᜱᝀ-ᝑᝠ-ᝬᝮ-ᝰក-ឳៜᠠ-ᡂᡄ-ᡷᢀ-ᢄᢇ-ᢨᢪᢰ-ᣵᤀ-ᤞᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨖᨠ-ᩔᬅ-ᬳᭅ-ᭋᮃ-ᮠᮮᮯᮺ-ᯥᰀ-ᰣᱍ-ᱏᱚ-ᱷᳩ-ᳬᳮ-ᳱᳵᳶℵ-ℸⴰ-ⵧⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞ〆〼ぁ-ゖゟァ-ヺヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꀔꀖ-ꒌꓐ-ꓷꔀ-ꘋꘐ-ꘟꘪꘫꙮꚠ-ꛥꞏꟷꟻ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠢꡀ-ꡳꢂ-ꢳꣲ-ꣷꣻꣽꤊ-ꤥꤰ-ꥆꥠ-ꥼꦄ-ꦲꧠ-ꧤꧧ-ꧯꧺ-ꧾꨀ-ꨨꩀ-ꩂꩄ-ꩋꩠ-ꩯꩱ-ꩶꩺꩾ-ꪯꪱꪵꪶꪹ-ꪽꫀꫂꫛꫜꫠ-ꫪꫲꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꯀ-ꯢ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎יִײַ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼｦ-ｯｱ-ﾝﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf30-\udf40\udf42-\udf49\udf50-\udf75\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf]|\ud801[\udc50-\udc9d\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00\ude10-\ude13\ude15-\ude17\ude19-\ude33\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48]|\ud804[\udc03-\udc37\udc83-\udcaf\udcd0-\udce8\udd03-\udd26\udd50-\udd72\udd76\udd83-\uddb2\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude2b\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udede\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d\udf50\udf5d-\udf61]|\ud805[\udc00-\udc34\udc47-\udc4a\udc80-\udcaf\udcc4\udcc5\udcc7\udd80-\uddae\uddd8-\udddb\ude00-\ude2f\ude44\ude80-\udeaa\udf00-\udf19]|\ud806[\udcff\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc2e\udc40\udc72-\udc8f]|\ud808[\udc00-\udf99]|\ud809[\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf2f\udf63-\udf77\udf7d-\udf8f]|\ud81b[\udf00-\udf44\udf50]|\ud821[\udc00-\udfec]|\ud822[\udc00-\udef2]|\ud82c[\udc00\udc01]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99]|\ud83a[\udc00-\udcc4]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]"},{name:"Lt",alias:"Titlecase_Letter",bmp:"ǅǈǋǲᾈ-ᾏᾘ-ᾟᾨ-ᾯᾼῌῼ"},{name:"Lu",alias:"Uppercase_Letter",bmp:"A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅↃⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶＡ-Ｚ",astral:"\ud801[\udc00-\udc27\udcb0-\udcd3]|\ud803[\udc80-\udcb2]|\ud806[\udca0-\udcbf]|\ud835[\udc00-\udc19\udc34-\udc4d\udc68-\udc81\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb5\udcd0-\udce9\udd04\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd38\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd6c-\udd85\udda0-\uddb9\uddd4-\udded\ude08-\ude21\ude3c-\ude55\ude70-\ude89\udea8-\udec0\udee2-\udefa\udf1c-\udf34\udf56-\udf6e\udf90-\udfa8\udfca]|\ud83a[\udd00-\udd21]"},{name:"M",alias:"Mark",bmp:"̀-ͯ҃-҉֑-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣔ-ࣣ࣡-ःऺ-़ा-ॏ॑-ॗॢॣঁ-ঃ়া-ৄেৈো-্ৗৢৣਁ-ਃ਼ਾ-ੂੇੈੋ-੍ੑੰੱੵઁ-ઃ઼ા-ૅે-ૉો-્ૢૣଁ-ଃ଼ା-ୄେୈୋ-୍ୖୗୢୣஂா-ூெ-ைொ-்ௗఀ-ఃా-ౄె-ైొ-్ౕౖౢౣಁ-ಃ಼ಾ-ೄೆ-ೈೊ-್ೕೖೢೣഁ-ഃാ-ൄെ-ൈൊ-്ൗൢൣංඃ්ා-ුූෘ-ෟෲෳัิ-ฺ็-๎ັິ-ູົຼ່-ໍ༹༘༙༵༷༾༿ཱ-྄྆྇ྍ-ྗྙ-ྼ࿆ါ-ှၖ-ၙၞ-ၠၢ-ၤၧ-ၭၱ-ၴႂ-ႍႏႚ-ႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤫᤰ-᤻ᨗ-ᨛᩕ-ᩞ᩠-᩿᩼᪰-᪾ᬀ-ᬄ᬴-᭄᭫-᭳ᮀ-ᮂᮡ-ᮭ᯦-᯳ᰤ-᰷᳐-᳔᳒-᳨᳭ᳲ-᳴᳸᳹᷀-᷵᷻-᷿⃐-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〯꙯-꙲ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠣ-ꠧꢀꢁꢴ-ꣅ꣠-꣱ꤦ-꤭ꥇ-꥓ꦀ-ꦃ꦳-꧀ꧥꨩ-ꨶꩃꩌꩍꩻ-ꩽꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫫ-ꫯꫵ꫶ꯣ-ꯪ꯬꯭ﬞ︀-️︠-︯",astral:"\ud800[\uddfd\udee0\udf76-\udf7a]|\ud802[\ude01-\ude03\ude05\ude06\ude0c-\ude0f\ude38-\ude3a\ude3f\udee5\udee6]|\ud804[\udc00-\udc02\udc38-\udc46\udc7f-\udc82\udcb0-\udcba\udd00-\udd02\udd27-\udd34\udd73\udd80-\udd82\uddb3-\uddc0\uddca-\uddcc\ude2c-\ude37\ude3e\udedf-\udeea\udf00-\udf03\udf3c\udf3e-\udf44\udf47\udf48\udf4b-\udf4d\udf57\udf62\udf63\udf66-\udf6c\udf70-\udf74]|\ud805[\udc35-\udc46\udcb0-\udcc3\uddaf-\uddb5\uddb8-\uddc0\udddc\udddd\ude30-\ude40\udeab-\udeb7\udf1d-\udf2b]|\ud807[\udc2f-\udc36\udc38-\udc3f\udc92-\udca7\udca9-\udcb6]|\ud81a[\udef0-\udef4\udf30-\udf36]|\ud81b[\udf51-\udf7e\udf8f-\udf92]|\ud82f[\udc9d\udc9e]|\ud834[\udd65-\udd69\udd6d-\udd72\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad\ude42-\ude44]|\ud836[\ude00-\ude36\ude3b-\ude6c\ude75\ude84\ude9b-\ude9f\udea1-\udeaf]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udcd0-\udcd6\udd44-\udd4a]|\udb40[\udd00-\uddef]"},{name:"Mc",alias:"Spacing_Mark",bmp:"ःऻा-ीॉ-ौॎॏংঃা-ীেৈোৌৗਃਾ-ੀઃા-ીૉોૌଂଃାୀେୈୋୌୗாிுூெ-ைொ-ௌௗఁ-ఃు-ౄಂಃಾೀ-ೄೇೈೊೋೕೖംഃാ-ീെ-ൈൊ-ൌൗංඃා-ෑෘ-ෟෲෳ༾༿ཿါာေးျြၖၗၢ-ၤၧ-ၭႃႄႇ-ႌႏႚ-ႜាើ-ៅះៈᤣ-ᤦᤩ-ᤫᤰᤱᤳ-ᤸᨙᨚᩕᩗᩡᩣᩤᩭ-ᩲᬄᬵᬻᬽ-ᭁᭃ᭄ᮂᮡᮦᮧ᮪ᯧᯪ-ᯬᯮ᯲᯳ᰤ-ᰫᰴᰵ᳡ᳲᳳ〮〯ꠣꠤꠧꢀꢁꢴ-ꣃꥒ꥓ꦃꦴꦵꦺꦻꦽ-꧀ꨯꨰꨳꨴꩍꩻꩽꫫꫮꫯꫵꯣꯤꯦꯧꯩꯪ꯬",astral:"\ud804[\udc00\udc02\udc82\udcb0-\udcb2\udcb7\udcb8\udd2c\udd82\uddb3-\uddb5\uddbf\uddc0\ude2c-\ude2e\ude32\ude33\ude35\udee0-\udee2\udf02\udf03\udf3e\udf3f\udf41-\udf44\udf47\udf48\udf4b-\udf4d\udf57\udf62\udf63]|\ud805[\udc35-\udc37\udc40\udc41\udc45\udcb0-\udcb2\udcb9\udcbb-\udcbe\udcc1\uddaf-\uddb1\uddb8-\uddbb\uddbe\ude30-\ude32\ude3b\ude3c\ude3e\udeac\udeae\udeaf\udeb6\udf20\udf21\udf26]|\ud807[\udc2f\udc3e\udca9\udcb1\udcb4]|\ud81b[\udf51-\udf7e]|\ud834[\udd65\udd66\udd6d-\udd72]"},{name:"Me",alias:"Enclosing_Mark",bmp:"҈҉᪾⃝-⃠⃢-⃤꙰-꙲"},{name:"Mn",alias:"Nonspacing_Mark",bmp:"̀-ͯ҃-֑҇-ׇֽֿׁׂׅׄؐ-ًؚ-ٰٟۖ-ۜ۟-۪ۤۧۨ-ܑۭܰ-݊ަ-ް߫-߳ࠖ-࠙ࠛ-ࠣࠥ-ࠧࠩ-࡙࠭-࡛ࣔ-ࣣ࣡-ंऺ़ु-ै्॑-ॗॢॣঁ়ু-ৄ্ৢৣਁਂ਼ੁੂੇੈੋ-੍ੑੰੱੵઁં઼ુ-ૅેૈ્ૢૣଁ଼ିୁ-ୄ୍ୖୢୣஂீ்ఀా-ీె-ైొ-్ౕౖౢౣಁ಼ಿೆೌ್ೢೣഁു-ൄ്ൢൣ්ි-ුූัิ-ฺ็-๎ັິ-ູົຼ່-ໍཱ༹༘༙༵༷-ཾྀ-྄྆྇ྍ-ྗྙ-ྼ࿆ိ-ူဲ-့္်ွှၘၙၞ-ၠၱ-ၴႂႅႆႍႝ፝-፟ᜒ-᜔ᜲ-᜴ᝒᝓᝲᝳ឴឵ិ-ួំ៉-៓៝᠋-᠍ᢅᢆᢩᤠ-ᤢᤧᤨᤲ᤹-᤻ᨘᨗᨛᩖᩘ-ᩞ᩠ᩢᩥ-ᩬᩳ-᩿᩼᪰-᪽ᬀ-ᬃ᬴ᬶ-ᬺᬼᭂ᭫-᭳ᮀᮁᮢ-ᮥᮨᮩ᮫-ᮭ᯦ᯨᯩᯭᯯ-ᯱᰬ-ᰳᰶ᰷᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷵᷻-᷿⃐-⃥⃜⃡-⃰⳯-⵿⳱ⷠ-〪ⷿ-゙゚〭꙯ꙴ-꙽ꚞꚟ꛰꛱ꠂ꠆ꠋꠥꠦ꣄ꣅ꣠-꣱ꤦ-꤭ꥇ-ꥑꦀ-ꦂ꦳ꦶ-ꦹꦼꧥꨩ-ꨮꨱꨲꨵꨶꩃꩌꩼꪰꪲ-ꪴꪷꪸꪾ꪿꫁ꫬꫭ꫶ꯥꯨ꯭ﬞ︀-️︠-︯",astral:"\ud800[\uddfd\udee0\udf76-\udf7a]|\ud802[\ude01-\ude03\ude05\ude06\ude0c-\ude0f\ude38-\ude3a\ude3f\udee5\udee6]|\ud804[\udc01\udc38-\udc46\udc7f-\udc81\udcb3-\udcb6\udcb9\udcba\udd00-\udd02\udd27-\udd2b\udd2d-\udd34\udd73\udd80\udd81\uddb6-\uddbe\uddca-\uddcc\ude2f-\ude31\ude34\ude36\ude37\ude3e\udedf\udee3-\udeea\udf00\udf01\udf3c\udf40\udf66-\udf6c\udf70-\udf74]|\ud805[\udc38-\udc3f\udc42-\udc44\udc46\udcb3-\udcb8\udcba\udcbf\udcc0\udcc2\udcc3\uddb2-\uddb5\uddbc\uddbd\uddbf\uddc0\udddc\udddd\ude33-\ude3a\ude3d\ude3f\ude40\udeab\udead\udeb0-\udeb5\udeb7\udf1d-\udf1f\udf22-\udf25\udf27-\udf2b]|\ud807[\udc30-\udc36\udc38-\udc3d\udc3f\udc92-\udca7\udcaa-\udcb0\udcb2\udcb3\udcb5\udcb6]|\ud81a[\udef0-\udef4\udf30-\udf36]|\ud81b[\udf8f-\udf92]|\ud82f[\udc9d\udc9e]|\ud834[\udd67-\udd69\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad\ude42-\ude44]|\ud836[\ude00-\ude36\ude3b-\ude6c\ude75\ude84\ude9b-\ude9f\udea1-\udeaf]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udcd0-\udcd6\udd44-\udd4a]|\udb40[\udd00-\uddef]"},{name:"N",alias:"Number",bmp:"0-9²³¹¼-¾٠-٩۰-۹߀-߉०-९০-৯৴-৹੦-੯૦-૯୦-୯୲-୷௦-௲౦-౯౸-౾೦-೯൘-൞൦-൸෦-෯๐-๙໐-໙༠-༳၀-၉႐-႙፩-፼ᛮ-ᛰ០-៩៰-៹᠐-᠙᥆-᥏᧐-᧚᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙⁰⁴-⁹₀-₉⅐-ↂↅ-↉①-⒛⓪-⓿❶-➓⳽〇〡-〩〸-〺㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꘠-꘩ꛦ-ꛯ꠰-꠵꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",astral:"\ud800[\udd07-\udd33\udd40-\udd78\udd8a\udd8b\udee1-\udefb\udf20-\udf23\udf41\udf4a\udfd1-\udfd5]|\ud801[\udca0-\udca9]|\ud802[\udc58-\udc5f\udc79-\udc7f\udca7-\udcaf\udcfb-\udcff\udd16-\udd1b\uddbc\uddbd\uddc0-\uddcf\uddd2-\uddff\ude40-\ude47\ude7d\ude7e\ude9d-\ude9f\udeeb-\udeef\udf58-\udf5f\udf78-\udf7f\udfa9-\udfaf]|\ud803[\udcfa-\udcff\ude60-\ude7e]|\ud804[\udc52-\udc6f\udcf0-\udcf9\udd36-\udd3f\uddd0-\uddd9\udde1-\uddf4\udef0-\udef9]|\ud805[\udc50-\udc59\udcd0-\udcd9\ude50-\ude59\udec0-\udec9\udf30-\udf3b]|\ud806[\udce0-\udcf2]|\ud807[\udc50-\udc6c]|\ud809[\udc00-\udc6e]|\ud81a[\ude60-\ude69\udf50-\udf59\udf5b-\udf61]|\ud834[\udf60-\udf71]|\ud835[\udfce-\udfff]|\ud83a[\udcc7-\udccf\udd50-\udd59]|\ud83c[\udd00-\udd0c]"},{name:"Nd",alias:"Decimal_Number",bmp:"0-9٠-٩۰-۹߀-߉०-९০-৯੦-੯૦-૯୦-୯௦-௯౦-౯೦-೯൦-൯෦-෯๐-๙໐-໙༠-༩၀-၉႐-႙០-៩᠐-᠙᥆-᥏᧐-᧙᪀-᪉᪐-᪙᭐-᭙᮰-᮹᱀-᱉᱐-᱙꘠-꘩꣐-꣙꤀-꤉꧐-꧙꧰-꧹꩐-꩙꯰-꯹０-９",astral:"\ud801[\udca0-\udca9]|\ud804[\udc66-\udc6f\udcf0-\udcf9\udd36-\udd3f\uddd0-\uddd9\udef0-\udef9]|\ud805[\udc50-\udc59\udcd0-\udcd9\ude50-\ude59\udec0-\udec9\udf30-\udf39]|\ud806[\udce0-\udce9]|\ud807[\udc50-\udc59]|\ud81a[\ude60-\ude69\udf50-\udf59]|\ud835[\udfce-\udfff]|\ud83a[\udd50-\udd59]"},{name:"Nl",alias:"Letter_Number",bmp:"ᛮ-ᛰⅠ-ↂↅ-ↈ〇〡-〩〸-〺ꛦ-ꛯ",astral:"\ud800[\udd40-\udd74\udf41\udf4a\udfd1-\udfd5]|\ud809[\udc00-\udc6e]"},{name:"No",alias:"Other_Number",bmp:"²³¹¼-¾৴-৹୲-୷௰-௲౸-౾൘-൞൰-൸༪-༳፩-፼៰-៹᧚⁰⁴-⁹₀-₉⅐-⅟↉①-⒛⓪-⓿❶-➓⳽㆒-㆕㈠-㈩㉈-㉏㉑-㉟㊀-㊉㊱-㊿꠰-꠵",astral:"\ud800[\udd07-\udd33\udd75-\udd78\udd8a\udd8b\udee1-\udefb\udf20-\udf23]|\ud802[\udc58-\udc5f\udc79-\udc7f\udca7-\udcaf\udcfb-\udcff\udd16-\udd1b\uddbc\uddbd\uddc0-\uddcf\uddd2-\uddff\ude40-\ude47\ude7d\ude7e\ude9d-\ude9f\udeeb-\udeef\udf58-\udf5f\udf78-\udf7f\udfa9-\udfaf]|\ud803[\udcfa-\udcff\ude60-\ude7e]|\ud804[\udc52-\udc65\udde1-\uddf4]|\ud805[\udf3a\udf3b]|\ud806[\udcea-\udcf2]|\ud807[\udc5a-\udc6c]|\ud81a[\udf5b-\udf61]|\ud834[\udf60-\udf71]|\ud83a[\udcc7-\udccf]|\ud83c[\udd00-\udd0c]"},{name:"P",alias:"Punctuation",bmp:"!-#%-\\x2A,-/:;\\x3F@\\x5B-\\x5D_\\x7B}¡§«¶·»¿;·՚-՟։֊־׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰૰෴๏๚๛༄-༒༔༺-༽྅࿐-࿔࿙࿚၊-၏჻፠-፨᐀᙭᙮᚛᚜᛫-᛭᜵᜶។-៖៘-៚᠀-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‐-‧‰-⁃⁅-⁑⁓-⁞⁽⁾₍₎⌈-⌋〈〉❨-❵⟅⟆⟦-⟯⦃-⦘⧘-⧛⧼⧽⳹-⳼⳾⳿⵰⸀-⸮⸰-⹄、-〃〈-】〔-〟〰〽゠・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫﴾﴿︐-︙︰-﹒﹔-﹡﹣﹨﹪﹫！-＃％-＊，-／：；？＠［-］＿｛｝｟-･",astral:"\ud800[\udd00-\udd02\udf9f\udfd0]|𐕯|\ud802[\udc57\udd1f\udd3f\ude50-\ude58\ude7f\udef0-\udef6\udf39-\udf3f\udf99-\udf9c]|\ud804[\udc47-\udc4d\udcbb\udcbc\udcbe-\udcc1\udd40-\udd43\udd74\udd75\uddc5-\uddc9\uddcd\udddb\udddd-\udddf\ude38-\ude3d\udea9]|\ud805[\udc4b-\udc4f\udc5b\udc5d\udcc6\uddc1-\uddd7\ude41-\ude43\ude60-\ude6c\udf3c-\udf3e]|\ud807[\udc41-\udc45\udc70\udc71]|\ud809[\udc70-\udc74]|\ud81a[\ude6e\ude6f\udef5\udf37-\udf3b\udf44]|𛲟|\ud836[\ude87-\ude8b]|\ud83a[\udd5e\udd5f]"},{name:"Pc",alias:"Connector_Punctuation",bmp:"_‿⁀⁔︳︴﹍-﹏＿"},{name:"Pd",alias:"Dash_Punctuation",bmp:"\\x2D֊־᐀᠆‐-―⸗⸚⸺⸻⹀〜〰゠︱︲﹘﹣－"},{name:"Pe",alias:"Close_Punctuation",bmp:"\\x29\\x5D}༻༽᚜⁆⁾₎⌉⌋〉❩❫❭❯❱❳❵⟆⟧⟩⟫⟭⟯⦄⦆⦈⦊⦌⦎⦐⦒⦔⦖⦘⧙⧛⧽⸣⸥⸧⸩〉》」』】〕〗〙〛〞〟﴾︘︶︸︺︼︾﹀﹂﹄﹈﹚﹜﹞）］｝｠｣"},{name:"Pf",alias:"Final_Punctuation",bmp:"»’”›⸃⸅⸊⸍⸝⸡"},{name:"Pi",alias:"Initial_Punctuation",bmp:"«‘‛“‟‹⸂⸄⸉⸌⸜⸠"},{name:"Po",alias:"Other_Punctuation",bmp:"!-#%-'\\x2A,\\x2E/:;\\x3F@\\x5C¡§¶·¿;·՚-՟։׀׃׆׳״؉؊،؍؛؞؟٪-٭۔܀-܍߷-߹࠰-࠾࡞।॥॰૰෴๏๚๛༄-༒༔྅࿐-࿔࿙࿚၊-၏჻፠-፨᙭᙮᛫-᛭᜵᜶។-៖៘-៚᠀-᠅᠇-᠊᥄᥅᨞᨟᪠-᪦᪨-᪭᭚-᭠᯼-᯿᰻-᰿᱾᱿᳀-᳇᳓‖‗†-‧‰-‸※-‾⁁-⁃⁇-⁑⁓⁕-⁞⳹-⳼⳾⳿⵰⸀⸁⸆-⸈⸋⸎-⸖⸘⸙⸛⸞⸟⸪-⸮⸰-⸹⸼-⸿⹁⹃⹄、-〃〽・꓾꓿꘍-꘏꙳꙾꛲-꛷꡴-꡷꣎꣏꣸-꣺꣼꤮꤯꥟꧁-꧍꧞꧟꩜-꩟꫞꫟꫰꫱꯫︐-︖︙︰﹅﹆﹉-﹌﹐-﹒﹔-﹗﹟-﹡﹨﹪﹫！-＃％-＇＊，．／：；？＠＼｡､･",astral:"\ud800[\udd00-\udd02\udf9f\udfd0]|𐕯|\ud802[\udc57\udd1f\udd3f\ude50-\ude58\ude7f\udef0-\udef6\udf39-\udf3f\udf99-\udf9c]|\ud804[\udc47-\udc4d\udcbb\udcbc\udcbe-\udcc1\udd40-\udd43\udd74\udd75\uddc5-\uddc9\uddcd\udddb\udddd-\udddf\ude38-\ude3d\udea9]|\ud805[\udc4b-\udc4f\udc5b\udc5d\udcc6\uddc1-\uddd7\ude41-\ude43\ude60-\ude6c\udf3c-\udf3e]|\ud807[\udc41-\udc45\udc70\udc71]|\ud809[\udc70-\udc74]|\ud81a[\ude6e\ude6f\udef5\udf37-\udf3b\udf44]|𛲟|\ud836[\ude87-\ude8b]|\ud83a[\udd5e\udd5f]"},{name:"Ps",alias:"Open_Punctuation",bmp:"\\x28\\x5B\\x7B༺༼᚛‚„⁅⁽₍⌈⌊〈❨❪❬❮❰❲❴⟅⟦⟨⟪⟬⟮⦃⦅⦇⦉⦋⦍⦏⦑⦓⦕⦗⧘⧚⧼⸢⸤⸦⸨⹂〈《「『【〔〖〘〚〝﴿︗︵︷︹︻︽︿﹁﹃﹇﹙﹛﹝（［｛｟｢"},{name:"S",alias:"Symbol",bmp:"\\x24\\x2B<->\\x5E`\\x7C~¢-¦¨©¬®-±´¸×÷˂-˅˒-˟˥-˫˭˯-˿͵΄΅϶҂֍-֏؆-؈؋؎؏۞۩۽۾߶৲৳৺৻૱୰௳-௺౿൏൹฿༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙៛᥀᧞-᧿᭡-᭪᭴-᭼᾽᾿-῁῍-῏῝-῟῭-`´῾⁄⁒⁺-⁼₊-₌₠-₾℀℁℃-℆℈℉℔№-℘℞-℣℥℧℩℮℺℻⅀-⅄⅊-⅍⅏↊↋←-⌇⌌-⌨⌫-⏾␀-␦⑀-⑊⒜-ⓩ─-❧➔-⟄⟇-⟥⟰-⦂⦙-⧗⧜-⧻⧾-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿゛゜㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꜀-꜖꜠꜡꞉꞊꠨-꠫꠶-꠹꩷-꩹꭛﬩﮲-﯁﷼﷽﹢﹤-﹦﹩＄＋＜-＞＾｀｜～￠-￦￨-￮￼�",astral:"\ud800[\udd37-\udd3f\udd79-\udd89\udd8c-\udd8e\udd90-\udd9b\udda0\uddd0-\uddfc]|\ud802[\udc77\udc78\udec8]|𑜿|\ud81a[\udf3c-\udf3f\udf45]|𛲜|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd64\udd6a-\udd6c\udd83\udd84\udd8c-\udda9\uddae-\udde8\ude00-\ude41\ude45\udf00-\udf56]|\ud835[\udec1\udedb\udefb\udf15\udf35\udf4f\udf6f\udf89\udfa9\udfc3]|\ud836[\udc00-\uddff\ude37-\ude3a\ude6d-\ude74\ude76-\ude83\ude85\ude86]|\ud83b[\udef0\udef1]|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd10-\udd2e\udd30-\udd6b\udd70-\uddac\udde6-\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\udf00-\udfff]|\ud83d[\udc00-\uded2\udee0-\udeec\udef0-\udef6\udf00-\udf73\udf80-\udfd4]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd10-\udd1e\udd20-\udd27\udd30\udd33-\udd3e\udd40-\udd4b\udd50-\udd5e\udd80-\udd91\uddc0]"},{name:"Sc",alias:"Currency_Symbol",bmp:"\\x24¢-¥֏؋৲৳৻૱௹฿៛₠-₾꠸﷼﹩＄￠￡￥￦"},{name:"Sk",alias:"Modifier_Symbol",bmp:"\\x5E`¨¯´¸˂-˅˒-˟˥-˫˭˯-˿͵΄΅᾽᾿-῁῍-῏῝-῟῭-`´῾゛゜꜀-꜖꜠꜡꞉꞊꭛﮲-﯁＾｀￣",astral:"\ud83c[\udffb-\udfff]"},{name:"Sm",alias:"Math_Symbol",bmp:"\\x2B<->\\x7C~¬±×÷϶؆-؈⁄⁒⁺-⁼₊-₌℘⅀-⅄⅋←-↔↚↛↠↣↦↮⇎⇏⇒⇔⇴-⋿⌠⌡⍼⎛-⎳⏜-⏡▷◁◸-◿♯⟀-⟄⟇-⟥⟰-⟿⤀-⦂⦙-⧗⧜-⧻⧾-⫿⬰-⭄⭇-⭌﬩﹢﹤-﹦＋＜-＞｜～￢￩-￬",astral:"\ud835[\udec1\udedb\udefb\udf15\udf35\udf4f\udf6f\udf89\udfa9\udfc3]|\ud83b[\udef0\udef1]"},{name:"So",alias:"Other_Symbol",bmp:"¦©®°҂֍֎؎؏۞۩۽۾߶৺୰௳-௸௺౿൏൹༁-༃༓༕-༗༚-༟༴༶༸྾-࿅࿇-࿌࿎࿏࿕-࿘႞႟᎐-᎙᥀᧞-᧿᭡-᭪᭴-᭼℀℁℃-℆℈℉℔№℗℞-℣℥℧℩℮℺℻⅊⅌⅍⅏↊↋↕-↙↜-↟↡↢↤↥↧-↭↯-⇍⇐⇑⇓⇕-⇳⌀-⌇⌌-⌟⌢-⌨⌫-⍻⍽-⎚⎴-⏛⏢-⏾␀-␦⑀-⑊⒜-ⓩ─-▶▸-◀◂-◷☀-♮♰-❧➔-➿⠀-⣿⬀-⬯⭅⭆⭍-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⳥-⳪⺀-⺙⺛-⻳⼀-⿕⿰-⿻〄〒〓〠〶〷〾〿㆐㆑㆖-㆟㇀-㇣㈀-㈞㈪-㉇㉐㉠-㉿㊊-㊰㋀-㋾㌀-㏿䷀-䷿꒐-꓆꠨-꠫꠶꠷꠹꩷-꩹﷽￤￨￭￮￼�",astral:"\ud800[\udd37-\udd3f\udd79-\udd89\udd8c-\udd8e\udd90-\udd9b\udda0\uddd0-\uddfc]|\ud802[\udc77\udc78\udec8]|𑜿|\ud81a[\udf3c-\udf3f\udf45]|𛲜|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd64\udd6a-\udd6c\udd83\udd84\udd8c-\udda9\uddae-\udde8\ude00-\ude41\ude45\udf00-\udf56]|\ud836[\udc00-\uddff\ude37-\ude3a\ude6d-\ude74\ude76-\ude83\ude85\ude86]|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd10-\udd2e\udd30-\udd6b\udd70-\uddac\udde6-\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\udf00-\udffa]|\ud83d[\udc00-\uded2\udee0-\udeec\udef0-\udef6\udf00-\udf73\udf80-\udfd4]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd10-\udd1e\udd20-\udd27\udd30\udd33-\udd3e\udd40-\udd4b\udd50-\udd5e\udd80-\udd91\uddc0]"},{name:"Z",alias:"Separator",bmp:"    - \u2028\u2029  　"},{name:"Zl",alias:"Line_Separator",bmp:"\u2028"},{name:"Zp",alias:"Paragraph_Separator",bmp:"\u2029"},{name:"Zs",alias:"Space_Separator",bmp:"    -   　"}])},d.exports=u.default},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0}),
/*!
 * XRegExp Unicode Properties 4.0.0
 * <xregexp.com>
 * Steven Levithan (c) 2012-2017 MIT License
 * Unicode data by Mathias Bynens <mathiasbynens.be>
 */
u.default=function(d){if(!d.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Properties");var u=[{name:"ASCII",bmp:"\0-"},{name:"Alphabetic",bmp:"A-Za-zªµºÀ-ÖØ-öø-ˁˆ-ˑˠ-ˤˬˮͅͰ-ʹͶͷͺ-ͽͿΆΈ-ΊΌΎ-ΡΣ-ϵϷ-ҁҊ-ԯԱ-Ֆՙա-ևְ-ׇֽֿׁׂׅׄא-תװ-ײؐ-ؚؠ-ٗٙ-ٟٮ-ۓە-ۜۡ-ۭۨ-ۯۺ-ۼۿܐ-ܿݍ-ޱߊ-ߪߴߵߺࠀ-ࠗࠚ-ࠬࡀ-ࡘࢠ-ࢴࢶ-ࢽࣔ-ࣣࣟ-ࣰࣩ-ऻऽ-ौॎ-ॐॕ-ॣॱ-ঃঅ-ঌএঐও-নপ-রলশ-হঽ-ৄেৈোৌৎৗড়ঢ়য়-ৣৰৱਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹਾ-ੂੇੈੋੌੑਖ਼-ੜਫ਼ੰ-ੵઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હઽ-ૅે-ૉોૌૐૠ-ૣૹଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହଽ-ୄେୈୋୌୖୗଡ଼ଢ଼ୟ-ୣୱஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-ௌௐௗఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-ౌౕౖౘ-ౚౠ-ౣಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹಽ-ೄೆ-ೈೊ-ೌೕೖೞೠ-ೣೱೲഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-ൌൎൔ-ൗൟ-ൣൺ-ൿංඃඅ-ඖක-නඳ-රලව-ෆා-ුූෘ-ෟෲෳก-ฺเ-ๆํກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆໍໜ-ໟༀཀ-ཇཉ-ཬཱ-ཱྀྈ-ྗྙ-ྼက-ံးျ-ဿၐ-ၢၥ-ၨၮ-ႆႎႜႝႠ-ჅჇჍა-ჺჼ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፟ᎀ-ᎏᎠ-Ᏽᏸ-ᏽᐁ-ᙬᙯ-ᙿᚁ-ᚚᚠ-ᛪᛮ-ᛸᜀ-ᜌᜎ-ᜓᜠ-ᜳᝀ-ᝓᝠ-ᝬᝮ-ᝰᝲᝳក-ឳា-ៈៗៜᠠ-ᡷᢀ-ᢪᢰ-ᣵᤀ-ᤞᤠ-ᤫᤰ-ᤸᥐ-ᥭᥰ-ᥴᦀ-ᦫᦰ-ᧉᨀ-ᨛᨠ-ᩞᩡ-ᩴᪧᬀ-ᬳᬵ-ᭃᭅ-ᭋᮀ-ᮩᮬ-ᮯᮺ-ᯥᯧ-ᯱᰀ-ᰵᱍ-ᱏᱚ-ᱽᲀ-ᲈᳩ-ᳬᳮ-ᳳᳵᳶᴀ-ᶿᷧ-ᷴḀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ᾼιῂ-ῄῆ-ῌῐ-ΐῖ-Ίῠ-Ῥῲ-ῴῶ-ῼⁱⁿₐ-ₜℂℇℊ-ℓℕℙ-ℝℤΩℨK-ℭℯ-ℹℼ-ℿⅅ-ⅉⅎⅠ-ↈⒶ-ⓩⰀ-Ⱞⰰ-ⱞⱠ-ⳤⳫ-ⳮⳲⳳⴀ-ⴥⴧⴭⴰ-ⵧⵯⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞⷠ-ⷿⸯ々-〇〡-〩〱-〵〸-〼ぁ-ゖゝ-ゟァ-ヺー-ヿㄅ-ㄭㄱ-ㆎㆠ-ㆺㇰ-ㇿ㐀-䶵一-鿕ꀀ-ꒌꓐ-ꓽꔀ-ꘌꘐ-ꘟꘪꘫꙀ-ꙮꙴ-ꙻꙿ-ꛯꜗ-ꜟꜢ-ꞈꞋ-ꞮꞰ-ꞷꟷ-ꠁꠃ-ꠅꠇ-ꠊꠌ-ꠧꡀ-ꡳꢀ-ꣃꣅꣲ-ꣷꣻꣽꤊ-ꤪꤰ-ꥒꥠ-ꥼꦀ-ꦲꦴ-ꦿꧏꧠ-ꧤꧦ-ꧯꧺ-ꧾꨀ-ꨶꩀ-ꩍꩠ-ꩶꩺꩾ-ꪾꫀꫂꫛ-ꫝꫠ-ꫯꫲ-ꫵꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮꬰ-ꭚꭜ-ꭥꭰ-ꯪ가-힣ힰ-ퟆퟋ-ퟻ豈-舘並-龎ﬀ-ﬆﬓ-ﬗיִ-ﬨשׁ-זּטּ-לּמּנּסּףּפּצּ-ﮱﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-ﷻﹰ-ﹴﹶ-ﻼＡ-Ｚａ-ｚｦ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ",astral:"\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa\udd40-\udd74\ude80-\ude9c\udea0-\uded0\udf00-\udf1f\udf30-\udf4a\udf50-\udf7a\udf80-\udf9d\udfa0-\udfc3\udfc8-\udfcf\udfd1-\udfd5]|\ud801[\udc00-\udc9d\udcb0-\udcd3\udcd8-\udcfb\udd00-\udd27\udd30-\udd63\ude00-\udf36\udf40-\udf55\udf60-\udf67]|\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f-\udc55\udc60-\udc76\udc80-\udc9e\udce0-\udcf2\udcf4\udcf5\udd00-\udd15\udd20-\udd39\udd80-\uddb7\uddbe\uddbf\ude00-\ude03\ude05\ude06\ude0c-\ude13\ude15-\ude17\ude19-\ude33\ude60-\ude7c\ude80-\ude9c\udec0-\udec7\udec9-\udee4\udf00-\udf35\udf40-\udf55\udf60-\udf72\udf80-\udf91]|\ud803[\udc00-\udc48\udc80-\udcb2\udcc0-\udcf2]|\ud804[\udc00-\udc45\udc82-\udcb8\udcd0-\udce8\udd00-\udd32\udd50-\udd72\udd76\udd80-\uddbf\uddc1-\uddc4\uddda\udddc\ude00-\ude11\ude13-\ude34\ude37\ude3e\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea8\udeb0-\udee8\udf00-\udf03\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3d-\udf44\udf47\udf48\udf4b\udf4c\udf50\udf57\udf5d-\udf63]|\ud805[\udc00-\udc41\udc43-\udc45\udc47-\udc4a\udc80-\udcc1\udcc4\udcc5\udcc7\udd80-\uddb5\uddb8-\uddbe\uddd8-\udddd\ude00-\ude3e\ude40\ude44\ude80-\udeb5\udf00-\udf19\udf1d-\udf2a]|\ud806[\udca0-\udcdf\udcff\udec0-\udef8]|\ud807[\udc00-\udc08\udc0a-\udc36\udc38-\udc3e\udc40\udc72-\udc8f\udc92-\udca7\udca9-\udcb6]|\ud808[\udc00-\udf99]|\ud809[\udc00-\udc6e\udc80-\udd43]|[\ud80c\ud81c-\ud820\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872][\udc00-\udfff]|\ud80d[\udc00-\udc2e]|\ud811[\udc00-\ude46]|\ud81a[\udc00-\ude38\ude40-\ude5e\uded0-\udeed\udf00-\udf36\udf40-\udf43\udf63-\udf77\udf7d-\udf8f]|\ud81b[\udf00-\udf44\udf50-\udf7e\udf93-\udf9f\udfe0]|\ud821[\udc00-\udfec]|\ud822[\udc00-\udef2]|\ud82c[\udc00\udc01]|\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99\udc9e]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udec0\udec2-\udeda\udedc-\udefa\udefc-\udf14\udf16-\udf34\udf36-\udf4e\udf50-\udf6e\udf70-\udf88\udf8a-\udfa8\udfaa-\udfc2\udfc4-\udfcb]|\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]|\ud83a[\udc00-\udcc4\udd00-\udd43\udd47]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb]|\ud83c[\udd30-\udd49\udd50-\udd69\udd70-\udd89]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]"},{name:"Any",isBmpLast:!0,bmp:"\0-￿",astral:"[\ud800-\udbff][\udc00-\udfff]"},{name:"Default_Ignorable_Code_Point",bmp:"­͏؜ᅟᅠ឴឵᠋-᠎​-‏‪-‮⁠-⁯ㅤ︀-️\ufeffﾠ￰-￸",astral:"\ud82f[\udca0-\udca3]|\ud834[\udd73-\udd7a]|[\udb40-\udb43][\udc00-\udfff]"},{name:"Lowercase",bmp:"a-zªµºß-öø-ÿāăąćĉċčďđēĕėęěĝğġģĥħĩīĭįıĳĵķĸĺļľŀłńņňŉŋōŏőœŕŗřśŝşšţťŧũūŭůűųŵŷźżž-ƀƃƅƈƌƍƒƕƙ-ƛƞơƣƥƨƪƫƭưƴƶƹƺƽ-ƿǆǉǌǎǐǒǔǖǘǚǜǝǟǡǣǥǧǩǫǭǯǰǳǵǹǻǽǿȁȃȅȇȉȋȍȏȑȓȕȗșțȝȟȡȣȥȧȩȫȭȯȱȳ-ȹȼȿɀɂɇɉɋɍɏ-ʓʕ-ʸˀˁˠ-ˤͅͱͳͷͺ-ͽΐά-ώϐϑϕ-ϗϙϛϝϟϡϣϥϧϩϫϭϯ-ϳϵϸϻϼа-џѡѣѥѧѩѫѭѯѱѳѵѷѹѻѽѿҁҋҍҏґғҕҗҙқҝҟҡңҥҧҩҫҭүұҳҵҷҹһҽҿӂӄӆӈӊӌӎӏӑӓӕӗәӛӝӟӡӣӥӧөӫӭӯӱӳӵӷӹӻӽӿԁԃԅԇԉԋԍԏԑԓԕԗԙԛԝԟԡԣԥԧԩԫԭԯա-ևᏸ-ᏽᲀ-ᲈᴀ-ᶿḁḃḅḇḉḋḍḏḑḓḕḗḙḛḝḟḡḣḥḧḩḫḭḯḱḳḵḷḹḻḽḿṁṃṅṇṉṋṍṏṑṓṕṗṙṛṝṟṡṣṥṧṩṫṭṯṱṳṵṷṹṻṽṿẁẃẅẇẉẋẍẏẑẓẕ-ẝẟạảấầẩẫậắằẳẵặẹẻẽếềểễệỉịọỏốồổỗộớờởỡợụủứừửữựỳỵỷỹỻỽỿ-ἇἐ-ἕἠ-ἧἰ-ἷὀ-ὅὐ-ὗὠ-ὧὰ-ώᾀ-ᾇᾐ-ᾗᾠ-ᾧᾰ-ᾴᾶᾷιῂ-ῄῆῇῐ-ΐῖῗῠ-ῧῲ-ῴῶῷⁱⁿₐ-ₜℊℎℏℓℯℴℹℼℽⅆ-ⅉⅎⅰ-ⅿↄⓐ-ⓩⰰ-ⱞⱡⱥⱦⱨⱪⱬⱱⱳⱴⱶ-ⱽⲁⲃⲅⲇⲉⲋⲍⲏⲑⲓⲕⲗⲙⲛⲝⲟⲡⲣⲥⲧⲩⲫⲭⲯⲱⲳⲵⲷⲹⲻⲽⲿⳁⳃⳅⳇⳉⳋⳍⳏⳑⳓⳕⳗⳙⳛⳝⳟⳡⳣⳤⳬⳮⳳⴀ-ⴥⴧⴭꙁꙃꙅꙇꙉꙋꙍꙏꙑꙓꙕꙗꙙꙛꙝꙟꙡꙣꙥꙧꙩꙫꙭꚁꚃꚅꚇꚉꚋꚍꚏꚑꚓꚕꚗꚙꚛ-ꚝꜣꜥꜧꜩꜫꜭꜯ-ꜱꜳꜵꜷꜹꜻꜽꜿꝁꝃꝅꝇꝉꝋꝍꝏꝑꝓꝕꝗꝙꝛꝝꝟꝡꝣꝥꝧꝩꝫꝭꝯ-ꝸꝺꝼꝿꞁꞃꞅꞇꞌꞎꞑꞓ-ꞕꞗꞙꞛꞝꞟꞡꞣꞥꞧꞩꞵꞷꟸ-ꟺꬰ-ꭚꭜ-ꭥꭰ-ꮿﬀ-ﬆﬓ-ﬗａ-ｚ",astral:"\ud801[\udc28-\udc4f\udcd8-\udcfb]|\ud803[\udcc0-\udcf2]|\ud806[\udcc0-\udcdf]|\ud835[\udc1a-\udc33\udc4e-\udc54\udc56-\udc67\udc82-\udc9b\udcb6-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udccf\udcea-\udd03\udd1e-\udd37\udd52-\udd6b\udd86-\udd9f\uddba-\uddd3\uddee-\ude07\ude22-\ude3b\ude56-\ude6f\ude8a-\udea5\udec2-\udeda\udedc-\udee1\udefc-\udf14\udf16-\udf1b\udf36-\udf4e\udf50-\udf55\udf70-\udf88\udf8a-\udf8f\udfaa-\udfc2\udfc4-\udfc9\udfcb]|\ud83a[\udd22-\udd43]"},{name:"Noncharacter_Code_Point",bmp:"﷐-﷯￾￿",astral:"[\ud83f\ud87f\ud8bf\ud8ff\ud93f\ud97f\ud9bf\ud9ff\uda3f\uda7f\udabf\udaff\udb3f\udb7f\udbbf\udbff][\udffe\udfff]"},{name:"Uppercase",bmp:"A-ZÀ-ÖØ-ÞĀĂĄĆĈĊČĎĐĒĔĖĘĚĜĞĠĢĤĦĨĪĬĮİĲĴĶĹĻĽĿŁŃŅŇŊŌŎŐŒŔŖŘŚŜŞŠŢŤŦŨŪŬŮŰŲŴŶŸŹŻŽƁƂƄƆƇƉ-ƋƎ-ƑƓƔƖ-ƘƜƝƟƠƢƤƦƧƩƬƮƯƱ-ƳƵƷƸƼǄǇǊǍǏǑǓǕǗǙǛǞǠǢǤǦǨǪǬǮǱǴǶ-ǸǺǼǾȀȂȄȆȈȊȌȎȐȒȔȖȘȚȜȞȠȢȤȦȨȪȬȮȰȲȺȻȽȾɁɃ-ɆɈɊɌɎͰͲͶͿΆΈ-ΊΌΎΏΑ-ΡΣ-ΫϏϒ-ϔϘϚϜϞϠϢϤϦϨϪϬϮϴϷϹϺϽ-ЯѠѢѤѦѨѪѬѮѰѲѴѶѸѺѼѾҀҊҌҎҐҒҔҖҘҚҜҞҠҢҤҦҨҪҬҮҰҲҴҶҸҺҼҾӀӁӃӅӇӉӋӍӐӒӔӖӘӚӜӞӠӢӤӦӨӪӬӮӰӲӴӶӸӺӼӾԀԂԄԆԈԊԌԎԐԒԔԖԘԚԜԞԠԢԤԦԨԪԬԮԱ-ՖႠ-ჅჇჍᎠ-ᏵḀḂḄḆḈḊḌḎḐḒḔḖḘḚḜḞḠḢḤḦḨḪḬḮḰḲḴḶḸḺḼḾṀṂṄṆṈṊṌṎṐṒṔṖṘṚṜṞṠṢṤṦṨṪṬṮṰṲṴṶṸṺṼṾẀẂẄẆẈẊẌẎẐẒẔẞẠẢẤẦẨẪẬẮẰẲẴẶẸẺẼẾỀỂỄỆỈỊỌỎỐỒỔỖỘỚỜỞỠỢỤỦỨỪỬỮỰỲỴỶỸỺỼỾἈ-ἏἘ-ἝἨ-ἯἸ-ἿὈ-ὍὙὛὝὟὨ-ὯᾸ-ΆῈ-ΉῘ-ΊῨ-ῬῸ-Ώℂℇℋ-ℍℐ-ℒℕℙ-ℝℤΩℨK-ℭℰ-ℳℾℿⅅⅠ-ⅯↃⒶ-ⓏⰀ-ⰮⱠⱢ-ⱤⱧⱩⱫⱭ-ⱰⱲⱵⱾ-ⲀⲂⲄⲆⲈⲊⲌⲎⲐⲒⲔⲖⲘⲚⲜⲞⲠⲢⲤⲦⲨⲪⲬⲮⲰⲲⲴⲶⲸⲺⲼⲾⳀⳂⳄⳆⳈⳊⳌⳎⳐⳒⳔⳖⳘⳚⳜⳞⳠⳢⳫⳭⳲꙀꙂꙄꙆꙈꙊꙌꙎꙐꙒꙔꙖꙘꙚꙜꙞꙠꙢꙤꙦꙨꙪꙬꚀꚂꚄꚆꚈꚊꚌꚎꚐꚒꚔꚖꚘꚚꜢꜤꜦꜨꜪꜬꜮꜲꜴꜶꜸꜺꜼꜾꝀꝂꝄꝆꝈꝊꝌꝎꝐꝒꝔꝖꝘꝚꝜꝞꝠꝢꝤꝦꝨꝪꝬꝮꝹꝻꝽꝾꞀꞂꞄꞆꞋꞍꞐꞒꞖꞘꞚꞜꞞꞠꞢꞤꞦꞨꞪ-ꞮꞰ-ꞴꞶＡ-Ｚ",astral:"\ud801[\udc00-\udc27\udcb0-\udcd3]|\ud803[\udc80-\udcb2]|\ud806[\udca0-\udcbf]|\ud835[\udc00-\udc19\udc34-\udc4d\udc68-\udc81\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb5\udcd0-\udce9\udd04\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd38\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd6c-\udd85\udda0-\uddb9\uddd4-\udded\ude08-\ude21\ude3c-\ude55\ude70-\ude89\udea8-\udec0\udee2-\udefa\udf1c-\udf34\udf56-\udf6e\udf90-\udfa8\udfca]|\ud83a[\udd00-\udd21]|\ud83c[\udd30-\udd49\udd50-\udd69\udd70-\udd89]"},{name:"White_Space",bmp:"\t-\r    - \u2028\u2029  　"}];u.push({name:"Assigned",inverseOf:"Cn"}),d.addUnicodeData(u)},d.exports=u.default},function(d,u,e){"use strict";Object.defineProperty(u,"__esModule",{value:!0}),
/*!
 * XRegExp Unicode Scripts 4.0.0
 * <xregexp.com>
 * Steven Levithan (c) 2010-2017 MIT License
 * Unicode data by Mathias Bynens <mathiasbynens.be>
 */
u.default=function(d){if(!d.addUnicodeData)throw new ReferenceError("Unicode Base must be loaded before Unicode Scripts");d.addUnicodeData([{name:"Adlam",astral:"\ud83a[\udd00-\udd4a\udd50-\udd59\udd5e\udd5f]"},{name:"Ahom",astral:"\ud805[\udf00-\udf19\udf1d-\udf2b\udf30-\udf3f]"},{name:"Anatolian_Hieroglyphs",astral:"\ud811[\udc00-\ude46]"},{name:"Arabic",bmp:"؀-؄؆-؋؍-ؚ؞ؠ-ؿف-يٖ-ٯٱ-ۜ۞-ۿݐ-ݿࢠ-ࢴࢶ-ࢽࣔ-ࣣ࣡-ࣿﭐ-﯁ﯓ-ﴽﵐ-ﶏﶒ-ﷇﷰ-﷽ﹰ-ﹴﹶ-ﻼ",astral:"\ud803[\ude60-\ude7e]|\ud83b[\ude00-\ude03\ude05-\ude1f\ude21\ude22\ude24\ude27\ude29-\ude32\ude34-\ude37\ude39\ude3b\ude42\ude47\ude49\ude4b\ude4d-\ude4f\ude51\ude52\ude54\ude57\ude59\ude5b\ude5d\ude5f\ude61\ude62\ude64\ude67-\ude6a\ude6c-\ude72\ude74-\ude77\ude79-\ude7c\ude7e\ude80-\ude89\ude8b-\ude9b\udea1-\udea3\udea5-\udea9\udeab-\udebb\udef0\udef1]"},{name:"Armenian",bmp:"Ա-Ֆՙ-՟ա-և֊֍-֏ﬓ-ﬗ"},{name:"Avestan",astral:"\ud802[\udf00-\udf35\udf39-\udf3f]"},{name:"Balinese",bmp:"ᬀ-ᭋ᭐-᭼"},{name:"Bamum",bmp:"ꚠ-꛷",astral:"\ud81a[\udc00-\ude38]"},{name:"Bassa_Vah",astral:"\ud81a[\uded0-\udeed\udef0-\udef5]"},{name:"Batak",bmp:"ᯀ-᯳᯼-᯿"},{name:"Bengali",bmp:"ঀ-ঃঅ-ঌএঐও-নপ-রলশ-হ়-ৄেৈো-ৎৗড়ঢ়য়-ৣ০-৻"},{name:"Bhaiksuki",astral:"\ud807[\udc00-\udc08\udc0a-\udc36\udc38-\udc45\udc50-\udc6c]"},{name:"Bopomofo",bmp:"˪˫ㄅ-ㄭㆠ-ㆺ"},{name:"Brahmi",astral:"\ud804[\udc00-\udc4d\udc52-\udc6f\udc7f]"},{name:"Braille",bmp:"⠀-⣿"},{name:"Buginese",bmp:"ᨀ-ᨛ᨞᨟"},{name:"Buhid",bmp:"ᝀ-ᝓ"},{name:"Canadian_Aboriginal",bmp:"᐀-ᙿᢰ-ᣵ"},{name:"Carian",astral:"\ud800[\udea0-\uded0]"},{name:"Caucasian_Albanian",astral:"\ud801[\udd30-\udd63\udd6f]"},{name:"Chakma",astral:"\ud804[\udd00-\udd34\udd36-\udd43]"},{name:"Cham",bmp:"ꨀ-ꨶꩀ-ꩍ꩐-꩙꩜-꩟"},{name:"Cherokee",bmp:"Ꭰ-Ᏽᏸ-ᏽꭰ-ꮿ"},{name:"Common",bmp:"\0-@\\x5B-`\\x7B-©«-¹»-¿×÷ʹ-˟˥-˩ˬ-˿ʹ;΅·։؅،؛؜؟ـ۝࣢।॥฿࿕-࿘჻᛫-᛭᜵᜶᠂᠃᠅᳓᳡ᳩ-ᳬᳮ-ᳳᳵᳶ -​‎-⁤⁦-⁰⁴-⁾₀-₎₠-₾℀-℥℧-℩ℬ-ℱℳ-⅍⅏-⅟↉-↋←-⏾␀-␦⑀-⑊①-⟿⤀-⭳⭶-⮕⮘-⮹⮽-⯈⯊-⯑⯬-⯯⸀-⹄⿰-⿻　-〄〆〈-〠〰-〷〼-〿゛゜゠・ー㆐-㆟㇀-㇣㈠-㉟㉿-㋏㍘-㏿䷀-䷿꜀-꜡ꞈ-꞊꠰-꠹꤮ꧏ꭛﴾﴿︐-︙︰-﹒﹔-﹦﹨-﹫\ufeff！-＠［-｀｛-･ｰﾞﾟ￠-￦￨-￮￹-�",astral:"\ud800[\udd00-\udd02\udd07-\udd33\udd37-\udd3f\udd90-\udd9b\uddd0-\uddfc\udee1-\udefb]|\ud82f[\udca0-\udca3]|\ud834[\udc00-\udcf5\udd00-\udd26\udd29-\udd66\udd6a-\udd7a\udd83\udd84\udd8c-\udda9\uddae-\udde8\udf00-\udf56\udf60-\udf71]|\ud835[\udc00-\udc54\udc56-\udc9c\udc9e\udc9f\udca2\udca5\udca6\udca9-\udcac\udcae-\udcb9\udcbb\udcbd-\udcc3\udcc5-\udd05\udd07-\udd0a\udd0d-\udd14\udd16-\udd1c\udd1e-\udd39\udd3b-\udd3e\udd40-\udd44\udd46\udd4a-\udd50\udd52-\udea5\udea8-\udfcb\udfce-\udfff]|\ud83c[\udc00-\udc2b\udc30-\udc93\udca0-\udcae\udcb1-\udcbf\udcc1-\udccf\udcd1-\udcf5\udd00-\udd0c\udd10-\udd2e\udd30-\udd6b\udd70-\uddac\udde6-\uddff\ude01\ude02\ude10-\ude3b\ude40-\ude48\ude50\ude51\udf00-\udfff]|\ud83d[\udc00-\uded2\udee0-\udeec\udef0-\udef6\udf00-\udf73\udf80-\udfd4]|\ud83e[\udc00-\udc0b\udc10-\udc47\udc50-\udc59\udc60-\udc87\udc90-\udcad\udd10-\udd1e\udd20-\udd27\udd30\udd33-\udd3e\udd40-\udd4b\udd50-\udd5e\udd80-\udd91\uddc0]|\udb40[\udc01\udc20-\udc7f]"},{name:"Coptic",bmp:"Ϣ-ϯⲀ-ⳳ⳹-⳿"},{name:"Cuneiform",astral:"\ud808[\udc00-\udf99]|\ud809[\udc00-\udc6e\udc70-\udc74\udc80-\udd43]"},{name:"Cypriot",astral:"\ud802[\udc00-\udc05\udc08\udc0a-\udc35\udc37\udc38\udc3c\udc3f]"},{name:"Cyrillic",bmp:"Ѐ-҄҇-ԯᲀ-ᲈᴫᵸⷠ-ⷿꙀ-ꚟ︮︯"},{name:"Deseret",astral:"\ud801[\udc00-\udc4f]"},{name:"Devanagari",bmp:"ऀ-ॐ॓-ॣ०-ॿ꣠-ꣽ"},{name:"Duployan",astral:"\ud82f[\udc00-\udc6a\udc70-\udc7c\udc80-\udc88\udc90-\udc99\udc9c-\udc9f]"},{name:"Egyptian_Hieroglyphs",astral:"\ud80c[\udc00-\udfff]|\ud80d[\udc00-\udc2e]"},{name:"Elbasan",astral:"\ud801[\udd00-\udd27]"},{name:"Ethiopic",bmp:"ሀ-ቈቊ-ቍቐ-ቖቘቚ-ቝበ-ኈኊ-ኍነ-ኰኲ-ኵኸ-ኾዀዂ-ዅወ-ዖዘ-ጐጒ-ጕጘ-ፚ፝-፼ᎀ-᎙ⶀ-ⶖⶠ-ⶦⶨ-ⶮⶰ-ⶶⶸ-ⶾⷀ-ⷆⷈ-ⷎⷐ-ⷖⷘ-ⷞꬁ-ꬆꬉ-ꬎꬑ-ꬖꬠ-ꬦꬨ-ꬮ"},{name:"Georgian",bmp:"Ⴀ-ჅჇჍა-ჺჼ-ჿⴀ-ⴥⴧⴭ"},{name:"Glagolitic",bmp:"Ⰰ-Ⱞⰰ-ⱞ",astral:"\ud838[\udc00-\udc06\udc08-\udc18\udc1b-\udc21\udc23\udc24\udc26-\udc2a]"},{name:"Gothic",astral:"\ud800[\udf30-\udf4a]"},{name:"Grantha",astral:"\ud804[\udf00-\udf03\udf05-\udf0c\udf0f\udf10\udf13-\udf28\udf2a-\udf30\udf32\udf33\udf35-\udf39\udf3c-\udf44\udf47\udf48\udf4b-\udf4d\udf50\udf57\udf5d-\udf63\udf66-\udf6c\udf70-\udf74]"},{name:"Greek",bmp:"Ͱ-ͳ͵-ͷͺ-ͽͿ΄ΆΈ-ΊΌΎ-ΡΣ-ϡϰ-Ͽᴦ-ᴪᵝ-ᵡᵦ-ᵪᶿἀ-ἕἘ-Ἕἠ-ὅὈ-Ὅὐ-ὗὙὛὝὟ-ώᾀ-ᾴᾶ-ῄῆ-ΐῖ-Ί῝-`ῲ-ῴῶ-῾Ωꭥ",astral:"\ud800[\udd40-\udd8e\udda0]|\ud834[\ude00-\ude45]"},{name:"Gujarati",bmp:"ઁ-ઃઅ-ઍએ-ઑઓ-નપ-રલળવ-હ઼-ૅે-ૉો-્ૐૠ-ૣ૦-૱ૹ"},{name:"Gurmukhi",bmp:"ਁ-ਃਅ-ਊਏਐਓ-ਨਪ-ਰਲਲ਼ਵਸ਼ਸਹ਼ਾ-ੂੇੈੋ-੍ੑਖ਼-ੜਫ਼੦-ੵ"},{name:"Han",bmp:"⺀-⺙⺛-⻳⼀-⿕々〇〡-〩〸-〻㐀-䶵一-鿕豈-舘並-龎",astral:"[\ud840-\ud868\ud86a-\ud86c\ud86f-\ud872][\udc00-\udfff]|\ud869[\udc00-\uded6\udf00-\udfff]|\ud86d[\udc00-\udf34\udf40-\udfff]|\ud86e[\udc00-\udc1d\udc20-\udfff]|\ud873[\udc00-\udea1]|\ud87e[\udc00-\ude1d]"},{name:"Hangul",bmp:"ᄀ-ᇿ〮〯ㄱ-ㆎ㈀-㈞㉠-㉾ꥠ-ꥼ가-힣ힰ-ퟆퟋ-ퟻﾠ-ﾾￂ-ￇￊ-ￏￒ-ￗￚ-ￜ"},{name:"Hanunoo",bmp:"ᜠ-᜴"},{name:"Hatran",astral:"\ud802[\udce0-\udcf2\udcf4\udcf5\udcfb-\udcff]"},{name:"Hebrew",bmp:"֑-ׇא-תװ-״יִ-זּטּ-לּמּנּסּףּפּצּ-ﭏ"},{name:"Hiragana",bmp:"ぁ-ゖゝ-ゟ",astral:"𛀁|🈀"},{name:"Imperial_Aramaic",astral:"\ud802[\udc40-\udc55\udc57-\udc5f]"},{name:"Inherited",bmp:"̀-ًͯ҅҆-ٰٕ॒॑᪰-᪾᳐-᳔᳒-᳢᳠-᳨᳭᳴᳸᳹᷀-᷵᷻-᷿‌‍⃐-〪⃰-゙゚〭︀-️︠-︭",astral:"\ud800[\uddfd\udee0]|\ud834[\udd67-\udd69\udd7b-\udd82\udd85-\udd8b\uddaa-\uddad]|\udb40[\udd00-\uddef]"},{name:"Inscriptional_Pahlavi",astral:"\ud802[\udf60-\udf72\udf78-\udf7f]"},{name:"Inscriptional_Parthian",astral:"\ud802[\udf40-\udf55\udf58-\udf5f]"},{name:"Javanese",bmp:"ꦀ-꧍꧐-꧙꧞꧟"},{name:"Kaithi",astral:"\ud804[\udc80-\udcc1]"},{name:"Kannada",bmp:"ಀ-ಃಅ-ಌಎ-ಐಒ-ನಪ-ಳವ-ಹ಼-ೄೆ-ೈೊ-್ೕೖೞೠ-ೣ೦-೯ೱೲ"},{name:"Katakana",bmp:"ァ-ヺヽ-ヿㇰ-ㇿ㋐-㋾㌀-㍗ｦ-ｯｱ-ﾝ",astral:"𛀀"},{name:"Kayah_Li",bmp:"꤀-꤭꤯"},{name:"Kharoshthi",astral:"\ud802[\ude00-\ude03\ude05\ude06\ude0c-\ude13\ude15-\ude17\ude19-\ude33\ude38-\ude3a\ude3f-\ude47\ude50-\ude58]"},{name:"Khmer",bmp:"ក-៝០-៩៰-៹᧠-᧿"},{name:"Khojki",astral:"\ud804[\ude00-\ude11\ude13-\ude3e]"},{name:"Khudawadi",astral:"\ud804[\udeb0-\udeea\udef0-\udef9]"},{name:"Lao",bmp:"ກຂຄງຈຊຍດ-ທນ-ຟມ-ຣລວສຫອ-ູົ-ຽເ-ໄໆ່-ໍ໐-໙ໜ-ໟ"},{name:"Latin",bmp:"A-Za-zªºÀ-ÖØ-öø-ʸˠ-ˤᴀ-ᴥᴬ-ᵜᵢ-ᵥᵫ-ᵷᵹ-ᶾḀ-ỿⁱⁿₐ-ₜKÅℲⅎⅠ-ↈⱠ-ⱿꜢ-ꞇꞋ-ꞮꞰ-ꞷꟷ-ꟿꬰ-ꭚꭜ-ꭤﬀ-ﬆＡ-Ｚａ-ｚ"},{name:"Lepcha",bmp:"ᰀ-᰷᰻-᱉ᱍ-ᱏ"},{name:"Limbu",bmp:"ᤀ-ᤞᤠ-ᤫᤰ-᤻᥀᥄-᥏"},{name:"Linear_A",astral:"\ud801[\ude00-\udf36\udf40-\udf55\udf60-\udf67]"},{name:"Linear_B",astral:"\ud800[\udc00-\udc0b\udc0d-\udc26\udc28-\udc3a\udc3c\udc3d\udc3f-\udc4d\udc50-\udc5d\udc80-\udcfa]"},{name:"Lisu",bmp:"ꓐ-꓿"},{name:"Lycian",astral:"\ud800[\ude80-\ude9c]"},{name:"Lydian",astral:"\ud802[\udd20-\udd39\udd3f]"},{name:"Mahajani",astral:"\ud804[\udd50-\udd76]"},{name:"Malayalam",bmp:"ഁ-ഃഅ-ഌഎ-ഐഒ-ഺഽ-ൄെ-ൈൊ-൏ൔ-ൣ൦-ൿ"},{name:"Mandaic",bmp:"ࡀ-࡛࡞"},{name:"Manichaean",astral:"\ud802[\udec0-\udee6\udeeb-\udef6]"},{name:"Marchen",astral:"\ud807[\udc70-\udc8f\udc92-\udca7\udca9-\udcb6]"},{name:"Meetei_Mayek",bmp:"ꫠ-꫶ꯀ-꯭꯰-꯹"},{name:"Mende_Kikakui",astral:"\ud83a[\udc00-\udcc4\udcc7-\udcd6]"},{name:"Meroitic_Cursive",astral:"\ud802[\udda0-\uddb7\uddbc-\uddcf\uddd2-\uddff]"},{name:"Meroitic_Hieroglyphs",astral:"\ud802[\udd80-\udd9f]"},{name:"Miao",astral:"\ud81b[\udf00-\udf44\udf50-\udf7e\udf8f-\udf9f]"},{name:"Modi",astral:"\ud805[\ude00-\ude44\ude50-\ude59]"},{name:"Mongolian",bmp:"᠀᠁᠄᠆-᠎᠐-᠙ᠠ-ᡷᢀ-ᢪ",astral:"\ud805[\ude60-\ude6c]"},{name:"Mro",astral:"\ud81a[\ude40-\ude5e\ude60-\ude69\ude6e\ude6f]"},{name:"Multani",astral:"\ud804[\ude80-\ude86\ude88\ude8a-\ude8d\ude8f-\ude9d\ude9f-\udea9]"},{name:"Myanmar",bmp:"က-႟ꧠ-ꧾꩠ-ꩿ"},{name:"Nabataean",astral:"\ud802[\udc80-\udc9e\udca7-\udcaf]"},{name:"New_Tai_Lue",bmp:"ᦀ-ᦫᦰ-ᧉ᧐-᧚᧞᧟"},{name:"Newa",astral:"\ud805[\udc00-\udc59\udc5b\udc5d]"},{name:"Nko",bmp:"߀-ߺ"},{name:"Ogham",bmp:" -᚜"},{name:"Ol_Chiki",bmp:"᱐-᱿"},{name:"Old_Hungarian",astral:"\ud803[\udc80-\udcb2\udcc0-\udcf2\udcfa-\udcff]"},{name:"Old_Italic",astral:"\ud800[\udf00-\udf23]"},{name:"Old_North_Arabian",astral:"\ud802[\ude80-\ude9f]"},{name:"Old_Permic",astral:"\ud800[\udf50-\udf7a]"},{name:"Old_Persian",astral:"\ud800[\udfa0-\udfc3\udfc8-\udfd5]"},{name:"Old_South_Arabian",astral:"\ud802[\ude60-\ude7f]"},{name:"Old_Turkic",astral:"\ud803[\udc00-\udc48]"},{name:"Oriya",bmp:"ଁ-ଃଅ-ଌଏଐଓ-ନପ-ରଲଳଵ-ହ଼-ୄେୈୋ-୍ୖୗଡ଼ଢ଼ୟ-ୣ୦-୷"},{name:"Osage",astral:"\ud801[\udcb0-\udcd3\udcd8-\udcfb]"},{name:"Osmanya",astral:"\ud801[\udc80-\udc9d\udca0-\udca9]"},{name:"Pahawh_Hmong",astral:"\ud81a[\udf00-\udf45\udf50-\udf59\udf5b-\udf61\udf63-\udf77\udf7d-\udf8f]"},{name:"Palmyrene",astral:"\ud802[\udc60-\udc7f]"},{name:"Pau_Cin_Hau",astral:"\ud806[\udec0-\udef8]"},{name:"Phags_Pa",bmp:"ꡀ-꡷"},{name:"Phoenician",astral:"\ud802[\udd00-\udd1b\udd1f]"},{name:"Psalter_Pahlavi",astral:"\ud802[\udf80-\udf91\udf99-\udf9c\udfa9-\udfaf]"},{name:"Rejang",bmp:"ꤰ-꥓꥟"},{name:"Runic",bmp:"ᚠ-ᛪᛮ-ᛸ"},{name:"Samaritan",bmp:"ࠀ-࠭࠰-࠾"},{name:"Saurashtra",bmp:"ꢀ-ꣅ꣎-꣙"},{name:"Sharada",astral:"\ud804[\udd80-\uddcd\uddd0-\udddf]"},{name:"Shavian",astral:"\ud801[\udc50-\udc7f]"},{name:"Siddham",astral:"\ud805[\udd80-\uddb5\uddb8-\udddd]"},{name:"SignWriting",astral:"\ud836[\udc00-\ude8b\ude9b-\ude9f\udea1-\udeaf]"},{name:"Sinhala",bmp:"ංඃඅ-ඖක-නඳ-රලව-ෆ්ා-ුූෘ-ෟ෦-෯ෲ-෴",astral:"\ud804[\udde1-\uddf4]"},{name:"Sora_Sompeng",astral:"\ud804[\udcd0-\udce8\udcf0-\udcf9]"},{name:"Sundanese",bmp:"ᮀ-ᮿ᳀-᳇"},{name:"Syloti_Nagri",bmp:"ꠀ-꠫"},{name:"Syriac",bmp:"܀-܍܏-݊ݍ-ݏ"},{name:"Tagalog",bmp:"ᜀ-ᜌᜎ-᜔"},{name:"Tagbanwa",bmp:"ᝠ-ᝬᝮ-ᝰᝲᝳ"},{name:"Tai_Le",bmp:"ᥐ-ᥭᥰ-ᥴ"},{name:"Tai_Tham",bmp:"ᨠ-ᩞ᩠-᩿᩼-᪉᪐-᪙᪠-᪭"},{name:"Tai_Viet",bmp:"ꪀ-ꫂꫛ-꫟"},{name:"Takri",astral:"\ud805[\ude80-\udeb7\udec0-\udec9]"},{name:"Tamil",bmp:"ஂஃஅ-ஊஎ-ஐஒ-கஙசஜஞடணதந-பம-ஹா-ூெ-ைொ-்ௐௗ௦-௺"},{name:"Tangut",astral:"𖿠|[\ud81c-\ud820][\udc00-\udfff]|\ud821[\udc00-\udfec]|\ud822[\udc00-\udef2]"},{name:"Telugu",bmp:"ఀ-ఃఅ-ఌఎ-ఐఒ-నప-హఽ-ౄె-ైొ-్ౕౖౘ-ౚౠ-ౣ౦-౯౸-౿"},{name:"Thaana",bmp:"ހ-ޱ"},{name:"Thai",bmp:"ก-ฺเ-๛"},{name:"Tibetan",bmp:"ༀ-ཇཉ-ཬཱ-ྗྙ-ྼ྾-࿌࿎-࿔࿙࿚"},{name:"Tifinagh",bmp:"ⴰ-ⵧⵯ⵰⵿"},{name:"Tirhuta",astral:"\ud805[\udc80-\udcc7\udcd0-\udcd9]"},{name:"Ugaritic",astral:"\ud800[\udf80-\udf9d\udf9f]"},{name:"Vai",bmp:"ꔀ-ꘫ"},{name:"Warang_Citi",astral:"\ud806[\udca0-\udcf2\udcff]"},{name:"Yi",bmp:"ꀀ-ꒌ꒐-꓆"}])},d.exports=u.default},function(d,u,e){"use strict";d.exports=function(d){if("string"!=typeof d)throw new TypeError("Expected a string");return d.toLowerCase().replace(/(?:^|\s|-)\S/g,function(d){return d.toUpperCase()})}},function(d,u,e){var a={"./CubeLoop":[9,0,2],"./CubeLoop.js":[9,0,2],"./FloatingBio":[10,0,3],"./FloatingBio.js":[10,0,3],"./GridLoop":[2,0,4],"./GridLoop.js":[2,0,4],"./Lissajoux":[3,0,5],"./Lissajoux.js":[3,0,5],"./MorphingSphere":[4,0,6],"./MorphingSphere.js":[4,0,6],"./OpenHead":[5,0,1,7],"./OpenHead.js":[5,0,1,7],"./SkyscrapersLoop":[6,0,8],"./SkyscrapersLoop.js":[6,0,8],"./SunLoop":[7,0,9],"./SunLoop.js":[7,0,9],"./TreeExample":[8,0,1,10],"./TreeExample.js":[8,0,1,10]};function n(d){var u=a[d];return u?Promise.all(u.slice(1).map(e.e)).then(function(){var d=u[0];return e(d)}):Promise.resolve().then(function(){var u=new Error("Cannot find module '"+d+"'");throw u.code="MODULE_NOT_FOUND",u})}n.keys=function(){return Object.keys(a)},n.id=26,d.exports=n}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2pzL2luZGV4LmpzIiwid2VicGFjazovLy8uL3NyYy9qcy9pbmRleC5jc3M/OTY4YiIsIndlYnBhY2s6Ly8vLi9zcmMvanMvaW5kZXguY3NzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvbGliL3VybHMuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL2RlY2FtZWxpemUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3hyZWdleHAvbGliL2luZGV4LmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94cmVnZXhwL2xpYi94cmVnZXhwLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94cmVnZXhwL2xpYi9hZGRvbnMvYnVpbGQuanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3hyZWdleHAvbGliL2FkZG9ucy9tYXRjaHJlY3Vyc2l2ZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveHJlZ2V4cC9saWIvYWRkb25zL3VuaWNvZGUtYmFzZS5qcyIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMveHJlZ2V4cC9saWIvYWRkb25zL3VuaWNvZGUtYmxvY2tzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94cmVnZXhwL2xpYi9hZGRvbnMvdW5pY29kZS1jYXRlZ29yaWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94cmVnZXhwL2xpYi9hZGRvbnMvdW5pY29kZS1wcm9wZXJ0aWVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy94cmVnZXhwL2xpYi9hZGRvbnMvdW5pY29kZS1zY3JpcHRzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy90aXRsZWl6ZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvanMvTG9vcHMgbGF6eSBeXFwuXFwvLiokIG5hbWVzcGFjZSBvYmplY3QiXSwibmFtZXMiOlsid2VicGFja0pzb25wQ2FsbGJhY2siLCJkYXRhIiwibW9kdWxlSWQiLCJjaHVua0lkIiwiY2h1bmtJZHMiLCJtb3JlTW9kdWxlcyIsImkiLCJyZXNvbHZlcyIsImxlbmd0aCIsImluc3RhbGxlZENodW5rcyIsInB1c2giLCJPYmplY3QiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJtb2R1bGVzIiwicGFyZW50SnNvbnBGdW5jdGlvbiIsInNoaWZ0IiwiaW5zdGFsbGVkTW9kdWxlcyIsIjEyIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsImV4cG9ydHMiLCJtb2R1bGUiLCJsIiwiZSIsInByb21pc2VzIiwiaW5zdGFsbGVkQ2h1bmtEYXRhIiwicHJvbWlzZSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0Iiwib25TY3JpcHRDb21wbGV0ZSIsInNjcmlwdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsImNoYXJzZXQiLCJ0aW1lb3V0IiwibmMiLCJzZXRBdHRyaWJ1dGUiLCJzcmMiLCJwIiwiMCIsIjEiLCIyIiwiMyIsIjQiLCI1IiwiNiIsIjciLCI4IiwiOSIsIjEwIiwiMTEiLCJqc29ucFNjcmlwdFNyYyIsImV2ZW50Iiwib25lcnJvciIsIm9ubG9hZCIsImNsZWFyVGltZW91dCIsImNodW5rIiwiZXJyb3JUeXBlIiwidHlwZSIsInJlYWxTcmMiLCJ0YXJnZXQiLCJlcnJvciIsIkVycm9yIiwicmVxdWVzdCIsInVuZGVmaW5lZCIsInNldFRpbWVvdXQiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwidCIsIm1vZGUiLCJfX2VzTW9kdWxlIiwibnMiLCJjcmVhdGUiLCJrZXkiLCJiaW5kIiwibiIsIm9iamVjdCIsInByb3BlcnR5Iiwib2UiLCJlcnIiLCJjb25zb2xlIiwianNvbnBBcnJheSIsIndpbmRvdyIsIm9sZEpzb25wRnVuY3Rpb24iLCJzbGljZSIsInMiLCJ1c2VTb3VyY2VNYXAiLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJjc3NNYXBwaW5nIiwiYnRvYSIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VNYXAiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJjb25jYXQiLCJqb2luIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsIm1lZGlhUXVlcnkiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiaWQiLCJmbiIsIm1lbW8iLCJzdHlsZXNJbkRvbSIsImlzT2xkSUUiLCJhdG9iIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJnZXRFbGVtZW50IiwicGFyZW50Iiwic3R5bGVUYXJnZXQiLCJxdWVyeVNlbGVjdG9yIiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwic3R5bGVzSW5zZXJ0ZWRBdFRvcCIsImZpeFVybHMiLCJhZGRTdHlsZXNUb0RvbSIsInN0eWxlcyIsIm9wdGlvbnMiLCJkb21TdHlsZSIsInJlZnMiLCJqIiwicGFydHMiLCJhZGRTdHlsZSIsImxpc3RUb1N0eWxlcyIsIm5ld1N0eWxlcyIsImJhc2UiLCJwYXJ0IiwiY3NzIiwibWVkaWEiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZSIsImluc2VydEludG8iLCJsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCIsImluc2VydEF0IiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiLCJmaXJzdENoaWxkIiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiaWR4IiwiaW5kZXhPZiIsInNwbGljZSIsImNyZWF0ZVN0eWxlRWxlbWVudCIsImF0dHJzIiwibm9uY2UiLCJnZXROb25jZSIsImFkZEF0dHJzIiwiZWwiLCJrZXlzIiwiZm9yRWFjaCIsIm9iaiIsInVwZGF0ZSIsInJlbW92ZSIsInJlc3VsdCIsInRyYW5zZm9ybSIsImRlZmF1bHQiLCJzdHlsZUluZGV4IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsIlVSTCIsImNyZWF0ZU9iamVjdFVSTCIsInJldm9rZU9iamVjdFVSTCIsIkJsb2IiLCJsaW5rIiwicmVsIiwiY3JlYXRlTGlua0VsZW1lbnQiLCJhdXRvRml4VXJscyIsImNvbnZlcnRUb0Fic29sdXRlVXJscyIsImJsb2IiLCJvbGRTcmMiLCJocmVmIiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJjcmVhdGVUZXh0Tm9kZSIsIm5ld09iaiIsIkRFQlVHIiwibmV3TGlzdCIsIm1heVJlbW92ZSIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwiaW5kZXgiLCJyZXBsYWNlbWVudCIsImZpbHRlciIsIkJvb2xlYW4iLCJjc3NOb2RlIiwiY2hpbGROb2RlcyIsImRlY2FtZWxpemUiLCJyZXF1aXJlIiwidGl0bGVpemUiLCJMb29wcyIsIkFwcCIsIl9jbGFzc0NhbGxDaGVjayIsImxvb3BzIiwiQ3JlYXRlTWVudSIsIkFkZENsb3NlUmVuZGVyZXJUb01lbnUiLCJQb3B1bGF0ZU1lbnUiLCJDcmVhdGVPcGVuTWVudUJ1dHRvbiIsIlN0YXJ0TG9vcCIsIm1lbnVDb250YWluZXIiLCJtZW51IiwiYm9keSIsIl90aGlzIiwiTWVudUVsZW1lbnQiLCJEZXN0cm95U2NlbmUiLCJTZWxlY3RNZW51Vm9pY2UiLCJfaSIsImxvb3AiLCJBZGRMb29wQnV0dG9uIiwidGV4dCIsIl90aGlzMiIsIm1lbnVWb2ljZSIsImFjdGlvbiIsImVsZW1lbnQiLCJpbm5lckhUTUwiLCJhZGRFdmVudExpc3RlbmVyIiwidGFyZ2V0QnV0dG9uIiwiX3RoaXMzIiwibG9nIiwicGFyZW50RWxlbWVudCIsInNjcm9sbFRvIiwiZ2V0Qm91bmRpbmdDbGllbnRSZWN0IiwidG9wIiwiU3RhcnRMb2FkaW5nIiwiZ2V0QXR0cmlidXRlIiwidGhlbiIsIl9yZWYiLCJuZXdsb29wIiwiSW5zdGFudGlhdGVMb29wIiwibG9hZGluZyIsImNsYXNzTmFtZSIsImFwcGVuZCIsInNlbGVjdGVkVm9pY2UiLCJfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uIiwiX2RpZEl0ZXJhdG9yRXJyb3IiLCJfaXRlcmF0b3JFcnJvciIsIl9zdGVwIiwiX2l0ZXJhdG9yIiwiaXRlcmF0b3IiLCJuZXh0IiwiZG9uZSIsImNsYXNzTGlzdCIsInJldHVybiIsImFkZCIsIl90aGlzNCIsImJhc2ljU2NlbmUiLCJJbml0U2NlbmUiLCJzY2VuZSIsIm9uTG9hZCIsIlN0b3BMb2FkaW5nIiwiQWRkIiwiX3RoaXM1Iiwib3Blbk1lbnVCdXR0b24iLCJTaG93SGlkZU1lbnUiLCJjdXJyZW50Q2xhc3MiLCJvZmZzZXRXaWR0aCIsIkRlc3Ryb3kiLCJJbml0IiwiaG1yIiwibG9jYWxzIiwibG9jYXRpb24iLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsInBhdGhuYW1lIiwicmVwbGFjZSIsImZ1bGxNYXRjaCIsIm9yaWdVcmwiLCJuZXdVcmwiLCJ1bnF1b3RlZE9yaWdVcmwiLCJ0cmltIiwiJDEiLCJ0ZXN0IiwieFJlZ0V4cCIsInNlcGFyYXRvciIsIlR5cGVFcnJvciIsInJlZ2V4MSIsInJlZ2V4MiIsInRvTG93ZXJDYXNlIiwiX3hyZWdleHAyIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIl9idWlsZDIiLCJfbWF0Y2hyZWN1cnNpdmUyIiwiX3VuaWNvZGVCYXNlMiIsIl91bmljb2RlQmxvY2tzMiIsIl91bmljb2RlQ2F0ZWdvcmllczIiLCJfdW5pY29kZVByb3BlcnRpZXMyIiwiX3VuaWNvZGVTY3JpcHRzMiIsIlJFR0VYX0RBVEEiLCJmZWF0dXJlcyIsImFzdHJhbCIsIm5hdGl2IiwiZXhlYyIsIlJlZ0V4cCIsIm1hdGNoIiwiU3RyaW5nIiwic3BsaXQiLCJmaXhlZCIsInJlZ2V4Q2FjaGUiLCJwYXR0ZXJuQ2FjaGUiLCJ0b2tlbnMiLCJkZWZhdWx0U2NvcGUiLCJjbGFzc1Njb3BlIiwibmF0aXZlVG9rZW5zIiwiY2xhc3MiLCJyZXBsYWNlbWVudFRva2VuIiwiY29ycmVjdEV4ZWNOcGNnIiwiaGFzRmxhZ3NQcm9wIiwiZmxhZ3MiLCJoYXNOYXRpdmVGbGFnIiwiZmxhZyIsImlzU3VwcG9ydGVkIiwiZXhjZXB0aW9uIiwiaGFzTmF0aXZlVSIsImhhc05hdGl2ZVkiLCJyZWdpc3RlcmVkRmxhZ3MiLCJnIiwidSIsInkiLCJhdWdtZW50IiwicmVnZXgiLCJjYXB0dXJlTmFtZXMiLCJ4U291cmNlIiwieEZsYWdzIiwiaXNJbnRlcm5hbE9ubHkiLCJfX3Byb3RvX18iLCJYUmVnRXhwIiwic29ydCIsImNsaXBEdXBsaWNhdGVzIiwic3RyIiwiY29weVJlZ2V4IiwiaXNSZWdFeHAiLCJ4RGF0YSIsImdldE5hdGl2ZUZsYWdzIiwiZmxhZ3NUb0FkZCIsImZsYWdzVG9SZW1vdmUiLCJ4cmVnZXhwU291cmNlIiwieHJlZ2V4cEZsYWdzIiwicmVtb3ZlRyIsInJlbW92ZVkiLCJhZGRHIiwiYWRkWSIsImhhc05hbWVkQ2FwdHVyZSIsImRlYyIsImhleCIsInBhcnNlSW50IiwiZ2V0Q29udGV4dHVhbFRva2VuU2VwYXJhdG9yIiwic2NvcGUiLCJpbnB1dCIsInBhdHRlcm4iLCJwb3MiLCJpc1F1YW50aWZpZXJOZXh0IiwiaXNUeXBlIiwicGFkNCIsInByZXBhcmVPcHRpb25zIiwicmVnaXN0ZXJGbGFnIiwicnVuVG9rZW5zIiwiY29udGV4dCIsImxlYWRDaGFyIiwibWF0Y2hMZW5ndGgiLCJvdXRwdXQiLCJoYW5kbGVyIiwicmVwYXJzZSIsInNldEFzdHJhbCIsIm9uIiwidG9PYmplY3QiLCJpc0luc3RhbGxlZCIsImFwcGxpZWQiLCJTeW50YXhFcnJvciIsIiQwIiwicHJlcGFyZUZsYWdzIiwiYXBwbGllZFBhdHRlcm4iLCJhcHBsaWVkRmxhZ3MiLCJ0b2tlbiIsImNhcHR1cmVzIiwiZ2VuZXJhdGVkIiwidmVyc2lvbiIsIl9jbGlwRHVwbGljYXRlcyIsIl9oYXNOYXRpdmVGbGFnIiwiX2RlYyIsIl9oZXgiLCJfcGFkNCIsImFkZFRva2VuIiwib3B0aW9uYWxGbGFncyIsImNhY2hlIiwiZmx1c2giLCJjYWNoZU5hbWUiLCJlc2NhcGUiLCJzdGlja3kiLCJjYWNoZUtleSIsImZha2VZIiwicjIiLCJsYXN0SW5kZXgiLCJwb3AiLCJnbG9iYWwiLCJjYWxsYmFjayIsImdsb2JhbGl6ZSIsImluc3RhbGwiLCJmZWF0dXJlIiwibWF0Y2hDaGFpbiIsImNoYWluIiwicmVjdXJzZUNoYWluIiwidmFsdWVzIiwibGV2ZWwiLCJtYXRjaGVzIiwiYWRkTWF0Y2giLCJiYWNrcmVmIiwiUmVmZXJlbmNlRXJyb3IiLCJzZWFyY2giLCJpc1JlZ2V4IiwiczIiLCJyZXBsYWNlRWFjaCIsInJlcGxhY2VtZW50cyIsImxpbWl0IiwidW5pbnN0YWxsIiwidW5pb24iLCJwYXR0ZXJucyIsImNvbmp1bmN0aW9uIiwibnVtQ2FwdHVyZXMiLCJudW1QcmlvckNhcHR1cmVzIiwicmV3cml0ZSIsInBhcmVuIiwib3JpZ0xhc3RJbmRleCIsIl9sZW4iLCJhcmdzIiwiQXJyYXkiLCJfa2V5IiwibGVuIiwiX2xlbjIiLCJfa2V5MiIsIl9sZW4zIiwiX2tleTMiLCJicmFja2V0ZWQiLCJhbmdsZWQiLCJkb2xsYXJUb2tlbiIsImlzTmFOIiwibGFzdExhc3RJbmRleCIsImxhc3RMZW5ndGgiLCJjb2RlIiwiZW5kSW5kZXgiLCJzdWJQYXJ0cyIsImRlYW5jaG9yIiwibGVhZGluZ0FuY2hvciIsInRyYWlsaW5nQW5jaG9yIiwiYXNYUmVnRXhwIiwiYWRkRmxhZ1giLCJpbnRlcnBvbGF0ZSIsInN1YnN0aXR1dGlvbiIsInJlZHVjZVRvU3VicGF0dGVybnNPYmplY3QiLCJzdWJwYXR0ZXJucyIsImludGVycG9sYXRlZCIsInN1YnBhdHRlcm5JbmRleCIsImVtYmVkU3VicGF0dGVybkFmdGVyIiwicmF3IiwicmF3TGl0ZXJhbHMiLCJ0YWciLCJsaXRlcmFscyIsInN1YnN0aXR1dGlvbnMiLCJyZWR1Y2UiLCJidWlsZCIsInN1YnMiLCJpbmxpbmVGbGFncyIsInN1YiIsIm5hbWVzIiwicGF0dGVybkFzUmVnZXgiLCJudW1DYXBzIiwibnVtUHJpb3JDYXBzIiwibnVtT3V0ZXJDYXBzIiwib3V0ZXJDYXBzTWFwIiwib3V0ZXJDYXBOYW1lcyIsIiQyIiwiJDMiLCIkNCIsInN1Yk5hbWUiLCJjYXBOYW1lIiwiaW50cm8iLCJsb2NhbENhcEluZGV4Iiwicm93Iiwic3RhcnQiLCJlbmQiLCJtYXRjaFJlY3Vyc2l2ZSIsImxlZnQiLCJyaWdodCIsImJhc2ljRmxhZ3MiLCJlc2NhcGVDaGFyIiwidk4iLCJ2YWx1ZU5hbWVzIiwib3BlblRva2VucyIsImRlbGltU3RhcnQiLCJkZWxpbUVuZCIsImxhc3RPdXRlckVuZCIsIm91dGVyU3RhcnQiLCJpbm5lclN0YXJ0IiwibGVmdE1hdGNoIiwicmlnaHRNYXRjaCIsImVzYyIsInVuaWNvZGUiLCJub3JtYWxpemUiLCJjaGFyQ29kZSIsImNociIsImNoYXJDb2RlQXQiLCJjYWNoZUludmVydGVkQm1wIiwic2x1ZyIsInJhbmdlIiwibGFzdEVuZCIsImJtcCIsImNhY2hlQXN0cmFsIiwiaXNOZWdhdGVkIiwicHJvcCIsImNvbWJpbmVkIiwiaXNCbXBMYXN0IiwiYnVpbGRBc3RyYWwiLCJpc0FzdHJhbE1vZGUiLCJpbnZlcnNlT2YiLCJhZGRVbmljb2RlRGF0YSIsImFsaWFzIiwiX2dldFVuaWNvZGVQcm9wZXJ0eSIsInVuaWNvZGVEYXRhIiwidG9VcHBlckNhc2UiLCIuL0N1YmVMb29wIiwiLi9DdWJlTG9vcC5qcyIsIi4vRmxvYXRpbmdCaW8iLCIuL0Zsb2F0aW5nQmlvLmpzIiwiLi9HcmlkTG9vcCIsIi4vR3JpZExvb3AuanMiLCIuL0xpc3Nham91eCIsIi4vTGlzc2Fqb3V4LmpzIiwiLi9Nb3JwaGluZ1NwaGVyZSIsIi4vTW9ycGhpbmdTcGhlcmUuanMiLCIuL09wZW5IZWFkIiwiLi9PcGVuSGVhZC5qcyIsIi4vU2t5c2NyYXBlcnNMb29wIiwiLi9Ta3lzY3JhcGVyc0xvb3AuanMiLCIuL1N1bkxvb3AiLCIuL1N1bkxvb3AuanMiLCIuL1RyZWVFeGFtcGxlIiwiLi9UcmVlRXhhbXBsZS5qcyIsIndlYnBhY2tBc3luY0NvbnRleHQiLCJyZXEiLCJpZHMiXSwibWFwcGluZ3MiOiJhQUNBLFNBQUFBLEVBQUFDLEdBUUEsSUFQQSxJQU1BQyxFQUFBQyxFQU5BQyxFQUFBSCxFQUFBLEdBQ0FJLEVBQUFKLEVBQUEsR0FLQUssRUFBQSxFQUFBQyxFQUFBLEdBQ1FELEVBQUFGLEVBQUFJLE9BQW9CRixJQUM1QkgsRUFBQUMsRUFBQUUsR0FDQUcsRUFBQU4sSUFDQUksRUFBQUcsS0FBQUQsRUFBQU4sR0FBQSxJQUVBTSxFQUFBTixHQUFBLEVBRUEsSUFBQUQsS0FBQUcsRUFDQU0sT0FBQUMsVUFBQUMsZUFBQUMsS0FBQVQsRUFBQUgsS0FDQWEsRUFBQWIsR0FBQUcsRUFBQUgsSUFLQSxJQUZBYyxLQUFBZixHQUVBTSxFQUFBQyxRQUNBRCxFQUFBVSxPQUFBVixHQU9BLElBQUFXLEVBQUEsR0FLQVQsRUFBQSxDQUNBVSxHQUFBLEdBV0EsU0FBQUMsRUFBQWxCLEdBR0EsR0FBQWdCLEVBQUFoQixHQUNBLE9BQUFnQixFQUFBaEIsR0FBQW1CLFFBR0EsSUFBQUMsRUFBQUosRUFBQWhCLEdBQUEsQ0FDQUksRUFBQUosRUFDQXFCLEdBQUEsRUFDQUYsUUFBQSxJQVVBLE9BTkFOLEVBQUFiLEdBQUFZLEtBQUFRLEVBQUFELFFBQUFDLElBQUFELFFBQUFELEdBR0FFLEVBQUFDLEdBQUEsRUFHQUQsRUFBQUQsUUFLQUQsRUFBQUksRUFBQSxTQUFBckIsR0FD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Z0JBQUEsQ0FDQSxFQUNBLEVBQ0EsR0FFQUMsY0FBQSxDQUNBLEVBQ0EsRUFDQSxHQUVBQyxpQkFBQSxDQUNBLEVBQ0EsRUFDQSxHQUVBQyxtQkFBQSxDQUNBLEVBQ0EsRUFDQSxHQUVBQyxzQkFBQSxDQUNBLEVBQ0EsRUFDQSxHQUVBQyxhQUFBLENBQ0EsRUFDQSxFQUNBLEVBQ0EsR0FFQUMsZ0JBQUEsQ0FDQSxFQUNBLEVBQ0EsRUFDQSxHQUVBQyxvQkFBQSxDQUNBLEVBQ0EsRUFDQSxHQUVBQyx1QkFBQSxDQUNBLEVBQ0EsRUFDQSxHQUVBQyxZQUFBLENBQ0EsRUFDQSxFQUNBLEdBRUFDLGVBQUEsQ0FDQSxFQUNBLEVBQ0EsR0FFQUMsZ0JBQUEsQ0FDQSxFQUNBLEVBQ0EsRUFDQSxJQUVBQyxtQkFBQSxDQUNBLEVBQ0EsRUFDQSxFQUNBLEtBR0EsU0FBQUMsRUFBQUMsR0FDQSxJQUFBQyxFQUFBL2MsRUFBQThjLEdBQ0EsT0FBQUMsRUFPQTdoQixRQUFBMEMsSUFBQW1mLEVBQUFyZCxNQUFBLEdBQUFNLElBQUF0RixFQUFBSSxJQUFBc08sS0FBQSxXQUNBLElBQUFoSSxFQUFBMmIsRUFBQSxHQUNBLE9BQUFyaUIsRUFBQTBHLEtBUkFsRyxRQUFBQyxVQUFBaU8sS0FBQSxXQUNBLElBQUF0TyxFQUFBLElBQUF3QyxNQUFBLHVCQUFBd2YsRUFBQSxLQUVBLE1BREFoaUIsRUFBQTRiLEtBQUEsbUJBQ0E1YixJQVFBK2hCLEVBQUFwWSxLQUFBLFdBQ0EsT0FBQXhLLE9BQUF3SyxLQUFBekUsSUFFQTZjLEVBQUF6YixHQUFBLEdBQ0F4RyxFQUFBRCxRQUFBa2lCIiwiZmlsZSI6ImpzL2J1bmRsZS5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBpbnN0YWxsIGEgSlNPTlAgY2FsbGJhY2sgZm9yIGNodW5rIGxvYWRpbmdcbiBcdGZ1bmN0aW9uIHdlYnBhY2tKc29ucENhbGxiYWNrKGRhdGEpIHtcbiBcdFx0dmFyIGNodW5rSWRzID0gZGF0YVswXTtcbiBcdFx0dmFyIG1vcmVNb2R1bGVzID0gZGF0YVsxXTtcblxuXG4gXHRcdC8vIGFkZCBcIm1vcmVNb2R1bGVzXCIgdG8gdGhlIG1vZHVsZXMgb2JqZWN0LFxuIFx0XHQvLyB0aGVuIGZsYWcgYWxsIFwiY2h1bmtJZHNcIiBhcyBsb2FkZWQgYW5kIGZpcmUgY2FsbGJhY2tcbiBcdFx0dmFyIG1vZHVsZUlkLCBjaHVua0lkLCBpID0gMCwgcmVzb2x2ZXMgPSBbXTtcbiBcdFx0Zm9yKDtpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspIHtcbiBcdFx0XHRjaHVua0lkID0gY2h1bmtJZHNbaV07XG4gXHRcdFx0aWYoaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdKSB7XG4gXHRcdFx0XHRyZXNvbHZlcy5wdXNoKGluc3RhbGxlZENodW5rc1tjaHVua0lkXVswXSk7XG4gXHRcdFx0fVxuIFx0XHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG4gXHRcdH1cbiBcdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0aWYoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG1vcmVNb2R1bGVzLCBtb2R1bGVJZCkpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0fVxuIFx0XHRpZihwYXJlbnRKc29ucEZ1bmN0aW9uKSBwYXJlbnRKc29ucEZ1bmN0aW9uKGRhdGEpO1xuXG4gXHRcdHdoaWxlKHJlc29sdmVzLmxlbmd0aCkge1xuIFx0XHRcdHJlc29sdmVzLnNoaWZ0KCkoKTtcbiBcdFx0fVxuXG4gXHR9O1xuXG5cbiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4gXHQvLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbiBcdC8vIFByb21pc2UgPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG4gXHR2YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuIFx0XHQxMjogMFxuIFx0fTtcblxuXG5cbiBcdC8vIHNjcmlwdCBwYXRoIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBqc29ucFNjcmlwdFNyYyhjaHVua0lkKSB7XG4gXHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fLnAgKyBcIi4vanMvXCIgKyAoe1wiMFwiOlwidmVuZG9yc35DdWJlTG9vcH5GbG9hdGluZ0Jpb35HcmlkTG9vcH5MaXNzYWpvdXh+TW9ycGhpbmdTcGhlcmV+T3BlbkhlYWR+U2t5c2NyYXBlcnNMb29wflN1bkxvb3B+VHJlZX5hNmQxZjM4N1wiLFwiMVwiOlwiT3BlbkhlYWR+VHJlZUV4YW1wbGVcIixcIjJcIjpcIkN1YmVMb29wXCIsXCIzXCI6XCJGbG9hdGluZ0Jpb1wiLFwiNFwiOlwiR3JpZExvb3BcIixcIjVcIjpcIkxpc3Nham91eFwiLFwiNlwiOlwiTW9ycGhpbmdTcGhlcmVcIixcIjdcIjpcIk9wZW5IZWFkXCIsXCI4XCI6XCJTa3lzY3JhcGVyc0xvb3BcIixcIjlcIjpcIlN1bkxvb3BcIixcIjEwXCI6XCJUcmVlRXhhbXBsZVwiLFwiMTFcIjpcImJhc2ljLXNjZW5lXCJ9W2NodW5rSWRdfHxjaHVua0lkKSArIFwiLmJ1bmRsZS5qc1wiXG4gXHR9XG5cbiBcdC8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG4gXHRmdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cbiBcdFx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG4gXHRcdGlmKGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdKSB7XG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG4gXHRcdH1cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGk6IG1vZHVsZUlkLFxuIFx0XHRcdGw6IGZhbHNlLFxuIFx0XHRcdGV4cG9ydHM6IHt9XG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmwgPSB0cnVlO1xuXG4gXHRcdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG4gXHRcdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbiBcdH1cblxuIFx0Ly8gVGhpcyBmaWxlIGNvbnRhaW5zIG9ubHkgdGhlIGVudHJ5IGNodW5rLlxuIFx0Ly8gVGhlIGNodW5rIGxvYWRpbmcgZnVuY3Rpb24gZm9yIGFkZGl0aW9uYWwgY2h1bmtzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmUgPSBmdW5jdGlvbiByZXF1aXJlRW5zdXJlKGNodW5rSWQpIHtcbiBcdFx0dmFyIHByb21pc2VzID0gW107XG5cblxuIFx0XHQvLyBKU09OUCBjaHVuayBsb2FkaW5nIGZvciBqYXZhc2NyaXB0XG5cbiBcdFx0dmFyIGluc3RhbGxlZENodW5rRGF0YSA9IGluc3RhbGxlZENodW5rc1tjaHVua0lkXTtcbiBcdFx0aWYoaW5zdGFsbGVkQ2h1bmtEYXRhICE9PSAwKSB7IC8vIDAgbWVhbnMgXCJhbHJlYWR5IGluc3RhbGxlZFwiLlxuXG4gXHRcdFx0Ly8gYSBQcm9taXNlIG1lYW5zIFwiY3VycmVudGx5IGxvYWRpbmdcIi5cbiBcdFx0XHRpZihpbnN0YWxsZWRDaHVua0RhdGEpIHtcbiBcdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdKTtcbiBcdFx0XHR9IGVsc2Uge1xuIFx0XHRcdFx0Ly8gc2V0dXAgUHJvbWlzZSBpbiBjaHVuayBjYWNoZVxuIFx0XHRcdFx0dmFyIHByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbihyZXNvbHZlLCByZWplY3QpIHtcbiBcdFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtEYXRhID0gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdID0gW3Jlc29sdmUsIHJlamVjdF07XG4gXHRcdFx0XHR9KTtcbiBcdFx0XHRcdHByb21pc2VzLnB1c2goaW5zdGFsbGVkQ2h1bmtEYXRhWzJdID0gcHJvbWlzZSk7XG5cbiBcdFx0XHRcdC8vIHN0YXJ0IGNodW5rIGxvYWRpbmdcbiBcdFx0XHRcdHZhciBzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzY3JpcHQnKTtcbiBcdFx0XHRcdHZhciBvblNjcmlwdENvbXBsZXRlO1xuXG4gXHRcdFx0XHRzY3JpcHQuY2hhcnNldCA9ICd1dGYtOCc7XG4gXHRcdFx0XHRzY3JpcHQudGltZW91dCA9IDEyMDtcbiBcdFx0XHRcdGlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKSB7XG4gXHRcdFx0XHRcdHNjcmlwdC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBfX3dlYnBhY2tfcmVxdWlyZV9fLm5jKTtcbiBcdFx0XHRcdH1cbiBcdFx0XHRcdHNjcmlwdC5zcmMgPSBqc29ucFNjcmlwdFNyYyhjaHVua0lkKTtcblxuIFx0XHRcdFx0b25TY3JpcHRDb21wbGV0ZSA9IGZ1bmN0aW9uIChldmVudCkge1xuIFx0XHRcdFx0XHQvLyBhdm9pZCBtZW0gbGVha3MgaW4gSUUuXG4gXHRcdFx0XHRcdHNjcmlwdC5vbmVycm9yID0gc2NyaXB0Lm9ubG9hZCA9IG51bGw7XG4gXHRcdFx0XHRcdGNsZWFyVGltZW91dCh0aW1lb3V0KTtcbiBcdFx0XHRcdFx0dmFyIGNodW5rID0gaW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdO1xuIFx0XHRcdFx0XHRpZihjaHVuayAhPT0gMCkge1xuIFx0XHRcdFx0XHRcdGlmKGNodW5rKSB7XG4gXHRcdFx0XHRcdFx0XHR2YXIgZXJyb3JUeXBlID0gZXZlbnQgJiYgKGV2ZW50LnR5cGUgPT09ICdsb2FkJyA/ICdtaXNzaW5nJyA6IGV2ZW50LnR5cGUpO1xuIFx0XHRcdFx0XHRcdFx0dmFyIHJlYWxTcmMgPSBldmVudCAmJiBldmVudC50YXJnZXQgJiYgZXZlbnQudGFyZ2V0LnNyYztcbiBcdFx0XHRcdFx0XHRcdHZhciBlcnJvciA9IG5ldyBFcnJvcignTG9hZGluZyBjaHVuayAnICsgY2h1bmtJZCArICcgZmFpbGVkLlxcbignICsgZXJyb3JUeXBlICsgJzogJyArIHJlYWxTcmMgKyAnKScpO1xuIFx0XHRcdFx0XHRcdFx0ZXJyb3IudHlwZSA9IGVycm9yVHlwZTtcbiBcdFx0XHRcdFx0XHRcdGVycm9yLnJlcXVlc3QgPSByZWFsU3JjO1xuIFx0XHRcdFx0XHRcdFx0Y2h1bmtbMV0oZXJyb3IpO1xuIFx0XHRcdFx0XHRcdH1cbiBcdFx0XHRcdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPSB1bmRlZmluZWQ7XG4gXHRcdFx0XHRcdH1cbiBcdFx0XHRcdH07XG4gXHRcdFx0XHR2YXIgdGltZW91dCA9IHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiBcdFx0XHRcdFx0b25TY3JpcHRDb21wbGV0ZSh7IHR5cGU6ICd0aW1lb3V0JywgdGFyZ2V0OiBzY3JpcHQgfSk7XG4gXHRcdFx0XHR9LCAxMjAwMDApO1xuIFx0XHRcdFx0c2NyaXB0Lm9uZXJyb3IgPSBzY3JpcHQub25sb2FkID0gb25TY3JpcHRDb21wbGV0ZTtcbiBcdFx0XHRcdGRvY3VtZW50LmhlYWQuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiBcdFx0XHR9XG4gXHRcdH1cbiBcdFx0cmV0dXJuIFByb21pc2UuYWxsKHByb21pc2VzKTtcbiBcdH07XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gZGVmaW5lIGdldHRlciBmdW5jdGlvbiBmb3IgaGFybW9ueSBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQgPSBmdW5jdGlvbihleHBvcnRzLCBuYW1lLCBnZXR0ZXIpIHtcbiBcdFx0aWYoIV9fd2VicGFja19yZXF1aXJlX18ubyhleHBvcnRzLCBuYW1lKSkge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBuYW1lLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZ2V0dGVyIH0pO1xuIFx0XHR9XG4gXHR9O1xuXG4gXHQvLyBkZWZpbmUgX19lc01vZHVsZSBvbiBleHBvcnRzXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIgPSBmdW5jdGlvbihleHBvcnRzKSB7XG4gXHRcdGlmKHR5cGVvZiBTeW1ib2wgIT09ICd1bmRlZmluZWQnICYmIFN5bWJvbC50b1N0cmluZ1RhZykge1xuIFx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBTeW1ib2wudG9TdHJpbmdUYWcsIHsgdmFsdWU6ICdNb2R1bGUnIH0pO1xuIFx0XHR9XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCAnX19lc01vZHVsZScsIHsgdmFsdWU6IHRydWUgfSk7XG4gXHR9O1xuXG4gXHQvLyBjcmVhdGUgYSBmYWtlIG5hbWVzcGFjZSBvYmplY3RcbiBcdC8vIG1vZGUgJiAxOiB2YWx1ZSBpcyBhIG1vZHVsZSBpZCwgcmVxdWlyZSBpdFxuIFx0Ly8gbW9kZSAmIDI6IG1lcmdlIGFsbCBwcm9wZXJ0aWVzIG9mIHZhbHVlIGludG8gdGhlIG5zXG4gXHQvLyBtb2RlICYgNDogcmV0dXJuIHZhbHVlIHdoZW4gYWxyZWFkeSBucyBvYmplY3RcbiBcdC8vIG1vZGUgJiA4fDE6IGJlaGF2ZSBsaWtlIHJlcXVpcmVcbiBcdF9fd2VicGFja19yZXF1aXJlX18udCA9IGZ1bmN0aW9uKHZhbHVlLCBtb2RlKSB7XG4gXHRcdGlmKG1vZGUgJiAxKSB2YWx1ZSA9IF9fd2VicGFja19yZXF1aXJlX18odmFsdWUpO1xuIFx0XHRpZihtb2RlICYgOCkgcmV0dXJuIHZhbHVlO1xuIFx0XHRpZigobW9kZSAmIDQpICYmIHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcgJiYgdmFsdWUgJiYgdmFsdWUuX19lc01vZHVsZSkgcmV0dXJuIHZhbHVlO1xuIFx0XHR2YXIgbnMgPSBPYmplY3QuY3JlYXRlKG51bGwpO1xuIFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLnIobnMpO1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkobnMsICdkZWZhdWx0JywgeyBlbnVtZXJhYmxlOiB0cnVlLCB2YWx1ZTogdmFsdWUgfSk7XG4gXHRcdGlmKG1vZGUgJiAyICYmIHR5cGVvZiB2YWx1ZSAhPSAnc3RyaW5nJykgZm9yKHZhciBrZXkgaW4gdmFsdWUpIF9fd2VicGFja19yZXF1aXJlX18uZChucywga2V5LCBmdW5jdGlvbihrZXkpIHsgcmV0dXJuIHZhbHVlW2tleV07IH0uYmluZChudWxsLCBrZXkpKTtcbiBcdFx0cmV0dXJuIG5zO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gb24gZXJyb3IgZnVuY3Rpb24gZm9yIGFzeW5jIGxvYWRpbmdcbiBcdF9fd2VicGFja19yZXF1aXJlX18ub2UgPSBmdW5jdGlvbihlcnIpIHsgY29uc29sZS5lcnJvcihlcnIpOyB0aHJvdyBlcnI7IH07XG5cbiBcdHZhciBqc29ucEFycmF5ID0gd2luZG93W1wid2VicGFja0pzb25wXCJdID0gd2luZG93W1wid2VicGFja0pzb25wXCJdIHx8IFtdO1xuIFx0dmFyIG9sZEpzb25wRnVuY3Rpb24gPSBqc29ucEFycmF5LnB1c2guYmluZChqc29ucEFycmF5KTtcbiBcdGpzb25wQXJyYXkucHVzaCA9IHdlYnBhY2tKc29ucENhbGxiYWNrO1xuIFx0anNvbnBBcnJheSA9IGpzb25wQXJyYXkuc2xpY2UoKTtcbiBcdGZvcih2YXIgaSA9IDA7IGkgPCBqc29ucEFycmF5Lmxlbmd0aDsgaSsrKSB3ZWJwYWNrSnNvbnBDYWxsYmFjayhqc29ucEFycmF5W2ldKTtcbiBcdHZhciBwYXJlbnRKc29ucEZ1bmN0aW9uID0gb2xkSnNvbnBGdW5jdGlvbjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDExKTtcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuLy8gY3NzIGJhc2UgY29kZSwgaW5qZWN0ZWQgYnkgdGhlIGNzcy1sb2FkZXJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVzZVNvdXJjZU1hcCkge1xuICB2YXIgbGlzdCA9IFtdOyAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG5cbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIHJldHVybiAnQG1lZGlhICcgKyBpdGVtWzJdICsgJ3snICsgY29udGVudCArICd9JztcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiBjb250ZW50O1xuICAgICAgfVxuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnkpIHtcbiAgICBpZiAodHlwZW9mIG1vZHVsZXMgPT09ICdzdHJpbmcnKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCAnJ11dO1xuICAgIH1cblxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XG5cbiAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGl0ZW0gPSBtb2R1bGVzW2ldOyAvLyBza2lwIGFscmVhZHkgaW1wb3J0ZWQgbW9kdWxlXG4gICAgICAvLyB0aGlzIGltcGxlbWVudGF0aW9uIGlzIG5vdCAxMDAlIHBlcmZlY3QgZm9yIHdlaXJkIG1lZGlhIHF1ZXJ5IGNvbWJpbmF0aW9uc1xuICAgICAgLy8gd2hlbiBhIG1vZHVsZSBpcyBpbXBvcnRlZCBtdWx0aXBsZSB0aW1lcyB3aXRoIGRpZmZlcmVudCBtZWRpYSBxdWVyaWVzLlxuICAgICAgLy8gSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXG4gICAgICBpZiAoaXRlbVswXSA9PSBudWxsIHx8ICFhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGlmIChtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XG4gICAgICAgIH0gZWxzZSBpZiAobWVkaWFRdWVyeSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSAnKCcgKyBpdGVtWzJdICsgJykgYW5kICgnICsgbWVkaWFRdWVyeSArICcpJztcbiAgICAgICAgfVxuXG4gICAgICAgIGxpc3QucHVzaChpdGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH07XG5cbiAgcmV0dXJuIGxpc3Q7XG59O1xuXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV0gfHwgJyc7XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJztcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcblxuXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcbiAgdmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcbiAgcmV0dXJuICcvKiMgJyArIGRhdGEgKyAnICovJztcbn0iLCIvKlxuXHRNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xuXG52YXIgc3R5bGVzSW5Eb20gPSB7fTtcblxudmFyXHRtZW1vaXplID0gZnVuY3Rpb24gKGZuKSB7XG5cdHZhciBtZW1vO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoKSB7XG5cdFx0aWYgKHR5cGVvZiBtZW1vID09PSBcInVuZGVmaW5lZFwiKSBtZW1vID0gZm4uYXBwbHkodGhpcywgYXJndW1lbnRzKTtcblx0XHRyZXR1cm4gbWVtbztcblx0fTtcbn07XG5cbnZhciBpc09sZElFID0gbWVtb2l6ZShmdW5jdGlvbiAoKSB7XG5cdC8vIFRlc3QgZm9yIElFIDw9IDkgYXMgcHJvcG9zZWQgYnkgQnJvd3NlcmhhY2tzXG5cdC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcblx0Ly8gVGVzdHMgZm9yIGV4aXN0ZW5jZSBvZiBzdGFuZGFyZCBnbG9iYWxzIGlzIHRvIGFsbG93IHN0eWxlLWxvYWRlclxuXHQvLyB0byBvcGVyYXRlIGNvcnJlY3RseSBpbnRvIG5vbi1zdGFuZGFyZCBlbnZpcm9ubWVudHNcblx0Ly8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG5cdHJldHVybiB3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYjtcbn0pO1xuXG52YXIgZ2V0VGFyZ2V0ID0gZnVuY3Rpb24gKHRhcmdldCwgcGFyZW50KSB7XG4gIGlmIChwYXJlbnQpe1xuICAgIHJldHVybiBwYXJlbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuICB9XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0LCBwYXJlbnQpIHtcbiAgICAgICAgICAgICAgICAvLyBJZiBwYXNzaW5nIGZ1bmN0aW9uIGluIG9wdGlvbnMsIHRoZW4gdXNlIGl0IGZvciByZXNvbHZlIFwiaGVhZFwiIGVsZW1lbnQuXG4gICAgICAgICAgICAgICAgLy8gVXNlZnVsIGZvciBTaGFkb3cgUm9vdCBzdHlsZSBpLmVcbiAgICAgICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAgICAgLy8gICBpbnNlcnRJbnRvOiBmdW5jdGlvbiAoKSB7IHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Zvb1wiKS5zaGFkb3dSb290IH1cbiAgICAgICAgICAgICAgICAvLyB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiB0YXJnZXQoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcblx0XHRcdHZhciBzdHlsZVRhcmdldCA9IGdldFRhcmdldC5jYWxsKHRoaXMsIHRhcmdldCwgcGFyZW50KTtcblx0XHRcdC8vIFNwZWNpYWwgY2FzZSB0byByZXR1cm4gaGVhZCBvZiBpZnJhbWUgaW5zdGVhZCBvZiBpZnJhbWUgaXRzZWxmXG5cdFx0XHRpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG5cdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0Ly8gVGhpcyB3aWxsIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhY2Nlc3MgdG8gaWZyYW1lIGlzIGJsb2NrZWRcblx0XHRcdFx0XHQvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG5cdFx0XHRcdH0gY2F0Y2goZSkge1xuXHRcdFx0XHRcdHN0eWxlVGFyZ2V0ID0gbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0bWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG5cdFx0fVxuXHRcdHJldHVybiBtZW1vW3RhcmdldF1cblx0fTtcbn0pKCk7XG5cbnZhciBzaW5nbGV0b24gPSBudWxsO1xudmFyXHRzaW5nbGV0b25Db3VudGVyID0gMDtcbnZhclx0c3R5bGVzSW5zZXJ0ZWRBdFRvcCA9IFtdO1xuXG52YXJcdGZpeFVybHMgPSByZXF1aXJlKFwiLi91cmxzXCIpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKGxpc3QsIG9wdGlvbnMpIHtcblx0aWYgKHR5cGVvZiBERUJVRyAhPT0gXCJ1bmRlZmluZWRcIiAmJiBERUJVRykge1xuXHRcdGlmICh0eXBlb2YgZG9jdW1lbnQgIT09IFwib2JqZWN0XCIpIHRocm93IG5ldyBFcnJvcihcIlRoZSBzdHlsZS1sb2FkZXIgY2Fubm90IGJlIHVzZWQgaW4gYSBub24tYnJvd3NlciBlbnZpcm9ubWVudFwiKTtcblx0fVxuXG5cdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdG9wdGlvbnMuYXR0cnMgPSB0eXBlb2Ygb3B0aW9ucy5hdHRycyA9PT0gXCJvYmplY3RcIiA/IG9wdGlvbnMuYXR0cnMgOiB7fTtcblxuXHQvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cblx0Ly8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXHRpZiAoIW9wdGlvbnMuc2luZ2xldG9uICYmIHR5cGVvZiBvcHRpb25zLnNpbmdsZXRvbiAhPT0gXCJib29sZWFuXCIpIG9wdGlvbnMuc2luZ2xldG9uID0gaXNPbGRJRSgpO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIDxoZWFkPiBlbGVtZW50XG4gICAgICAgIGlmICghb3B0aW9ucy5pbnNlcnRJbnRvKSBvcHRpb25zLmluc2VydEludG8gPSBcImhlYWRcIjtcblxuXHQvLyBCeSBkZWZhdWx0LCBhZGQgPHN0eWxlPiB0YWdzIHRvIHRoZSBib3R0b20gb2YgdGhlIHRhcmdldFxuXHRpZiAoIW9wdGlvbnMuaW5zZXJ0QXQpIG9wdGlvbnMuaW5zZXJ0QXQgPSBcImJvdHRvbVwiO1xuXG5cdHZhciBzdHlsZXMgPSBsaXN0VG9TdHlsZXMobGlzdCwgb3B0aW9ucyk7XG5cblx0YWRkU3R5bGVzVG9Eb20oc3R5bGVzLCBvcHRpb25zKTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gdXBkYXRlIChuZXdMaXN0KSB7XG5cdFx0dmFyIG1heVJlbW92ZSA9IFtdO1xuXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpdGVtID0gc3R5bGVzW2ldO1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRcdGRvbVN0eWxlLnJlZnMtLTtcblx0XHRcdG1heVJlbW92ZS5wdXNoKGRvbVN0eWxlKTtcblx0XHR9XG5cblx0XHRpZihuZXdMaXN0KSB7XG5cdFx0XHR2YXIgbmV3U3R5bGVzID0gbGlzdFRvU3R5bGVzKG5ld0xpc3QsIG9wdGlvbnMpO1xuXHRcdFx0YWRkU3R5bGVzVG9Eb20obmV3U3R5bGVzLCBvcHRpb25zKTtcblx0XHR9XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IG1heVJlbW92ZS5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGRvbVN0eWxlID0gbWF5UmVtb3ZlW2ldO1xuXG5cdFx0XHRpZihkb21TdHlsZS5yZWZzID09PSAwKSB7XG5cdFx0XHRcdGZvciAodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIGRvbVN0eWxlLnBhcnRzW2pdKCk7XG5cblx0XHRcdFx0ZGVsZXRlIHN0eWxlc0luRG9tW2RvbVN0eWxlLmlkXTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG59O1xuXG5mdW5jdGlvbiBhZGRTdHlsZXNUb0RvbSAoc3R5bGVzLCBvcHRpb25zKSB7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzLmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0dmFyIGRvbVN0eWxlID0gc3R5bGVzSW5Eb21baXRlbS5pZF07XG5cblx0XHRpZihkb21TdHlsZSkge1xuXHRcdFx0ZG9tU3R5bGUucmVmcysrO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgZG9tU3R5bGUucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHNbal0oaXRlbS5wYXJ0c1tqXSk7XG5cdFx0XHR9XG5cblx0XHRcdGZvcig7IGogPCBpdGVtLnBhcnRzLmxlbmd0aDsgaisrKSB7XG5cdFx0XHRcdGRvbVN0eWxlLnBhcnRzLnB1c2goYWRkU3R5bGUoaXRlbS5wYXJ0c1tqXSwgb3B0aW9ucykpO1xuXHRcdFx0fVxuXHRcdH0gZWxzZSB7XG5cdFx0XHR2YXIgcGFydHMgPSBbXTtcblxuXHRcdFx0Zm9yKHZhciBqID0gMDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0cGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cblx0XHRcdHN0eWxlc0luRG9tW2l0ZW0uaWRdID0ge2lkOiBpdGVtLmlkLCByZWZzOiAxLCBwYXJ0czogcGFydHN9O1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBsaXN0VG9TdHlsZXMgKGxpc3QsIG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlcyA9IFtdO1xuXHR2YXIgbmV3U3R5bGVzID0ge307XG5cblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG5cdFx0dmFyIGl0ZW0gPSBsaXN0W2ldO1xuXHRcdHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuXHRcdHZhciBjc3MgPSBpdGVtWzFdO1xuXHRcdHZhciBtZWRpYSA9IGl0ZW1bMl07XG5cdFx0dmFyIHNvdXJjZU1hcCA9IGl0ZW1bM107XG5cdFx0dmFyIHBhcnQgPSB7Y3NzOiBjc3MsIG1lZGlhOiBtZWRpYSwgc291cmNlTWFwOiBzb3VyY2VNYXB9O1xuXG5cdFx0aWYoIW5ld1N0eWxlc1tpZF0pIHN0eWxlcy5wdXNoKG5ld1N0eWxlc1tpZF0gPSB7aWQ6IGlkLCBwYXJ0czogW3BhcnRdfSk7XG5cdFx0ZWxzZSBuZXdTdHlsZXNbaWRdLnBhcnRzLnB1c2gocGFydCk7XG5cdH1cblxuXHRyZXR1cm4gc3R5bGVzO1xufVxuXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQgKG9wdGlvbnMsIHN0eWxlKSB7XG5cdHZhciB0YXJnZXQgPSBnZXRFbGVtZW50KG9wdGlvbnMuaW5zZXJ0SW50bylcblxuXHRpZiAoIXRhcmdldCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0SW50bycgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuXHR9XG5cblx0dmFyIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcFtzdHlsZXNJbnNlcnRlZEF0VG9wLmxlbmd0aCAtIDFdO1xuXG5cdGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcInRvcFwiKSB7XG5cdFx0aWYgKCFsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcCkge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgdGFyZ2V0LmZpcnN0Q2hpbGQpO1xuXHRcdH0gZWxzZSBpZiAobGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpIHtcblx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoc3R5bGUsIGxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wLm5leHRTaWJsaW5nKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0XHR9XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5wdXNoKHN0eWxlKTtcblx0fSBlbHNlIGlmIChvcHRpb25zLmluc2VydEF0ID09PSBcImJvdHRvbVwiKSB7XG5cdFx0dGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb3B0aW9ucy5pbnNlcnRBdCA9PT0gXCJvYmplY3RcIiAmJiBvcHRpb25zLmluc2VydEF0LmJlZm9yZSkge1xuXHRcdHZhciBuZXh0U2libGluZyA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRBdC5iZWZvcmUsIHRhcmdldCk7XG5cdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbmV4dFNpYmxpbmcpO1xuXHR9IGVsc2Uge1xuXHRcdHRocm93IG5ldyBFcnJvcihcIltTdHlsZSBMb2FkZXJdXFxuXFxuIEludmFsaWQgdmFsdWUgZm9yIHBhcmFtZXRlciAnaW5zZXJ0QXQnICgnb3B0aW9ucy5pbnNlcnRBdCcpIGZvdW5kLlxcbiBNdXN0IGJlICd0b3AnLCAnYm90dG9tJywgb3IgT2JqZWN0LlxcbiAoaHR0cHM6Ly9naXRodWIuY29tL3dlYnBhY2stY29udHJpYi9zdHlsZS1sb2FkZXIjaW5zZXJ0YXQpXFxuXCIpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudCAoc3R5bGUpIHtcblx0aWYgKHN0eWxlLnBhcmVudE5vZGUgPT09IG51bGwpIHJldHVybiBmYWxzZTtcblx0c3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG5cblx0dmFyIGlkeCA9IHN0eWxlc0luc2VydGVkQXRUb3AuaW5kZXhPZihzdHlsZSk7XG5cdGlmKGlkeCA+PSAwKSB7XG5cdFx0c3R5bGVzSW5zZXJ0ZWRBdFRvcC5zcGxpY2UoaWR4LCAxKTtcblx0fVxufVxuXG5mdW5jdGlvbiBjcmVhdGVTdHlsZUVsZW1lbnQgKG9wdGlvbnMpIHtcblx0dmFyIHN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cblx0aWYob3B0aW9ucy5hdHRycy5ub25jZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0dmFyIG5vbmNlID0gZ2V0Tm9uY2UoKTtcblx0XHRpZiAobm9uY2UpIHtcblx0XHRcdG9wdGlvbnMuYXR0cnMubm9uY2UgPSBub25jZTtcblx0XHR9XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBnZXROb25jZSgpIHtcblx0aWYgKHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdHJldHVybiBfX3dlYnBhY2tfbm9uY2VfXztcbn1cblxuZnVuY3Rpb24gYWRkU3R5bGUgKG9iaiwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGUsIHVwZGF0ZSwgcmVtb3ZlLCByZXN1bHQ7XG5cblx0Ly8gSWYgYSB0cmFuc2Zvcm0gZnVuY3Rpb24gd2FzIGRlZmluZWQsIHJ1biBpdCBvbiB0aGUgY3NzXG5cdGlmIChvcHRpb25zLnRyYW5zZm9ybSAmJiBvYmouY3NzKSB7XG5cdCAgICByZXN1bHQgPSB0eXBlb2Ygb3B0aW9ucy50cmFuc2Zvcm0gPT09ICdmdW5jdGlvbidcblx0XHQgPyBvcHRpb25zLnRyYW5zZm9ybShvYmouY3NzKSBcblx0XHQgOiBvcHRpb25zLnRyYW5zZm9ybS5kZWZhdWx0KG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiaW1wb3J0ICcuL2luZGV4LmNzcyc7XG5jb25zdCBkZWNhbWVsaXplID0gcmVxdWlyZSgnZGVjYW1lbGl6ZScpO1xuY29uc3QgdGl0bGVpemUgPSByZXF1aXJlKCd0aXRsZWl6ZScpO1xuXG5jb25zdCBMb29wcyA9IFtcbiAgICAnQ3ViZUxvb3AnLFxuICAgICdHcmlkTG9vcCcsXG4gICAgJ1NreXNjcmFwZXJzTG9vcCcsXG4gICAgJ1N1bkxvb3AnLFxuICAgICdGbG9hdGluZ0JpbycsXG4gICAgJ01vcnBoaW5nU3BoZXJlJyxcbiAgICAnTGlzc2Fqb3V4JyxcbiAgICAnT3BlbkhlYWQnLFxuICAgICdUcmVlRXhhbXBsZSdcbl1cblxuY2xhc3MgQXBwIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy5sb29wcyA9IFtdO1xuICAgIH1cblxuICAgIEluaXQoKSB7XG4gICAgICAgIHRoaXMuQ3JlYXRlTWVudSgpO1xuICAgICAgICB0aGlzLkFkZENsb3NlUmVuZGVyZXJUb01lbnUoKTtcbiAgICAgICAgdGhpcy5Qb3B1bGF0ZU1lbnUoKTtcbiAgICAgICAgdGhpcy5DcmVhdGVPcGVuTWVudUJ1dHRvbigpO1xuICAgICAgICB0aGlzLlN0YXJ0TG9vcCggdGhpcy5sb29wc1t0aGlzLmxvb3BzLmxlbmd0aC0yXSApO1xuICAgIH1cblxuICAgIENyZWF0ZU1lbnUoKSB7XG4gICAgICAgIHRoaXMubWVudUNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgICAgICB0aGlzLm1lbnVDb250YWluZXIuc2V0QXR0cmlidXRlKCdpZCcsICdtZW51LWNvbnRhaW5lcicpO1xuICAgICAgICB0aGlzLm1lbnVDb250YWluZXIuc2V0QXR0cmlidXRlKCdjbGFzcycsICdzaG93Jyk7XG4gICAgICAgIHRoaXMubWVudSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3VsJyk7XG4gICAgICAgIHRoaXMubWVudS5zZXRBdHRyaWJ1dGUoJ2lkJywgJ21lbnUnKTtcbiAgICAgICAgdGhpcy5tZW51Q29udGFpbmVyLmFwcGVuZENoaWxkKHRoaXMubWVudSk7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5tZW51Q29udGFpbmVyKTtcbiAgICB9XG5cbiAgICBBZGRDbG9zZVJlbmRlcmVyVG9NZW51KCkge1xuICAgICAgICB0aGlzLm1lbnUuYXBwZW5kQ2hpbGQodGhpcy5NZW51RWxlbWVudCgnQ2xvc2UgcmVuZGVyaW5nJywgKGUpID0+IHtcbiAgICAgICAgICAgIHRoaXMuRGVzdHJveVNjZW5lKCk7XG4gICAgICAgICAgICB0aGlzLlNlbGVjdE1lbnVWb2ljZShlLnRhcmdldCk7XG4gICAgICAgIH0pKTtcbiAgICB9XG5cbiAgICBQb3B1bGF0ZU1lbnUoKSB7XG4gICAgICAgIGZvciAobGV0IGxvb3Agb2YgTG9vcHMpIHtcbiAgICAgICAgICAgIHRoaXMubG9vcHMucHVzaChcbiAgICAgICAgICAgICAgICB0aGlzLkFkZExvb3BCdXR0b24oXG4gICAgICAgICAgICAgICAgICAgIHRpdGxlaXplKGRlY2FtZWxpemUobG9vcCwgJyAnKSksXG4gICAgICAgICAgICAgICAgICAgIGxvb3BcbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgQWRkTG9vcEJ1dHRvbih0ZXh0LCBsb29wKSB7XG4gICAgICAgIGNvbnN0IG1lbnVWb2ljZSA9IHRoaXMuTWVudUVsZW1lbnQoXG4gICAgICAgICAgICB0ZXh0LFxuICAgICAgICAgICAgZSA9PiB7XG4gICAgICAgICAgICAgICAgdGhpcy5TdGFydExvb3AoZS50YXJnZXQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIG1lbnVWb2ljZS5zZXRBdHRyaWJ1dGUoJ2xvb3BOYW1lJywgbG9vcCk7XG4gICAgICAgIHJldHVybiB0aGlzLm1lbnUuYXBwZW5kQ2hpbGQobWVudVZvaWNlKTtcbiAgICB9XG5cbiAgICBNZW51RWxlbWVudCh0ZXh0LCBhY3Rpb24pIHtcbiAgICAgICAgY29uc3QgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgICAgIGVsZW1lbnQuaW5uZXJIVE1MID0gdGV4dDtcbiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFjdGlvbik7XG4gICAgICAgIHJldHVybiBlbGVtZW50O1xuICAgIH1cblxuICAgIFN0YXJ0TG9vcCh0YXJnZXRCdXR0b24pIHtcbiAgICAgICAgY29uc29sZS5sb2codGFyZ2V0QnV0dG9uLnBhcmVudEVsZW1lbnQpO1xuICAgICAgICBjb25zb2xlLmxvZyh0YXJnZXRCdXR0b24pO1xuICAgICAgICBcbiAgICAgICAgdGFyZ2V0QnV0dG9uLnBhcmVudEVsZW1lbnQuc2Nyb2xsVG8oMCwgdGFyZ2V0QnV0dG9uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcClcblxuICAgICAgICB0aGlzLlNlbGVjdE1lbnVWb2ljZSh0YXJnZXRCdXR0b24pO1xuICAgICAgICBjb25zb2xlLmxvZyhcInN0YXJ0aW5nIGxvb3BcIik7XG4gICAgICAgIHRoaXMuU3RhcnRMb2FkaW5nKCk7XG4gICAgICAgIGltcG9ydChcbiAgICAgICAgICAgIC8qIHdlYnBhY2tDaHVua05hbWU6ICdbcmVxdWVzdF0nICovXG4gICAgICAgICAgICBgLi9Mb29wcy8ke3RhcmdldEJ1dHRvbi5nZXRBdHRyaWJ1dGUoJ2xvb3BuYW1lJyl9YClcbiAgICAgICAgLnRoZW4oKHtkZWZhdWx0OiBuZXdsb29wfSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5JbnN0YW50aWF0ZUxvb3AobmV3bG9vcCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIFN0YXJ0TG9hZGluZygpIHsgICAgICAgIFxuICAgICAgICBpZiAoIXRoaXMubG9hZGluZykge1xuICAgICAgICAgICAgdGhpcy5sb2FkaW5nID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gICAgICAgICAgICB0aGlzLmxvYWRpbmcuY2xhc3NOYW1lID0gJ2xvYWRpbmcnO1xuICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmQodGhpcy5sb2FkaW5nKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIFN0b3BMb2FkaW5nKCkge1xuICAgICAgICBpZiAoIXRoaXMubG9hZGluZykgcmV0dXJuO1xuICAgICAgICB0aGlzLmxvYWRpbmcucmVtb3ZlKCk7XG4gICAgICAgIHRoaXMubG9hZGluZyA9IG51bGw7XG4gICAgfVxuXG4gICAgU2VsZWN0TWVudVZvaWNlKHNlbGVjdGVkVm9pY2UpIHtcbiAgICAgICAgZm9yIChjb25zdCB2b2ljZSBvZiB0aGlzLm1lbnUuY2hpbGROb2Rlcykge1xuICAgICAgICAgICAgdm9pY2UuY2xhc3NMaXN0LnJlbW92ZSgnc2VsZWN0ZWQnKTtcbiAgICAgICAgfVxuICAgICAgICBzZWxlY3RlZFZvaWNlLmNsYXNzTGlzdC5hZGQoJ3NlbGVjdGVkJyk7XG4gICAgfVxuXG4gICAgSW5zdGFudGlhdGVMb29wKGxvb3ApIHtcbiAgICAgICAgdGhpcy5EZXN0cm95U2NlbmUoKTtcbiAgICAgICAgaW1wb3J0KFxuICAgICAgICAgICAgLyogd2VicGFja0NodW5rTmFtZTogXCJiYXNpYy1zY2VuZVwiICovXG4gICAgICAgICAgICAnLi9PYmplY3RzL0Jhc2ljU2NlbmUuanMnIClcbiAgICAgICAgLnRoZW4oKG1vZHVsZSkgPT4ge1xuICAgICAgICAgICAgdGhpcy5iYXNpY1NjZW5lID0gbmV3IG1vZHVsZS5kZWZhdWx0KCk7XG4gICAgICAgICAgICB0aGlzLmJhc2ljU2NlbmUuSW5pdFNjZW5lKCk7XG4gICAgICAgICAgICB0aGlzLmxvb3AgPSBuZXcgbG9vcCh7XG4gICAgICAgICAgICAgICAgc2NlbmU6IHRoaXMuYmFzaWNTY2VuZSxcbiAgICAgICAgICAgICAgICBvbkxvYWQ6ICgpID0+IHRoaXMuU3RvcExvYWRpbmcoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLmJhc2ljU2NlbmUuQWRkKHRoaXMubG9vcCk7XG4gICAgICAgIH0pXG4gICAgfVxuXG4gICAgQ3JlYXRlT3Blbk1lbnVCdXR0b24oKSB7XG4gICAgICAgIGNvbnN0IG9wZW5NZW51QnV0dG9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYScpO1xuICAgICAgICBvcGVuTWVudUJ1dHRvbi5pbm5lckhUTUwgPSAnJiM5Nzc2JztcbiAgICAgICAgb3Blbk1lbnVCdXR0b24uc2V0QXR0cmlidXRlKCdpZCcsICdtZW51LWN0cmwnKTtcbiAgICAgICAgb3Blbk1lbnVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB0aGlzLlNob3dIaWRlTWVudSgpKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChvcGVuTWVudUJ1dHRvbik7XG4gICAgfVxuXG4gICAgU2hvd0hpZGVNZW51KCkge1xuICAgICAgICBjb25zdCBjdXJyZW50Q2xhc3MgPSB0aGlzLm1lbnVDb250YWluZXIuZ2V0QXR0cmlidXRlKCdjbGFzcycpO1xuICAgICAgICAvLyBodHRwczovL2Nzcy10cmlja3MuY29tL3Jlc3RhcnQtY3NzLWFuaW1hdGlvbi9cbiAgICAgICAgLy8gbmV4dCB0aHJlZSBsaW5lcyBhcmUgYSB3b3JrYXJvdW5kIHRvIHJldHJpZ2dlciBhbmltXG4gICAgICAgIHRoaXMubWVudUNvbnRhaW5lci5jbGFzc0xpc3QucmVtb3ZlKGN1cnJlbnRDbGFzcyk7XG4gICAgICAgIHZvaWQgdGhpcy5tZW51Q29udGFpbmVyLm9mZnNldFdpZHRoO1xuICAgICAgICB0aGlzLm1lbnVDb250YWluZXIuY2xhc3NMaXN0LmFkZChjdXJyZW50Q2xhc3MgPT09ICdoaWRlJyA/ICdzaG93JyA6ICdoaWRlJyk7XG4gICAgfVxuXG4gICAgRGVzdHJveVNjZW5lKCkge1xuICAgICAgICBpZiAoIXRoaXMuYmFzaWNTY2VuZSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMuYmFzaWNTY2VuZS5EZXN0cm95KCk7XG4gICAgICAgIHRoaXMuYmFzaWNTY2VuZSA9IG51bGw7XG4gICAgfVxufVxuXG5jb25zdCBhcHAgPSBuZXcgQXBwKCk7XG5hcHAuSW5pdCgpOyIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9pbmRleC5jc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL2luZGV4LmNzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCIpKGZhbHNlKTtcbi8vIE1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiYm9keSB7XFxuICAgIHdpZHRoOiAxMDB2dztcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IHJvdztcXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmF5O1xcbn1cXG5cXG5jYW52YXMge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGxlZnQ6IDA7XFxuICAgIHRvcDogMDtcXG4gICAgYm90dG9tOiAwO1xcbiAgICByaWdodDogMDtcXG4gICAgei1pbmRleDogLTEwO1xcbn1cXG5cXG4jbWVudS1jb250YWluZXIge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIHRvcDogMDtcXG4gICAgYmFja2dyb3VuZDogd2hpdGU7XFxuICAgIHBhZGRpbmc6IDAuNWVtIDAgMCAwLjVlbTtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBvcGFjaXR5OiAwLjc7XFxuICAgIC8qIGhlaWdodDogY2FsYygxMDB2aCAtIDAuNWVtKTsgKi9cXG4gICAgYm90dG9tOiAwO1xcbiAgICBmb250LXNpemU6IDMuNXZoO1xcbn1cXG5cXG5cXG4jbWVudSB7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgdG9wOiAwO1xcbiAgICBwYWRkaW5nOiAwLjVlbSAwZW0gMCAwLjVlbTtcXG4gICAgcGFkZGluZy1yaWdodDogMWVtO1xcbiAgICBib3R0b206IDA7XFxuICAgIG1hcmdpbjogMDtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1mbG93OiBjb2x1bW47XFxuICAgIG92ZXJmbG93OiBhdXRvO1xcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDVlbSk7XFxufVxcblxcbiNtZW51OjphZnRlciB7XFxuICAgIGhlaWdodDogNGVtO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XFxufVxcblxcbi8qIEBtZWRpYSBvbmx5IHNjcmVlbiBcXG5hbmQgKG1pbi1kZXZpY2Utd2lkdGg6IDc2OHB4KSBcXG5hbmQgKG1heC1kZXZpY2Utd2lkdGg6IDEwMjRweClcXG5hbmQgKC13ZWJraXQtbWluLWRldmljZS1waXhlbC1yYXRpbzogMikgeyBcXG4gICAgI21lbnUge1xcbiAgICAgICAgZm9udC1zaXplOiAxLjNlbTtcXG4gICAgfVxcbn1cXG5cXG5AbWVkaWEgb25seSBzY3JlZW5cXG5hbmQgKG1pbi1kZXZpY2Utd2lkdGggOiAzNjBweClcXG5hbmQgKG1heC1kZXZpY2Utd2lkdGggOiA2NDBweCl7XFxuICAgICNtZW51IHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMS4zZW07XFxuICAgIH1cXG59XFxuXFxuQG1lZGlhIG9ubHkgc2NyZWVuICBcXG5hbmQgKG1heC1kZXZpY2Utd2lkdGg6IDUwMHB4KVxcbmFuZCAoLXdlYmtpdC1taW4tZGV2aWNlLXBpeGVsLXJhdGlvOiAzKVxcbmFuZCAob3JpZW50YXRpb246IHBvcnRyYWl0KSB7IFxcbiAgICAgICNtZW51IHtcXG4gICAgICAgICAgZm9udC1zaXplOiAxLjM1ZW07XFxuICAgICAgfVxcbiAgfVxcblxcbkBtZWRpYSBvbmx5IHNjcmVlbiAgXFxuYW5kIChtYXgtZGV2aWNlLXdpZHRoOiAxMDI0cHgpXFxuYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86IDMpXFxuYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7IFxcbiAgICAjbWVudSB7XFxuICAgICAgICBmb250LXNpemU6IDEuMzVlbTtcXG4gICAgfVxcbn1cXG5cXG5AbWVkaWEgb25seSBzY3JlZW4gXFxuYW5kIChtaW4tZGV2aWNlLXdpZHRoOiAxMDI1cHgpXFxuYW5kIChvcmllbnRhdGlvbjogbGFuZHNjYXBlKSB7XFxuICAgICNtZW51IHtcXG4gICAgICAgIGZvbnQtc2l6ZTogMWVtO1xcbiAgICB9XFxufSAqL1xcblxcbiNtZW51IGxpIHtcXG4gICAgbWFyZ2luOiAwLjFlbSAwO1xcbiAgICBsaXN0LXN0eWxlOiBub25lO1xcbiAgICBmb250LWZhbWlseTogbW9ub3NwYWNlO1xcbiAgICBmb250LXZhcmlhbnQ6IGFsbC1zbWFsbC1jYXBzO1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIG1hcmdpbi1ib3R0b206IDAuMmVtO1xcbiAgICBwYWRkaW5nOiAwLjVlbSAwO1xcbn1cXG5cXG4jbWVudSBsaTpob3ZlciB7XFxuICAgIHRleHQtc2hhZG93OiAycHggMnB4IGdyYXk7XFxuICAgIGxlZnQ6IC0ycHg7XFxuICAgIHRvcDogLTJweDtcXG4gICAgY29sb3I6IGxpZ2h0Z3JheTtcXG59XFxuXFxuI21lbnUgbGkuc2VsZWN0ZWQge1xcbiAgICBmb250LXdlaWdodDogYm9sZDtcXG59XFxuXFxuI21lbnUtY3RybCB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgbGVmdDogMC4xZW07XFxuICAgIGJvdHRvbTogMC4xZW07XFxuICAgIGRpc3BsYXk6IGJsb2NrO1xcbiAgICBmb250LXNpemU6IDMuNWVtO1xcbiAgICBjb2xvcjogI2Y1ZjVmNTtcXG4gICAgdGV4dC1zaGFkb3c6IDJweCAycHggIzk5OTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZSgzNSUsIDApIHNjYWxlWCgxLjQpO1xcbn1cXG5cXG4jbWVudS1jb250YWluZXIuc2hvdyB7XFxuICAgIGFuaW1hdGlvbi1uYW1lOiBtZW51LWFuaW07XFxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC41cztcXG4gICAgYW5pbWF0aW9uLWZpbGwtbW9kZTogZm9yd2FyZHM7XFxuICAgIGFuaW1hdGlvbi1kaXJlY3Rpb246IG5vcm1hbDtcXG59XFxuXFxuI21lbnUtY29udGFpbmVyLmhpZGUge1xcbiAgICBhbmltYXRpb24tbmFtZTogbWVudS1hbmltO1xcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNXM7XFxuICAgIGFuaW1hdGlvbi1maWxsLW1vZGU6IGZvcndhcmRzO1xcbiAgICBhbmltYXRpb24tZGlyZWN0aW9uOiByZXZlcnNlO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIG1lbnUtYW5pbSB7XFxuICAgIGZyb20ge2xlZnQ6IC0xMDAlfVxcbiAgICB0byB7bGVmdDogMHZ3fVxcbn1cXG5cXG5cXG4ubG9hZGluZyB7XFxuICAgIHdpZHRoOiAxNXZ3O1xcbiAgICBoZWlnaHQ6IDE1dnc7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgdG9wOiBjYWxjKDUwJSAtIDd2dyk7XFxuICAgIGxlZnQ6IGNhbGMoNTAlIC0gN3Z3KTtcXG4gICAgYm9yZGVyLXJhZGl1czogN3Z3O1xcbiAgICBhbGlnbi1jb250ZW50OiBjZW50ZXI7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIHotaW5kZXg6IDk5OTk7XFxufVxcblxcbi5sb2FkaW5nOjphZnRlciB7XFxuICAgIGNvbnRlbnQ6IFxcXCJMT0FESU5HXFxcIjtcXG4gICAgaGVpZ2h0OiAxMDAlO1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgICBsaW5lLWhlaWdodDogbm9ybWFsO1xcbiAgICBmb250LXNpemU6IDNlbTtcXG4gICAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkZXI7XFxufVxcblxcbkBrZXlmcmFtZXMgbG9hZGluZyB7XFxuICAgIGZyb20ge3RyYW5zZm9ybTogdHJhbnNsYXRlWCg3MCUpO31cXG4gICAgdG8ge3RyYW5zZm9ybTogdHJhbnNsYXRlWCgtMTAwJSk7fVxcbiAgfVwiLCBcIlwiXSk7XG5cbiIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwiJ3VzZSBzdHJpY3QnO1xuY29uc3QgeFJlZ0V4cCA9IHJlcXVpcmUoJ3hyZWdleHAnKTtcblxubW9kdWxlLmV4cG9ydHMgPSAodGV4dCwgc2VwYXJhdG9yKSA9PiB7XG5cdGlmICh0eXBlb2YgdGV4dCAhPT0gJ3N0cmluZycpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhIHN0cmluZycpO1xuXHR9XG5cblx0c2VwYXJhdG9yID0gdHlwZW9mIHNlcGFyYXRvciA9PT0gJ3VuZGVmaW5lZCcgPyAnXycgOiBzZXBhcmF0b3I7XG5cblx0Y29uc3QgcmVnZXgxID0geFJlZ0V4cCgnKFtcXFxccHtMbH1cXFxcZF0pKFxcXFxwe0x1fSknLCAnZycpO1xuXHRjb25zdCByZWdleDIgPSB4UmVnRXhwKCcoXFxcXHB7THV9KykoXFxcXHB7THV9W1xcXFxwe0xsfVxcXFxkXSspJywgJ2cnKTtcblxuXHRyZXR1cm4gdGV4dFxuXHRcdC8vIFRPRE86IFVzZSB0aGlzIGluc3RlYWQgb2YgYHhyZWdleHBgIHdoZW4gdGFyZ2V0aW5nIE5vZGUuanMgMTA6XG5cdFx0Ly8gLnJlcGxhY2UoLyhbXFxwe0xvd2VyY2FzZV9MZXR0ZXJ9XFxkXSkoXFxwe1VwcGVyY2FzZV9MZXR0ZXJ9KS9ndSwgYCQxJHtzZXBhcmF0b3J9JDJgKVxuXHRcdC8vIC5yZXBsYWNlKC8oXFxwe0xvd2VyY2FzZV9MZXR0ZXJ9KykoXFxwe1VwcGVyY2FzZV9MZXR0ZXJ9W1xccHtMb3dlcmNhc2VfTGV0dGVyfVxcZF0rKS9ndSwgYCQxJHtzZXBhcmF0b3J9JDJgKVxuXHRcdC5yZXBsYWNlKHJlZ2V4MSwgYCQxJHtzZXBhcmF0b3J9JDJgKVxuXHRcdC5yZXBsYWNlKHJlZ2V4MiwgYCQxJHtzZXBhcmF0b3J9JDJgKVxuXHRcdC50b0xvd2VyQ2FzZSgpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gIHZhbHVlOiB0cnVlXG59KTtcblxudmFyIF94cmVnZXhwID0gcmVxdWlyZSgnLi94cmVnZXhwJyk7XG5cbnZhciBfeHJlZ2V4cDIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF94cmVnZXhwKTtcblxudmFyIF9idWlsZCA9IHJlcXVpcmUoJy4vYWRkb25zL2J1aWxkJyk7XG5cbnZhciBfYnVpbGQyID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfYnVpbGQpO1xuXG52YXIgX21hdGNocmVjdXJzaXZlID0gcmVxdWlyZSgnLi9hZGRvbnMvbWF0Y2hyZWN1cnNpdmUnKTtcblxudmFyIF9tYXRjaHJlY3Vyc2l2ZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9tYXRjaHJlY3Vyc2l2ZSk7XG5cbnZhciBfdW5pY29kZUJhc2UgPSByZXF1aXJlKCcuL2FkZG9ucy91bmljb2RlLWJhc2UnKTtcblxudmFyIF91bmljb2RlQmFzZTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91bmljb2RlQmFzZSk7XG5cbnZhciBfdW5pY29kZUJsb2NrcyA9IHJlcXVpcmUoJy4vYWRkb25zL3VuaWNvZGUtYmxvY2tzJyk7XG5cbnZhciBfdW5pY29kZUJsb2NrczIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF91bmljb2RlQmxvY2tzKTtcblxudmFyIF91bmljb2RlQ2F0ZWdvcmllcyA9IHJlcXVpcmUoJy4vYWRkb25zL3VuaWNvZGUtY2F0ZWdvcmllcycpO1xuXG52YXIgX3VuaWNvZGVDYXRlZ29yaWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VuaWNvZGVDYXRlZ29yaWVzKTtcblxudmFyIF91bmljb2RlUHJvcGVydGllcyA9IHJlcXVpcmUoJy4vYWRkb25zL3VuaWNvZGUtcHJvcGVydGllcycpO1xuXG52YXIgX3VuaWNvZGVQcm9wZXJ0aWVzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VuaWNvZGVQcm9wZXJ0aWVzKTtcblxudmFyIF91bmljb2RlU2NyaXB0cyA9IHJlcXVpcmUoJy4vYWRkb25zL3VuaWNvZGUtc2NyaXB0cycpO1xuXG52YXIgX3VuaWNvZGVTY3JpcHRzMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3VuaWNvZGVTY3JpcHRzKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuKDAsIF9idWlsZDIuZGVmYXVsdCkoX3hyZWdleHAyLmRlZmF1bHQpO1xuKDAsIF9tYXRjaHJlY3Vyc2l2ZTIuZGVmYXVsdCkoX3hyZWdleHAyLmRlZmF1bHQpO1xuKDAsIF91bmljb2RlQmFzZTIuZGVmYXVsdCkoX3hyZWdleHAyLmRlZmF1bHQpO1xuKDAsIF91bmljb2RlQmxvY2tzMi5kZWZhdWx0KShfeHJlZ2V4cDIuZGVmYXVsdCk7XG4oMCwgX3VuaWNvZGVDYXRlZ29yaWVzMi5kZWZhdWx0KShfeHJlZ2V4cDIuZGVmYXVsdCk7XG4oMCwgX3VuaWNvZGVQcm9wZXJ0aWVzMi5kZWZhdWx0KShfeHJlZ2V4cDIuZGVmYXVsdCk7XG4oMCwgX3VuaWNvZGVTY3JpcHRzMi5kZWZhdWx0KShfeHJlZ2V4cDIuZGVmYXVsdCk7XG5cbmV4cG9ydHMuZGVmYXVsdCA9IF94cmVnZXhwMi5kZWZhdWx0O1xubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG4vKiFcbiAqIFhSZWdFeHAgNC4wLjBcbiAqIDx4cmVnZXhwLmNvbT5cbiAqIFN0ZXZlbiBMZXZpdGhhbiAoYykgMjAwNy0yMDE3IE1JVCBMaWNlbnNlXG4gKi9cblxuLyoqXG4gKiBYUmVnRXhwIHByb3ZpZGVzIGF1Z21lbnRlZCwgZXh0ZW5zaWJsZSByZWd1bGFyIGV4cHJlc3Npb25zLiBZb3UgZ2V0IGFkZGl0aW9uYWwgcmVnZXggc3ludGF4IGFuZFxuICogZmxhZ3MsIGJleW9uZCB3aGF0IGJyb3dzZXJzIHN1cHBvcnQgbmF0aXZlbHkuIFhSZWdFeHAgaXMgYWxzbyBhIHJlZ2V4IHV0aWxpdHkgYmVsdCB3aXRoIHRvb2xzIHRvXG4gKiBtYWtlIHlvdXIgY2xpZW50LXNpZGUgZ3JlcHBpbmcgc2ltcGxlciBhbmQgbW9yZSBwb3dlcmZ1bCwgd2hpbGUgZnJlZWluZyB5b3UgZnJvbSByZWxhdGVkXG4gKiBjcm9zcy1icm93c2VyIGluY29uc2lzdGVuY2llcy5cbiAqL1xuXG4vLyA9PS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tPT1cbi8vIFByaXZhdGUgc3R1ZmZcbi8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuXG4vLyBQcm9wZXJ0eSBuYW1lIHVzZWQgZm9yIGV4dGVuZGVkIHJlZ2V4IGluc3RhbmNlIGRhdGFcbnZhciBSRUdFWF9EQVRBID0gJ3hyZWdleHAnO1xuLy8gT3B0aW9uYWwgZmVhdHVyZXMgdGhhdCBjYW4gYmUgaW5zdGFsbGVkIGFuZCB1bmluc3RhbGxlZFxudmFyIGZlYXR1cmVzID0ge1xuICAgIGFzdHJhbDogZmFsc2Vcbn07XG4vLyBOYXRpdmUgbWV0aG9kcyB0byB1c2UgYW5kIHJlc3RvcmUgKCduYXRpdmUnIGlzIGFuIEVTMyByZXNlcnZlZCBrZXl3b3JkKVxudmFyIG5hdGl2ID0ge1xuICAgIGV4ZWM6IFJlZ0V4cC5wcm90b3R5cGUuZXhlYyxcbiAgICB0ZXN0OiBSZWdFeHAucHJvdG90eXBlLnRlc3QsXG4gICAgbWF0Y2g6IFN0cmluZy5wcm90b3R5cGUubWF0Y2gsXG4gICAgcmVwbGFjZTogU3RyaW5nLnByb3RvdHlwZS5yZXBsYWNlLFxuICAgIHNwbGl0OiBTdHJpbmcucHJvdG90eXBlLnNwbGl0XG59O1xuLy8gU3RvcmFnZSBmb3IgZml4ZWQvZXh0ZW5kZWQgbmF0aXZlIG1ldGhvZHNcbnZhciBmaXhlZCA9IHt9O1xuLy8gU3RvcmFnZSBmb3IgcmVnZXhlcyBjYWNoZWQgYnkgYFhSZWdFeHAuY2FjaGVgXG52YXIgcmVnZXhDYWNoZSA9IHt9O1xuLy8gU3RvcmFnZSBmb3IgcGF0dGVybiBkZXRhaWxzIGNhY2hlZCBieSB0aGUgYFhSZWdFeHBgIGNvbnN0cnVjdG9yXG52YXIgcGF0dGVybkNhY2hlID0ge307XG4vLyBTdG9yYWdlIGZvciByZWdleCBzeW50YXggdG9rZW5zIGFkZGVkIGludGVybmFsbHkgb3IgYnkgYFhSZWdFeHAuYWRkVG9rZW5gXG52YXIgdG9rZW5zID0gW107XG4vLyBUb2tlbiBzY29wZXNcbnZhciBkZWZhdWx0U2NvcGUgPSAnZGVmYXVsdCc7XG52YXIgY2xhc3NTY29wZSA9ICdjbGFzcyc7XG4vLyBSZWdleGVzIHRoYXQgbWF0Y2ggbmF0aXZlIHJlZ2V4IHN5bnRheCwgaW5jbHVkaW5nIG9jdGFsc1xudmFyIG5hdGl2ZVRva2VucyA9IHtcbiAgICAvLyBBbnkgbmF0aXZlIG11bHRpY2hhcmFjdGVyIHRva2VuIGluIGRlZmF1bHQgc2NvcGUsIG9yIGFueSBzaW5nbGUgY2hhcmFjdGVyXG4gICAgJ2RlZmF1bHQnOiAvXFxcXCg/OjAoPzpbMC0zXVswLTddezAsMn18WzQtN11bMC03XT8pP3xbMS05XVxcZCp8eFtcXGRBLUZhLWZdezJ9fHUoPzpbXFxkQS1GYS1mXXs0fXx7W1xcZEEtRmEtZl0rfSl8Y1tBLVphLXpdfFtcXHNcXFNdKXxcXChcXD8oPzpbOj0hXXw8Wz0hXSl8Wz8qK11cXD98e1xcZCsoPzosXFxkKik/fVxcPz98W1xcc1xcU10vLFxuICAgIC8vIEFueSBuYXRpdmUgbXVsdGljaGFyYWN0ZXIgdG9rZW4gaW4gY2hhcmFjdGVyIGNsYXNzIHNjb3BlLCBvciBhbnkgc2luZ2xlIGNoYXJhY3RlclxuICAgICdjbGFzcyc6IC9cXFxcKD86WzAtM11bMC03XXswLDJ9fFs0LTddWzAtN10/fHhbXFxkQS1GYS1mXXsyfXx1KD86W1xcZEEtRmEtZl17NH18e1tcXGRBLUZhLWZdK30pfGNbQS1aYS16XXxbXFxzXFxTXSl8W1xcc1xcU10vXG59O1xuLy8gQW55IGJhY2tyZWZlcmVuY2Ugb3IgZG9sbGFyLXByZWZpeGVkIGNoYXJhY3RlciBpbiByZXBsYWNlbWVudCBzdHJpbmdzXG52YXIgcmVwbGFjZW1lbnRUb2tlbiA9IC9cXCQoPzp7KFtcXHckXSspfXw8KFtcXHckXSspPnwoXFxkXFxkP3xbXFxzXFxTXSkpL2c7XG4vLyBDaGVjayBmb3IgY29ycmVjdCBgZXhlY2AgaGFuZGxpbmcgb2Ygbm9ucGFydGljaXBhdGluZyBjYXB0dXJpbmcgZ3JvdXBzXG52YXIgY29ycmVjdEV4ZWNOcGNnID0gbmF0aXYuZXhlYy5jYWxsKC8oKT8/LywgJycpWzFdID09PSB1bmRlZmluZWQ7XG4vLyBDaGVjayBmb3IgRVM2IGBmbGFnc2AgcHJvcCBzdXBwb3J0XG52YXIgaGFzRmxhZ3NQcm9wID0gL3gvLmZsYWdzICE9PSB1bmRlZmluZWQ7XG4vLyBTaG9ydGN1dCB0byBgT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZ2BcbnZhciB0b1N0cmluZyA9IHt9LnRvU3RyaW5nO1xuXG5mdW5jdGlvbiBoYXNOYXRpdmVGbGFnKGZsYWcpIHtcbiAgICAvLyBDYW4ndCBjaGVjayBiYXNlZCBvbiB0aGUgcHJlc2VuY2Ugb2YgcHJvcGVydGllcy9nZXR0ZXJzIHNpbmNlIGJyb3dzZXJzIG1pZ2h0IHN1cHBvcnQgc3VjaFxuICAgIC8vIHByb3BlcnRpZXMgZXZlbiB3aGVuIHRoZXkgZG9uJ3Qgc3VwcG9ydCB0aGUgY29ycmVzcG9uZGluZyBmbGFnIGluIHJlZ2V4IGNvbnN0cnVjdGlvbiAodGVzdGVkXG4gICAgLy8gaW4gQ2hyb21lIDQ4LCB3aGVyZSBgJ3VuaWNvZGUnIGluIC94L2AgaXMgdHJ1ZSBidXQgdHJ5aW5nIHRvIGNvbnN0cnVjdCBhIHJlZ2V4IHdpdGggZmxhZyBgdWBcbiAgICAvLyB0aHJvd3MgYW4gZXJyb3IpXG4gICAgdmFyIGlzU3VwcG9ydGVkID0gdHJ1ZTtcbiAgICB0cnkge1xuICAgICAgICAvLyBDYW4ndCB1c2UgcmVnZXggbGl0ZXJhbHMgZm9yIHRlc3RpbmcgZXZlbiBpbiBhIGB0cnlgIGJlY2F1c2UgcmVnZXggbGl0ZXJhbHMgd2l0aFxuICAgICAgICAvLyB1bnN1cHBvcnRlZCBmbGFncyBjYXVzZSBhIGNvbXBpbGF0aW9uIGVycm9yIGluIElFXG4gICAgICAgIG5ldyBSZWdFeHAoJycsIGZsYWcpO1xuICAgIH0gY2F0Y2ggKGV4Y2VwdGlvbikge1xuICAgICAgICBpc1N1cHBvcnRlZCA9IGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gaXNTdXBwb3J0ZWQ7XG59XG4vLyBDaGVjayBmb3IgRVM2IGB1YCBmbGFnIHN1cHBvcnRcbnZhciBoYXNOYXRpdmVVID0gaGFzTmF0aXZlRmxhZygndScpO1xuLy8gQ2hlY2sgZm9yIEVTNiBgeWAgZmxhZyBzdXBwb3J0XG52YXIgaGFzTmF0aXZlWSA9IGhhc05hdGl2ZUZsYWcoJ3knKTtcbi8vIFRyYWNrZXIgZm9yIGtub3duIGZsYWdzLCBpbmNsdWRpbmcgYWRkb24gZmxhZ3NcbnZhciByZWdpc3RlcmVkRmxhZ3MgPSB7XG4gICAgZzogdHJ1ZSxcbiAgICBpOiB0cnVlLFxuICAgIG06IHRydWUsXG4gICAgdTogaGFzTmF0aXZlVSxcbiAgICB5OiBoYXNOYXRpdmVZXG59O1xuXG4vKipcbiAqIEF0dGFjaGVzIGV4dGVuZGVkIGRhdGEgYW5kIGBYUmVnRXhwLnByb3RvdHlwZWAgcHJvcGVydGllcyB0byBhIHJlZ2V4IG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtSZWdFeHB9IHJlZ2V4IFJlZ2V4IHRvIGF1Z21lbnQuXG4gKiBAcGFyYW0ge0FycmF5fSBjYXB0dXJlTmFtZXMgQXJyYXkgd2l0aCBjYXB0dXJlIG5hbWVzLCBvciBgbnVsbGAuXG4gKiBAcGFyYW0ge1N0cmluZ30geFNvdXJjZSBYUmVnRXhwIHBhdHRlcm4gdXNlZCB0byBnZW5lcmF0ZSBgcmVnZXhgLCBvciBgbnVsbGAgaWYgTi9BLlxuICogQHBhcmFtIHtTdHJpbmd9IHhGbGFncyBYUmVnRXhwIGZsYWdzIHVzZWQgdG8gZ2VuZXJhdGUgYHJlZ2V4YCwgb3IgYG51bGxgIGlmIE4vQS5cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW2lzSW50ZXJuYWxPbmx5PWZhbHNlXSBXaGV0aGVyIHRoZSByZWdleCB3aWxsIGJlIHVzZWQgb25seSBmb3IgaW50ZXJuYWxcbiAqICAgb3BlcmF0aW9ucywgYW5kIG5ldmVyIGV4cG9zZWQgdG8gdXNlcnMuIEZvciBpbnRlcm5hbC1vbmx5IHJlZ2V4ZXMsIHdlIGNhbiBpbXByb3ZlIHBlcmYgYnlcbiAqICAgc2tpcHBpbmcgc29tZSBvcGVyYXRpb25zIGxpa2UgYXR0YWNoaW5nIGBYUmVnRXhwLnByb3RvdHlwZWAgcHJvcGVydGllcy5cbiAqIEByZXR1cm5zIHtSZWdFeHB9IEF1Z21lbnRlZCByZWdleC5cbiAqL1xuZnVuY3Rpb24gYXVnbWVudChyZWdleCwgY2FwdHVyZU5hbWVzLCB4U291cmNlLCB4RmxhZ3MsIGlzSW50ZXJuYWxPbmx5KSB7XG4gICAgdmFyIHAgPSB2b2lkIDA7XG5cbiAgICByZWdleFtSRUdFWF9EQVRBXSA9IHtcbiAgICAgICAgY2FwdHVyZU5hbWVzOiBjYXB0dXJlTmFtZXNcbiAgICB9O1xuXG4gICAgaWYgKGlzSW50ZXJuYWxPbmx5KSB7XG4gICAgICAgIHJldHVybiByZWdleDtcbiAgICB9XG5cbiAgICAvLyBDYW4ndCBhdXRvLWluaGVyaXQgdGhlc2Ugc2luY2UgdGhlIFhSZWdFeHAgY29uc3RydWN0b3IgcmV0dXJucyBhIG5vbnByaW1pdGl2ZSB2YWx1ZVxuICAgIGlmIChyZWdleC5fX3Byb3RvX18pIHtcbiAgICAgICAgcmVnZXguX19wcm90b19fID0gWFJlZ0V4cC5wcm90b3R5cGU7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgZm9yIChwIGluIFhSZWdFeHAucHJvdG90eXBlKSB7XG4gICAgICAgICAgICAvLyBBbiBgWFJlZ0V4cC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkocClgIGNoZWNrIHdvdWxkbid0IGJlIHdvcnRoIGl0IGhlcmUsIHNpbmNlIHRoaXNcbiAgICAgICAgICAgIC8vIGlzIHBlcmZvcm1hbmNlIHNlbnNpdGl2ZSwgYW5kIGVudW1lcmFibGUgYE9iamVjdC5wcm90b3R5cGVgIG9yIGBSZWdFeHAucHJvdG90eXBlYFxuICAgICAgICAgICAgLy8gZXh0ZW5zaW9ucyBleGlzdCBvbiBgcmVnZXgucHJvdG90eXBlYCBhbnl3YXlcbiAgICAgICAgICAgIHJlZ2V4W3BdID0gWFJlZ0V4cC5wcm90b3R5cGVbcF07XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZWdleFtSRUdFWF9EQVRBXS5zb3VyY2UgPSB4U291cmNlO1xuICAgIC8vIEVtdWxhdGUgdGhlIEVTNiBgZmxhZ3NgIHByb3AgYnkgZW5zdXJpbmcgZmxhZ3MgYXJlIGluIGFscGhhYmV0aWNhbCBvcmRlclxuICAgIHJlZ2V4W1JFR0VYX0RBVEFdLmZsYWdzID0geEZsYWdzID8geEZsYWdzLnNwbGl0KCcnKS5zb3J0KCkuam9pbignJykgOiB4RmxhZ3M7XG5cbiAgICByZXR1cm4gcmVnZXg7XG59XG5cbi8qKlxuICogUmVtb3ZlcyBhbnkgZHVwbGljYXRlIGNoYXJhY3RlcnMgZnJvbSB0aGUgcHJvdmlkZWQgc3RyaW5nLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyIFN0cmluZyB0byByZW1vdmUgZHVwbGljYXRlIGNoYXJhY3RlcnMgZnJvbS5cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFN0cmluZyB3aXRoIGFueSBkdXBsaWNhdGUgY2hhcmFjdGVycyByZW1vdmVkLlxuICovXG5mdW5jdGlvbiBjbGlwRHVwbGljYXRlcyhzdHIpIHtcbiAgICByZXR1cm4gbmF0aXYucmVwbGFjZS5jYWxsKHN0ciwgLyhbXFxzXFxTXSkoPz1bXFxzXFxTXSpcXDEpL2csICcnKTtcbn1cblxuLyoqXG4gKiBDb3BpZXMgYSByZWdleCBvYmplY3Qgd2hpbGUgcHJlc2VydmluZyBleHRlbmRlZCBkYXRhIGFuZCBhdWdtZW50aW5nIHdpdGggYFhSZWdFeHAucHJvdG90eXBlYFxuICogcHJvcGVydGllcy4gVGhlIGNvcHkgaGFzIGEgZnJlc2ggYGxhc3RJbmRleGAgcHJvcGVydHkgKHNldCB0byB6ZXJvKS4gQWxsb3dzIGFkZGluZyBhbmQgcmVtb3ZpbmdcbiAqIGZsYWdzIGcgYW5kIHkgd2hpbGUgY29weWluZyB0aGUgcmVnZXguXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7UmVnRXhwfSByZWdleCBSZWdleCB0byBjb3B5LlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSBPcHRpb25zIG9iamVjdCB3aXRoIG9wdGlvbmFsIHByb3BlcnRpZXM6XG4gKiAgIC0gYGFkZEdgIHtCb29sZWFufSBBZGQgZmxhZyBnIHdoaWxlIGNvcHlpbmcgdGhlIHJlZ2V4LlxuICogICAtIGBhZGRZYCB7Qm9vbGVhbn0gQWRkIGZsYWcgeSB3aGlsZSBjb3B5aW5nIHRoZSByZWdleC5cbiAqICAgLSBgcmVtb3ZlR2Age0Jvb2xlYW59IFJlbW92ZSBmbGFnIGcgd2hpbGUgY29weWluZyB0aGUgcmVnZXguXG4gKiAgIC0gYHJlbW92ZVlgIHtCb29sZWFufSBSZW1vdmUgZmxhZyB5IHdoaWxlIGNvcHlpbmcgdGhlIHJlZ2V4LlxuICogICAtIGBpc0ludGVybmFsT25seWAge0Jvb2xlYW59IFdoZXRoZXIgdGhlIGNvcGllZCByZWdleCB3aWxsIGJlIHVzZWQgb25seSBmb3IgaW50ZXJuYWxcbiAqICAgICBvcGVyYXRpb25zLCBhbmQgbmV2ZXIgZXhwb3NlZCB0byB1c2Vycy4gRm9yIGludGVybmFsLW9ubHkgcmVnZXhlcywgd2UgY2FuIGltcHJvdmUgcGVyZiBieVxuICogICAgIHNraXBwaW5nIHNvbWUgb3BlcmF0aW9ucyBsaWtlIGF0dGFjaGluZyBgWFJlZ0V4cC5wcm90b3R5cGVgIHByb3BlcnRpZXMuXG4gKiAgIC0gYHNvdXJjZWAge1N0cmluZ30gT3ZlcnJpZGVzIGA8cmVnZXg+LnNvdXJjZWAsIGZvciBzcGVjaWFsIGNhc2VzLlxuICogQHJldHVybnMge1JlZ0V4cH0gQ29weSBvZiB0aGUgcHJvdmlkZWQgcmVnZXgsIHBvc3NpYmx5IHdpdGggbW9kaWZpZWQgZmxhZ3MuXG4gKi9cbmZ1bmN0aW9uIGNvcHlSZWdleChyZWdleCwgb3B0aW9ucykge1xuICAgIGlmICghWFJlZ0V4cC5pc1JlZ0V4cChyZWdleCkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcignVHlwZSBSZWdFeHAgZXhwZWN0ZWQnKTtcbiAgICB9XG5cbiAgICB2YXIgeERhdGEgPSByZWdleFtSRUdFWF9EQVRBXSB8fCB7fTtcbiAgICB2YXIgZmxhZ3MgPSBnZXROYXRpdmVGbGFncyhyZWdleCk7XG4gICAgdmFyIGZsYWdzVG9BZGQgPSAnJztcbiAgICB2YXIgZmxhZ3NUb1JlbW92ZSA9ICcnO1xuICAgIHZhciB4cmVnZXhwU291cmNlID0gbnVsbDtcbiAgICB2YXIgeHJlZ2V4cEZsYWdzID0gbnVsbDtcblxuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG4gICAgaWYgKG9wdGlvbnMucmVtb3ZlRykge1xuICAgICAgICBmbGFnc1RvUmVtb3ZlICs9ICdnJztcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMucmVtb3ZlWSkge1xuICAgICAgICBmbGFnc1RvUmVtb3ZlICs9ICd5JztcbiAgICB9XG4gICAgaWYgKGZsYWdzVG9SZW1vdmUpIHtcbiAgICAgICAgZmxhZ3MgPSBuYXRpdi5yZXBsYWNlLmNhbGwoZmxhZ3MsIG5ldyBSZWdFeHAoJ1snICsgZmxhZ3NUb1JlbW92ZSArICddKycsICdnJyksICcnKTtcbiAgICB9XG5cbiAgICBpZiAob3B0aW9ucy5hZGRHKSB7XG4gICAgICAgIGZsYWdzVG9BZGQgKz0gJ2cnO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5hZGRZKSB7XG4gICAgICAgIGZsYWdzVG9BZGQgKz0gJ3knO1xuICAgIH1cbiAgICBpZiAoZmxhZ3NUb0FkZCkge1xuICAgICAgICBmbGFncyA9IGNsaXBEdXBsaWNhdGVzKGZsYWdzICsgZmxhZ3NUb0FkZCk7XG4gICAgfVxuXG4gICAgaWYgKCFvcHRpb25zLmlzSW50ZXJuYWxPbmx5KSB7XG4gICAgICAgIGlmICh4RGF0YS5zb3VyY2UgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgeHJlZ2V4cFNvdXJjZSA9IHhEYXRhLnNvdXJjZTtcbiAgICAgICAgfVxuICAgICAgICAvLyBudWxsIG9yIHVuZGVmaW5lZDsgZG9uJ3Qgd2FudCB0byBhZGQgdG8gYGZsYWdzYCBpZiB0aGUgcHJldmlvdXMgdmFsdWUgd2FzIG51bGwsIHNpbmNlXG4gICAgICAgIC8vIHRoYXQgaW5kaWNhdGVzIHdlJ3JlIG5vdCB0cmFja2luZyBvcmlnaW5hbCBwcmVjb21waWxhdGlvbiBmbGFnc1xuICAgICAgICBpZiAoeERhdGEuZmxhZ3MgIT0gbnVsbCkge1xuICAgICAgICAgICAgLy8gRmxhZ3MgYXJlIG9ubHkgYWRkZWQgZm9yIG5vbi1pbnRlcm5hbCByZWdleGVzIGJ5IGBYUmVnRXhwLmdsb2JhbGl6ZWAuIEZsYWdzIGFyZSBuZXZlclxuICAgICAgICAgICAgLy8gcmVtb3ZlZCBmb3Igbm9uLWludGVybmFsIHJlZ2V4ZXMsIHNvIGRvbid0IG5lZWQgdG8gaGFuZGxlIGl0XG4gICAgICAgICAgICB4cmVnZXhwRmxhZ3MgPSBmbGFnc1RvQWRkID8gY2xpcER1cGxpY2F0ZXMoeERhdGEuZmxhZ3MgKyBmbGFnc1RvQWRkKSA6IHhEYXRhLmZsYWdzO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgLy8gQXVnbWVudCB3aXRoIGBYUmVnRXhwLnByb3RvdHlwZWAgcHJvcGVydGllcywgYnV0IHVzZSB0aGUgbmF0aXZlIGBSZWdFeHBgIGNvbnN0cnVjdG9yIHRvIGF2b2lkXG4gICAgLy8gc2VhcmNoaW5nIGZvciBzcGVjaWFsIHRva2Vucy4gVGhhdCB3b3VsZCBiZSB3cm9uZyBmb3IgcmVnZXhlcyBjb25zdHJ1Y3RlZCBieSBgUmVnRXhwYCwgYW5kXG4gICAgLy8gdW5uZWNlc3NhcnkgZm9yIHJlZ2V4ZXMgY29uc3RydWN0ZWQgYnkgYFhSZWdFeHBgIGJlY2F1c2UgdGhlIHJlZ2V4IGhhcyBhbHJlYWR5IHVuZGVyZ29uZSB0aGVcbiAgICAvLyB0cmFuc2xhdGlvbiB0byBuYXRpdmUgcmVnZXggc3ludGF4XG4gICAgcmVnZXggPSBhdWdtZW50KG5ldyBSZWdFeHAob3B0aW9ucy5zb3VyY2UgfHwgcmVnZXguc291cmNlLCBmbGFncyksIGhhc05hbWVkQ2FwdHVyZShyZWdleCkgPyB4RGF0YS5jYXB0dXJlTmFtZXMuc2xpY2UoMCkgOiBudWxsLCB4cmVnZXhwU291cmNlLCB4cmVnZXhwRmxhZ3MsIG9wdGlvbnMuaXNJbnRlcm5hbE9ubHkpO1xuXG4gICAgcmV0dXJuIHJlZ2V4O1xufVxuXG4vKipcbiAqIENvbnZlcnRzIGhleGFkZWNpbWFsIHRvIGRlY2ltYWwuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBoZXhcbiAqIEByZXR1cm5zIHtOdW1iZXJ9XG4gKi9cbmZ1bmN0aW9uIGRlYyhoZXgpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQoaGV4LCAxNik7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIHBhdHRlcm4gdGhhdCBjYW4gYmUgdXNlZCBpbiBhIG5hdGl2ZSBSZWdFeHAgaW4gcGxhY2Ugb2YgYW4gaWdub3JhYmxlIHRva2VuIHN1Y2ggYXMgYW5cbiAqIGlubGluZSBjb21tZW50IG9yIHdoaXRlc3BhY2Ugd2l0aCBmbGFnIHguIFRoaXMgaXMgdXNlZCBkaXJlY3RseSBhcyBhIHRva2VuIGhhbmRsZXIgZnVuY3Rpb25cbiAqIHBhc3NlZCB0byBgWFJlZ0V4cC5hZGRUb2tlbmAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBtYXRjaCBNYXRjaCBhcmcgb2YgYFhSZWdFeHAuYWRkVG9rZW5gIGhhbmRsZXJcbiAqIEBwYXJhbSB7U3RyaW5nfSBzY29wZSBTY29wZSBhcmcgb2YgYFhSZWdFeHAuYWRkVG9rZW5gIGhhbmRsZXJcbiAqIEBwYXJhbSB7U3RyaW5nfSBmbGFncyBGbGFncyBhcmcgb2YgYFhSZWdFeHAuYWRkVG9rZW5gIGhhbmRsZXJcbiAqIEByZXR1cm5zIHtTdHJpbmd9IEVpdGhlciAnJyBvciAnKD86KScsIGRlcGVuZGluZyBvbiB3aGljaCBpcyBuZWVkZWQgaW4gdGhlIGNvbnRleHQgb2YgdGhlIG1hdGNoLlxuICovXG5mdW5jdGlvbiBnZXRDb250ZXh0dWFsVG9rZW5TZXBhcmF0b3IobWF0Y2gsIHNjb3BlLCBmbGFncykge1xuICAgIGlmIChcbiAgICAvLyBObyBuZWVkIHRvIHNlcGFyYXRlIHRva2VucyBpZiBhdCB0aGUgYmVnaW5uaW5nIG9yIGVuZCBvZiBhIGdyb3VwXG4gICAgbWF0Y2guaW5wdXRbbWF0Y2guaW5kZXggLSAxXSA9PT0gJygnIHx8IG1hdGNoLmlucHV0W21hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoXSA9PT0gJyknIHx8XG4gICAgLy8gQXZvaWQgc2VwYXJhdGluZyB0b2tlbnMgd2hlbiB0aGUgZm9sbG93aW5nIHRva2VuIGlzIGEgcXVhbnRpZmllclxuICAgIGlzUXVhbnRpZmllck5leHQobWF0Y2guaW5wdXQsIG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoLCBmbGFncykpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICAvLyBLZWVwIHRva2VucyBzZXBhcmF0ZWQuIFRoaXMgYXZvaWRzIGUuZy4gaW5hZHZlcnRlZGx5IGNoYW5naW5nIGBcXDEgMWAgb3IgYFxcMSg/IykxYCB0byBgXFwxMWAuXG4gICAgLy8gVGhpcyBhbHNvIGVuc3VyZXMgYWxsIHRva2VucyByZW1haW4gYXMgZGlzY3JldGUgYXRvbXMsIGUuZy4gaXQgYXZvaWRzIGNvbnZlcnRpbmcgdGhlIHN5bnRheFxuICAgIC8vIGVycm9yIGAoPyA6YCBpbnRvIGAoPzpgLlxuICAgIHJldHVybiAnKD86KSc7XG59XG5cbi8qKlxuICogUmV0dXJucyBuYXRpdmUgYFJlZ0V4cGAgZmxhZ3MgdXNlZCBieSBhIHJlZ2V4IG9iamVjdC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtSZWdFeHB9IHJlZ2V4IFJlZ2V4IHRvIGNoZWNrLlxuICogQHJldHVybnMge1N0cmluZ30gTmF0aXZlIGZsYWdzIGluIHVzZS5cbiAqL1xuZnVuY3Rpb24gZ2V0TmF0aXZlRmxhZ3MocmVnZXgpIHtcbiAgICByZXR1cm4gaGFzRmxhZ3NQcm9wID8gcmVnZXguZmxhZ3MgOlxuICAgIC8vIEV4cGxpY2l0bHkgdXNpbmcgYFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmdgIChyYXRoZXIgdGhhbiBlLmcuIGBTdHJpbmdgIG9yIGNvbmNhdGVuYXRpb25cbiAgICAvLyB3aXRoIGFuIGVtcHR5IHN0cmluZykgYWxsb3dzIHRoaXMgdG8gY29udGludWUgd29ya2luZyBwcmVkaWN0YWJseSB3aGVuXG4gICAgLy8gYFhSZWdFeHAucHJvcHRvdHlwZS50b1N0cmluZ2AgaXMgb3ZlcnJpZGRlblxuICAgIG5hdGl2LmV4ZWMuY2FsbCgvXFwvKFthLXpdKikkL2ksIFJlZ0V4cC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChyZWdleCkpWzFdO1xufVxuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBhIHJlZ2V4IGhhcyBleHRlbmRlZCBpbnN0YW5jZSBkYXRhIHVzZWQgdG8gdHJhY2sgY2FwdHVyZSBuYW1lcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtSZWdFeHB9IHJlZ2V4IFJlZ2V4IHRvIGNoZWNrLlxuICogQHJldHVybnMge0Jvb2xlYW59IFdoZXRoZXIgdGhlIHJlZ2V4IHVzZXMgbmFtZWQgY2FwdHVyZS5cbiAqL1xuZnVuY3Rpb24gaGFzTmFtZWRDYXB0dXJlKHJlZ2V4KSB7XG4gICAgcmV0dXJuICEhKHJlZ2V4W1JFR0VYX0RBVEFdICYmIHJlZ2V4W1JFR0VYX0RBVEFdLmNhcHR1cmVOYW1lcyk7XG59XG5cbi8qKlxuICogQ29udmVydHMgZGVjaW1hbCB0byBoZXhhZGVjaW1hbC5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtOdW1iZXJ8U3RyaW5nfSBkZWNcbiAqIEByZXR1cm5zIHtTdHJpbmd9XG4gKi9cbmZ1bmN0aW9uIGhleChkZWMpIHtcbiAgICByZXR1cm4gcGFyc2VJbnQoZGVjLCAxMCkudG9TdHJpbmcoMTYpO1xufVxuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIHRoZSBuZXh0IG5vbmlnbm9yYWJsZSB0b2tlbiBhZnRlciB0aGUgc3BlY2lmaWVkIHBvc2l0aW9uIGlzIGEgcXVhbnRpZmllci5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtTdHJpbmd9IHBhdHRlcm4gUGF0dGVybiB0byBzZWFyY2ggd2l0aGluLlxuICogQHBhcmFtIHtOdW1iZXJ9IHBvcyBJbmRleCBpbiBgcGF0dGVybmAgdG8gc2VhcmNoIGF0LlxuICogQHBhcmFtIHtTdHJpbmd9IGZsYWdzIEZsYWdzIHVzZWQgYnkgdGhlIHBhdHRlcm4uXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gV2hldGhlciB0aGUgbmV4dCBub25pZ25vcmFibGUgdG9rZW4gaXMgYSBxdWFudGlmaWVyLlxuICovXG5mdW5jdGlvbiBpc1F1YW50aWZpZXJOZXh0KHBhdHRlcm4sIHBvcywgZmxhZ3MpIHtcbiAgICB2YXIgaW5saW5lQ29tbWVudFBhdHRlcm4gPSAnXFxcXChcXFxcPyNbXildKlxcXFwpJztcbiAgICB2YXIgbGluZUNvbW1lbnRQYXR0ZXJuID0gJyNbXiNcXFxcbl0qJztcbiAgICB2YXIgcXVhbnRpZmllclBhdHRlcm4gPSAnWz8qK118e1xcXFxkKyg/OixcXFxcZCopP30nO1xuICAgIHJldHVybiBuYXRpdi50ZXN0LmNhbGwoZmxhZ3MuaW5kZXhPZigneCcpICE9PSAtMSA/XG4gICAgLy8gSWdub3JlIGFueSBsZWFkaW5nIHdoaXRlc3BhY2UsIGxpbmUgY29tbWVudHMsIGFuZCBpbmxpbmUgY29tbWVudHNcbiAgICAvXig/Olxcc3wjW14jXFxuXSp8XFwoXFw/I1teKV0qXFwpKSooPzpbPyorXXx7XFxkKyg/OixcXGQqKT99KS8gOlxuICAgIC8vIElnbm9yZSBhbnkgbGVhZGluZyBpbmxpbmUgY29tbWVudHNcbiAgICAvXig/OlxcKFxcPyNbXildKlxcKSkqKD86Wz8qK118e1xcZCsoPzosXFxkKik/fSkvLCBwYXR0ZXJuLnNsaWNlKHBvcykpO1xufVxuXG4vKipcbiAqIERldGVybWluZXMgd2hldGhlciBhIHZhbHVlIGlzIG9mIHRoZSBzcGVjaWZpZWQgdHlwZSwgYnkgcmVzb2x2aW5nIGl0cyBpbnRlcm5hbCBbW0NsYXNzXV0uXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgT2JqZWN0IHRvIGNoZWNrLlxuICogQHBhcmFtIHtTdHJpbmd9IHR5cGUgVHlwZSB0byBjaGVjayBmb3IsIGluIFRpdGxlQ2FzZS5cbiAqIEByZXR1cm5zIHtCb29sZWFufSBXaGV0aGVyIHRoZSBvYmplY3QgbWF0Y2hlcyB0aGUgdHlwZS5cbiAqL1xuZnVuY3Rpb24gaXNUeXBlKHZhbHVlLCB0eXBlKSB7XG4gICAgcmV0dXJuIHRvU3RyaW5nLmNhbGwodmFsdWUpID09PSAnW29iamVjdCAnICsgdHlwZSArICddJztcbn1cblxuLyoqXG4gKiBBZGRzIGxlYWRpbmcgemVyb3MgaWYgc2hvcnRlciB0aGFuIGZvdXIgY2hhcmFjdGVycy4gVXNlZCBmb3IgZml4ZWQtbGVuZ3RoIGhleGFkZWNpbWFsIHZhbHVlcy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtTdHJpbmd9IHN0clxuICogQHJldHVybnMge1N0cmluZ31cbiAqL1xuZnVuY3Rpb24gcGFkNChzdHIpIHtcbiAgICB3aGlsZSAoc3RyLmxlbmd0aCA8IDQpIHtcbiAgICAgICAgc3RyID0gJzAnICsgc3RyO1xuICAgIH1cbiAgICByZXR1cm4gc3RyO1xufVxuXG4vKipcbiAqIENoZWNrcyBmb3IgZmxhZy1yZWxhdGVkIGVycm9ycywgYW5kIHN0cmlwcy9hcHBsaWVzIGZsYWdzIGluIGEgbGVhZGluZyBtb2RlIG1vZGlmaWVyLiBPZmZsb2Fkc1xuICogdGhlIGZsYWcgcHJlcGFyYXRpb24gbG9naWMgZnJvbSB0aGUgYFhSZWdFeHBgIGNvbnN0cnVjdG9yLlxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0dGVybiBSZWdleCBwYXR0ZXJuLCBwb3NzaWJseSB3aXRoIGEgbGVhZGluZyBtb2RlIG1vZGlmaWVyLlxuICogQHBhcmFtIHtTdHJpbmd9IGZsYWdzIEFueSBjb21iaW5hdGlvbiBvZiBmbGFncy5cbiAqIEByZXR1cm5zIHtPYmplY3R9IE9iamVjdCB3aXRoIHByb3BlcnRpZXMgYHBhdHRlcm5gIGFuZCBgZmxhZ3NgLlxuICovXG5mdW5jdGlvbiBwcmVwYXJlRmxhZ3MocGF0dGVybiwgZmxhZ3MpIHtcbiAgICB2YXIgaSA9IHZvaWQgMDtcblxuICAgIC8vIFJlY2VudCBicm93c2VycyB0aHJvdyBvbiBkdXBsaWNhdGUgZmxhZ3MsIHNvIGNvcHkgdGhpcyBiZWhhdmlvciBmb3Igbm9ubmF0aXZlIGZsYWdzXG4gICAgaWYgKGNsaXBEdXBsaWNhdGVzKGZsYWdzKSAhPT0gZmxhZ3MpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdJbnZhbGlkIGR1cGxpY2F0ZSByZWdleCBmbGFnICcgKyBmbGFncyk7XG4gICAgfVxuXG4gICAgLy8gU3RyaXAgYW5kIGFwcGx5IGEgbGVhZGluZyBtb2RlIG1vZGlmaWVyIHdpdGggYW55IGNvbWJpbmF0aW9uIG9mIGZsYWdzIGV4Y2VwdCBnIG9yIHlcbiAgICBwYXR0ZXJuID0gbmF0aXYucmVwbGFjZS5jYWxsKHBhdHRlcm4sIC9eXFwoXFw/KFtcXHckXSspXFwpLywgZnVuY3Rpb24gKCQwLCAkMSkge1xuICAgICAgICBpZiAobmF0aXYudGVzdC5jYWxsKC9bZ3ldLywgJDEpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ0Nhbm5vdCB1c2UgZmxhZyBnIG9yIHkgaW4gbW9kZSBtb2RpZmllciAnICsgJDApO1xuICAgICAgICB9XG4gICAgICAgIC8vIEFsbG93IGR1cGxpY2F0ZSBmbGFncyB3aXRoaW4gdGhlIG1vZGUgbW9kaWZpZXJcbiAgICAgICAgZmxhZ3MgPSBjbGlwRHVwbGljYXRlcyhmbGFncyArICQxKTtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH0pO1xuXG4gICAgLy8gVGhyb3cgb24gdW5rbm93biBuYXRpdmUgb3Igbm9ubmF0aXZlIGZsYWdzXG4gICAgZm9yIChpID0gMDsgaSA8IGZsYWdzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgIGlmICghcmVnaXN0ZXJlZEZsYWdzW2ZsYWdzW2ldXSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdVbmtub3duIHJlZ2V4IGZsYWcgJyArIGZsYWdzW2ldKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiB7XG4gICAgICAgIHBhdHRlcm46IHBhdHRlcm4sXG4gICAgICAgIGZsYWdzOiBmbGFnc1xuICAgIH07XG59XG5cbi8qKlxuICogUHJlcGFyZXMgYW4gb3B0aW9ucyBvYmplY3QgZnJvbSB0aGUgZ2l2ZW4gdmFsdWUuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfE9iamVjdH0gdmFsdWUgVmFsdWUgdG8gY29udmVydCB0byBhbiBvcHRpb25zIG9iamVjdC5cbiAqIEByZXR1cm5zIHtPYmplY3R9IE9wdGlvbnMgb2JqZWN0LlxuICovXG5mdW5jdGlvbiBwcmVwYXJlT3B0aW9ucyh2YWx1ZSkge1xuICAgIHZhciBvcHRpb25zID0ge307XG5cbiAgICBpZiAoaXNUeXBlKHZhbHVlLCAnU3RyaW5nJykpIHtcbiAgICAgICAgWFJlZ0V4cC5mb3JFYWNoKHZhbHVlLCAvW15cXHMsXSsvLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgICAgICAgIG9wdGlvbnNbbWF0Y2hdID0gdHJ1ZTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIG9wdGlvbnM7XG4gICAgfVxuXG4gICAgcmV0dXJuIHZhbHVlO1xufVxuXG4vKipcbiAqIFJlZ2lzdGVycyBhIGZsYWcgc28gaXQgZG9lc24ndCB0aHJvdyBhbiAndW5rbm93biBmbGFnJyBlcnJvci5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtTdHJpbmd9IGZsYWcgU2luZ2xlLWNoYXJhY3RlciBmbGFnIHRvIHJlZ2lzdGVyLlxuICovXG5mdW5jdGlvbiByZWdpc3RlckZsYWcoZmxhZykge1xuICAgIGlmICghL15bXFx3JF0kLy50ZXN0KGZsYWcpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRmxhZyBtdXN0IGJlIGEgc2luZ2xlIGNoYXJhY3RlciBBLVphLXowLTlfJCcpO1xuICAgIH1cblxuICAgIHJlZ2lzdGVyZWRGbGFnc1tmbGFnXSA9IHRydWU7XG59XG5cbi8qKlxuICogUnVucyBidWlsdC1pbiBhbmQgY3VzdG9tIHJlZ2V4IHN5bnRheCB0b2tlbnMgaW4gcmV2ZXJzZSBpbnNlcnRpb24gb3JkZXIgYXQgdGhlIHNwZWNpZmllZFxuICogcG9zaXRpb24sIHVudGlsIGEgbWF0Y2ggaXMgZm91bmQuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7U3RyaW5nfSBwYXR0ZXJuIE9yaWdpbmFsIHBhdHRlcm4gZnJvbSB3aGljaCBhbiBYUmVnRXhwIG9iamVjdCBpcyBiZWluZyBidWlsdC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBmbGFncyBGbGFncyBiZWluZyB1c2VkIHRvIGNvbnN0cnVjdCB0aGUgcmVnZXguXG4gKiBAcGFyYW0ge051bWJlcn0gcG9zIFBvc2l0aW9uIHRvIHNlYXJjaCBmb3IgdG9rZW5zIHdpdGhpbiBgcGF0dGVybmAuXG4gKiBAcGFyYW0ge051bWJlcn0gc2NvcGUgUmVnZXggc2NvcGUgdG8gYXBwbHk6ICdkZWZhdWx0JyBvciAnY2xhc3MnLlxuICogQHBhcmFtIHtPYmplY3R9IGNvbnRleHQgQ29udGV4dCBvYmplY3QgdG8gdXNlIGZvciB0b2tlbiBoYW5kbGVyIGZ1bmN0aW9ucy5cbiAqIEByZXR1cm5zIHtPYmplY3R9IE9iamVjdCB3aXRoIHByb3BlcnRpZXMgYG1hdGNoTGVuZ3RoYCwgYG91dHB1dGAsIGFuZCBgcmVwYXJzZWA7IG9yIGBudWxsYC5cbiAqL1xuZnVuY3Rpb24gcnVuVG9rZW5zKHBhdHRlcm4sIGZsYWdzLCBwb3MsIHNjb3BlLCBjb250ZXh0KSB7XG4gICAgdmFyIGkgPSB0b2tlbnMubGVuZ3RoO1xuICAgIHZhciBsZWFkQ2hhciA9IHBhdHRlcm5bcG9zXTtcbiAgICB2YXIgcmVzdWx0ID0gbnVsbDtcbiAgICB2YXIgbWF0Y2ggPSB2b2lkIDA7XG4gICAgdmFyIHQgPSB2b2lkIDA7XG5cbiAgICAvLyBSdW4gaW4gcmV2ZXJzZSBpbnNlcnRpb24gb3JkZXJcbiAgICB3aGlsZSAoaS0tKSB7XG4gICAgICAgIHQgPSB0b2tlbnNbaV07XG4gICAgICAgIGlmICh0LmxlYWRDaGFyICYmIHQubGVhZENoYXIgIT09IGxlYWRDaGFyIHx8IHQuc2NvcGUgIT09IHNjb3BlICYmIHQuc2NvcGUgIT09ICdhbGwnIHx8IHQuZmxhZyAmJiAhKGZsYWdzLmluZGV4T2YodC5mbGFnKSAhPT0gLTEpKSB7XG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgfVxuXG4gICAgICAgIG1hdGNoID0gWFJlZ0V4cC5leGVjKHBhdHRlcm4sIHQucmVnZXgsIHBvcywgJ3N0aWNreScpO1xuICAgICAgICBpZiAobWF0Y2gpIHtcbiAgICAgICAgICAgIHJlc3VsdCA9IHtcbiAgICAgICAgICAgICAgICBtYXRjaExlbmd0aDogbWF0Y2hbMF0ubGVuZ3RoLFxuICAgICAgICAgICAgICAgIG91dHB1dDogdC5oYW5kbGVyLmNhbGwoY29udGV4dCwgbWF0Y2gsIHNjb3BlLCBmbGFncyksXG4gICAgICAgICAgICAgICAgcmVwYXJzZTogdC5yZXBhcnNlXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgLy8gRmluaXNoZWQgd2l0aCB0b2tlbiB0ZXN0c1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuXG4vKipcbiAqIEVuYWJsZXMgb3IgZGlzYWJsZXMgaW1wbGljaXQgYXN0cmFsIG1vZGUgb3B0LWluLiBXaGVuIGVuYWJsZWQsIGZsYWcgQSBpcyBhdXRvbWF0aWNhbGx5IGFkZGVkIHRvXG4gKiBhbGwgbmV3IHJlZ2V4ZXMgY3JlYXRlZCBieSBYUmVnRXhwLiBUaGlzIGNhdXNlcyBhbiBlcnJvciB0byBiZSB0aHJvd24gd2hlbiBjcmVhdGluZyByZWdleGVzIGlmXG4gKiB0aGUgVW5pY29kZSBCYXNlIGFkZG9uIGlzIG5vdCBhdmFpbGFibGUsIHNpbmNlIGZsYWcgQSBpcyByZWdpc3RlcmVkIGJ5IHRoYXQgYWRkb24uXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Qm9vbGVhbn0gb24gYHRydWVgIHRvIGVuYWJsZTsgYGZhbHNlYCB0byBkaXNhYmxlLlxuICovXG5mdW5jdGlvbiBzZXRBc3RyYWwob24pIHtcbiAgICBmZWF0dXJlcy5hc3RyYWwgPSBvbjtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHRoZSBvYmplY3QsIG9yIHRocm93cyBhbiBlcnJvciBpZiBpdCBpcyBgbnVsbGAgb3IgYHVuZGVmaW5lZGAuIFRoaXMgaXMgdXNlZCB0byBmb2xsb3dcbiAqIHRoZSBFUzUgYWJzdHJhY3Qgb3BlcmF0aW9uIGBUb09iamVjdGAuXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Kn0gdmFsdWUgT2JqZWN0IHRvIGNoZWNrIGFuZCByZXR1cm4uXG4gKiBAcmV0dXJucyB7Kn0gVGhlIHByb3ZpZGVkIG9iamVjdC5cbiAqL1xuZnVuY3Rpb24gdG9PYmplY3QodmFsdWUpIHtcbiAgICAvLyBudWxsIG9yIHVuZGVmaW5lZFxuICAgIGlmICh2YWx1ZSA9PSBudWxsKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBjb252ZXJ0IG51bGwgb3IgdW5kZWZpbmVkIHRvIG9iamVjdCcpO1xuICAgIH1cblxuICAgIHJldHVybiB2YWx1ZTtcbn1cblxuLy8gPT0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLT09XG4vLyBDb25zdHJ1Y3RvclxuLy8gPT0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLT09XG5cbi8qKlxuICogQ3JlYXRlcyBhbiBleHRlbmRlZCByZWd1bGFyIGV4cHJlc3Npb24gb2JqZWN0IGZvciBtYXRjaGluZyB0ZXh0IHdpdGggYSBwYXR0ZXJuLiBEaWZmZXJzIGZyb20gYVxuICogbmF0aXZlIHJlZ3VsYXIgZXhwcmVzc2lvbiBpbiB0aGF0IGFkZGl0aW9uYWwgc3ludGF4IGFuZCBmbGFncyBhcmUgc3VwcG9ydGVkLiBUaGUgcmV0dXJuZWQgb2JqZWN0XG4gKiBpcyBpbiBmYWN0IGEgbmF0aXZlIGBSZWdFeHBgIGFuZCB3b3JrcyB3aXRoIGFsbCBuYXRpdmUgbWV0aG9kcy5cbiAqXG4gKiBAY2xhc3MgWFJlZ0V4cFxuICogQGNvbnN0cnVjdG9yXG4gKiBAcGFyYW0ge1N0cmluZ3xSZWdFeHB9IHBhdHRlcm4gUmVnZXggcGF0dGVybiBzdHJpbmcsIG9yIGFuIGV4aXN0aW5nIHJlZ2V4IG9iamVjdCB0byBjb3B5LlxuICogQHBhcmFtIHtTdHJpbmd9IFtmbGFnc10gQW55IGNvbWJpbmF0aW9uIG9mIGZsYWdzLlxuICogICBOYXRpdmUgZmxhZ3M6XG4gKiAgICAgLSBgZ2AgLSBnbG9iYWxcbiAqICAgICAtIGBpYCAtIGlnbm9yZSBjYXNlXG4gKiAgICAgLSBgbWAgLSBtdWx0aWxpbmUgYW5jaG9yc1xuICogICAgIC0gYHVgIC0gdW5pY29kZSAoRVM2KVxuICogICAgIC0gYHlgIC0gc3RpY2t5IChGaXJlZm94IDMrLCBFUzYpXG4gKiAgIEFkZGl0aW9uYWwgWFJlZ0V4cCBmbGFnczpcbiAqICAgICAtIGBuYCAtIGV4cGxpY2l0IGNhcHR1cmVcbiAqICAgICAtIGBzYCAtIGRvdCBtYXRjaGVzIGFsbCAoYWthIHNpbmdsZWxpbmUpXG4gKiAgICAgLSBgeGAgLSBmcmVlLXNwYWNpbmcgYW5kIGxpbmUgY29tbWVudHMgKGFrYSBleHRlbmRlZClcbiAqICAgICAtIGBBYCAtIGFzdHJhbCAocmVxdWlyZXMgdGhlIFVuaWNvZGUgQmFzZSBhZGRvbilcbiAqICAgRmxhZ3MgY2Fubm90IGJlIHByb3ZpZGVkIHdoZW4gY29uc3RydWN0aW5nIG9uZSBgUmVnRXhwYCBmcm9tIGFub3RoZXIuXG4gKiBAcmV0dXJucyB7UmVnRXhwfSBFeHRlbmRlZCByZWd1bGFyIGV4cHJlc3Npb24gb2JqZWN0LlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBXaXRoIG5hbWVkIGNhcHR1cmUgYW5kIGZsYWcgeFxuICogWFJlZ0V4cChgKD88eWVhcj4gIFswLTldezR9ICkgLT8gICMgeWVhclxuICogICAgICAgICAgKD88bW9udGg+IFswLTldezJ9ICkgLT8gICMgbW9udGhcbiAqICAgICAgICAgICg/PGRheT4gICBbMC05XXsyfSApICAgICAjIGRheWAsICd4Jyk7XG4gKlxuICogLy8gUHJvdmlkaW5nIGEgcmVnZXggb2JqZWN0IGNvcGllcyBpdC4gTmF0aXZlIHJlZ2V4ZXMgYXJlIHJlY29tcGlsZWQgdXNpbmcgbmF0aXZlIChub3QgWFJlZ0V4cClcbiAqIC8vIHN5bnRheC4gQ29waWVzIG1haW50YWluIGV4dGVuZGVkIGRhdGEsIGFyZSBhdWdtZW50ZWQgd2l0aCBgWFJlZ0V4cC5wcm90b3R5cGVgIHByb3BlcnRpZXMsIGFuZFxuICogLy8gaGF2ZSBmcmVzaCBgbGFzdEluZGV4YCBwcm9wZXJ0aWVzIChzZXQgdG8gemVybykuXG4gKiBYUmVnRXhwKC9yZWdleC8pO1xuICovXG5mdW5jdGlvbiBYUmVnRXhwKHBhdHRlcm4sIGZsYWdzKSB7XG4gICAgaWYgKFhSZWdFeHAuaXNSZWdFeHAocGF0dGVybikpIHtcbiAgICAgICAgaWYgKGZsYWdzICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ0Nhbm5vdCBzdXBwbHkgZmxhZ3Mgd2hlbiBjb3B5aW5nIGEgUmVnRXhwJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGNvcHlSZWdleChwYXR0ZXJuKTtcbiAgICB9XG5cbiAgICAvLyBDb3B5IHRoZSBhcmd1bWVudCBiZWhhdmlvciBvZiBgUmVnRXhwYFxuICAgIHBhdHRlcm4gPSBwYXR0ZXJuID09PSB1bmRlZmluZWQgPyAnJyA6IFN0cmluZyhwYXR0ZXJuKTtcbiAgICBmbGFncyA9IGZsYWdzID09PSB1bmRlZmluZWQgPyAnJyA6IFN0cmluZyhmbGFncyk7XG5cbiAgICBpZiAoWFJlZ0V4cC5pc0luc3RhbGxlZCgnYXN0cmFsJykgJiYgIShmbGFncy5pbmRleE9mKCdBJykgIT09IC0xKSkge1xuICAgICAgICAvLyBUaGlzIGNhdXNlcyBhbiBlcnJvciB0byBiZSB0aHJvd24gaWYgdGhlIFVuaWNvZGUgQmFzZSBhZGRvbiBpcyBub3QgYXZhaWxhYmxlXG4gICAgICAgIGZsYWdzICs9ICdBJztcbiAgICB9XG5cbiAgICBpZiAoIXBhdHRlcm5DYWNoZVtwYXR0ZXJuXSkge1xuICAgICAgICBwYXR0ZXJuQ2FjaGVbcGF0dGVybl0gPSB7fTtcbiAgICB9XG5cbiAgICBpZiAoIXBhdHRlcm5DYWNoZVtwYXR0ZXJuXVtmbGFnc10pIHtcbiAgICAgICAgdmFyIGNvbnRleHQgPSB7XG4gICAgICAgICAgICBoYXNOYW1lZENhcHR1cmU6IGZhbHNlLFxuICAgICAgICAgICAgY2FwdHVyZU5hbWVzOiBbXVxuICAgICAgICB9O1xuICAgICAgICB2YXIgc2NvcGUgPSBkZWZhdWx0U2NvcGU7XG4gICAgICAgIHZhciBvdXRwdXQgPSAnJztcbiAgICAgICAgdmFyIHBvcyA9IDA7XG4gICAgICAgIHZhciByZXN1bHQgPSB2b2lkIDA7XG5cbiAgICAgICAgLy8gQ2hlY2sgZm9yIGZsYWctcmVsYXRlZCBlcnJvcnMsIGFuZCBzdHJpcC9hcHBseSBmbGFncyBpbiBhIGxlYWRpbmcgbW9kZSBtb2RpZmllclxuICAgICAgICB2YXIgYXBwbGllZCA9IHByZXBhcmVGbGFncyhwYXR0ZXJuLCBmbGFncyk7XG4gICAgICAgIHZhciBhcHBsaWVkUGF0dGVybiA9IGFwcGxpZWQucGF0dGVybjtcbiAgICAgICAgdmFyIGFwcGxpZWRGbGFncyA9IGFwcGxpZWQuZmxhZ3M7XG5cbiAgICAgICAgLy8gVXNlIFhSZWdFeHAncyB0b2tlbnMgdG8gdHJhbnNsYXRlIHRoZSBwYXR0ZXJuIHRvIGEgbmF0aXZlIHJlZ2V4IHBhdHRlcm4uXG4gICAgICAgIC8vIGBhcHBsaWVkUGF0dGVybi5sZW5ndGhgIG1heSBjaGFuZ2Ugb24gZWFjaCBpdGVyYXRpb24gaWYgdG9rZW5zIHVzZSBgcmVwYXJzZWBcbiAgICAgICAgd2hpbGUgKHBvcyA8IGFwcGxpZWRQYXR0ZXJuLmxlbmd0aCkge1xuICAgICAgICAgICAgZG8ge1xuICAgICAgICAgICAgICAgIC8vIENoZWNrIGZvciBjdXN0b20gdG9rZW5zIGF0IHRoZSBjdXJyZW50IHBvc2l0aW9uXG4gICAgICAgICAgICAgICAgcmVzdWx0ID0gcnVuVG9rZW5zKGFwcGxpZWRQYXR0ZXJuLCBhcHBsaWVkRmxhZ3MsIHBvcywgc2NvcGUsIGNvbnRleHQpO1xuICAgICAgICAgICAgICAgIC8vIElmIHRoZSBtYXRjaGVkIHRva2VuIHVzZWQgdGhlIGByZXBhcnNlYCBvcHRpb24sIHNwbGljZSBpdHMgb3V0cHV0IGludG8gdGhlXG4gICAgICAgICAgICAgICAgLy8gcGF0dGVybiBiZWZvcmUgcnVubmluZyB0b2tlbnMgYWdhaW4gYXQgdGhlIHNhbWUgcG9zaXRpb25cbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0ICYmIHJlc3VsdC5yZXBhcnNlKSB7XG4gICAgICAgICAgICAgICAgICAgIGFwcGxpZWRQYXR0ZXJuID0gYXBwbGllZFBhdHRlcm4uc2xpY2UoMCwgcG9zKSArIHJlc3VsdC5vdXRwdXQgKyBhcHBsaWVkUGF0dGVybi5zbGljZShwb3MgKyByZXN1bHQubWF0Y2hMZW5ndGgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gd2hpbGUgKHJlc3VsdCAmJiByZXN1bHQucmVwYXJzZSk7XG5cbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBvdXRwdXQgKz0gcmVzdWx0Lm91dHB1dDtcbiAgICAgICAgICAgICAgICBwb3MgKz0gcmVzdWx0Lm1hdGNoTGVuZ3RoIHx8IDE7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIC8vIEdldCB0aGUgbmF0aXZlIHRva2VuIGF0IHRoZSBjdXJyZW50IHBvc2l0aW9uXG4gICAgICAgICAgICAgICAgdmFyIHRva2VuID0gWFJlZ0V4cC5leGVjKGFwcGxpZWRQYXR0ZXJuLCBuYXRpdmVUb2tlbnNbc2NvcGVdLCBwb3MsICdzdGlja3knKVswXTtcbiAgICAgICAgICAgICAgICBvdXRwdXQgKz0gdG9rZW47XG4gICAgICAgICAgICAgICAgcG9zICs9IHRva2VuLmxlbmd0aDtcbiAgICAgICAgICAgICAgICBpZiAodG9rZW4gPT09ICdbJyAmJiBzY29wZSA9PT0gZGVmYXVsdFNjb3BlKSB7XG4gICAgICAgICAgICAgICAgICAgIHNjb3BlID0gY2xhc3NTY29wZTtcbiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKHRva2VuID09PSAnXScgJiYgc2NvcGUgPT09IGNsYXNzU2NvcGUpIHtcbiAgICAgICAgICAgICAgICAgICAgc2NvcGUgPSBkZWZhdWx0U2NvcGU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgcGF0dGVybkNhY2hlW3BhdHRlcm5dW2ZsYWdzXSA9IHtcbiAgICAgICAgICAgIC8vIFVzZSBiYXNpYyBjbGVhbnVwIHRvIGNvbGxhcHNlIHJlcGVhdGVkIGVtcHR5IGdyb3VwcyBsaWtlIGAoPzopKD86KWAgdG8gYCg/OilgLiBFbXB0eVxuICAgICAgICAgICAgLy8gZ3JvdXBzIGFyZSBzb21ldGltZXMgaW5zZXJ0ZWQgZHVyaW5nIHJlZ2V4IHRyYW5zcGlsYXRpb24gaW4gb3JkZXIgdG8ga2VlcCB0b2tlbnNcbiAgICAgICAgICAgIC8vIHNlcGFyYXRlZC4gSG93ZXZlciwgbW9yZSB0aGFuIG9uZSBlbXB0eSBncm91cCBpbiBhIHJvdyBpcyBuZXZlciBuZWVkZWQuXG4gICAgICAgICAgICBwYXR0ZXJuOiBuYXRpdi5yZXBsYWNlLmNhbGwob3V0cHV0LCAvKD86XFwoXFw/OlxcKSkrL2csICcoPzopJyksXG4gICAgICAgICAgICAvLyBTdHJpcCBhbGwgYnV0IG5hdGl2ZSBmbGFnc1xuICAgICAgICAgICAgZmxhZ3M6IG5hdGl2LnJlcGxhY2UuY2FsbChhcHBsaWVkRmxhZ3MsIC9bXmdpbXV5XSsvZywgJycpLFxuICAgICAgICAgICAgLy8gYGNvbnRleHQuY2FwdHVyZU5hbWVzYCBoYXMgYW4gaXRlbSBmb3IgZWFjaCBjYXB0dXJpbmcgZ3JvdXAsIGV2ZW4gaWYgdW5uYW1lZFxuICAgICAgICAgICAgY2FwdHVyZXM6IGNvbnRleHQuaGFzTmFtZWRDYXB0dXJlID8gY29udGV4dC5jYXB0dXJlTmFtZXMgOiBudWxsXG4gICAgICAgIH07XG4gICAgfVxuXG4gICAgdmFyIGdlbmVyYXRlZCA9IHBhdHRlcm5DYWNoZVtwYXR0ZXJuXVtmbGFnc107XG4gICAgcmV0dXJuIGF1Z21lbnQobmV3IFJlZ0V4cChnZW5lcmF0ZWQucGF0dGVybiwgZ2VuZXJhdGVkLmZsYWdzKSwgZ2VuZXJhdGVkLmNhcHR1cmVzLCBwYXR0ZXJuLCBmbGFncyk7XG59XG5cbi8vIEFkZCBgUmVnRXhwLnByb3RvdHlwZWAgdG8gdGhlIHByb3RvdHlwZSBjaGFpblxuWFJlZ0V4cC5wcm90b3R5cGUgPSAvKD86KS87XG5cbi8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuLy8gUHVibGljIHByb3BlcnRpZXNcbi8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuXG4vKipcbiAqIFRoZSBYUmVnRXhwIHZlcnNpb24gbnVtYmVyIGFzIGEgc3RyaW5nIGNvbnRhaW5pbmcgdGhyZWUgZG90LXNlcGFyYXRlZCBwYXJ0cy4gRm9yIGV4YW1wbGUsXG4gKiAnMi4wLjAtYmV0YS0zJy5cbiAqXG4gKiBAc3RhdGljXG4gKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICogQHR5cGUgU3RyaW5nXG4gKi9cblhSZWdFeHAudmVyc2lvbiA9ICc0LjAuMCc7XG5cbi8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuLy8gUHVibGljIG1ldGhvZHNcbi8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuXG4vLyBJbnRlbnRpb25hbGx5IHVuZG9jdW1lbnRlZDsgdXNlZCBpbiB0ZXN0cyBhbmQgYWRkb25zXG5YUmVnRXhwLl9jbGlwRHVwbGljYXRlcyA9IGNsaXBEdXBsaWNhdGVzO1xuWFJlZ0V4cC5faGFzTmF0aXZlRmxhZyA9IGhhc05hdGl2ZUZsYWc7XG5YUmVnRXhwLl9kZWMgPSBkZWM7XG5YUmVnRXhwLl9oZXggPSBoZXg7XG5YUmVnRXhwLl9wYWQ0ID0gcGFkNDtcblxuLyoqXG4gKiBFeHRlbmRzIFhSZWdFeHAgc3ludGF4IGFuZCBhbGxvd3MgY3VzdG9tIGZsYWdzLiBUaGlzIGlzIHVzZWQgaW50ZXJuYWxseSBhbmQgY2FuIGJlIHVzZWQgdG9cbiAqIGNyZWF0ZSBYUmVnRXhwIGFkZG9ucy4gSWYgbW9yZSB0aGFuIG9uZSB0b2tlbiBjYW4gbWF0Y2ggdGhlIHNhbWUgc3RyaW5nLCB0aGUgbGFzdCBhZGRlZCB3aW5zLlxuICpcbiAqIEBtZW1iZXJPZiBYUmVnRXhwXG4gKiBAcGFyYW0ge1JlZ0V4cH0gcmVnZXggUmVnZXggb2JqZWN0IHRoYXQgbWF0Y2hlcyB0aGUgbmV3IHRva2VuLlxuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBGdW5jdGlvbiB0aGF0IHJldHVybnMgYSBuZXcgcGF0dGVybiBzdHJpbmcgKHVzaW5nIG5hdGl2ZSByZWdleCBzeW50YXgpXG4gKiAgIHRvIHJlcGxhY2UgdGhlIG1hdGNoZWQgdG9rZW4gd2l0aGluIGFsbCBmdXR1cmUgWFJlZ0V4cCByZWdleGVzLiBIYXMgYWNjZXNzIHRvIHBlcnNpc3RlbnRcbiAqICAgcHJvcGVydGllcyBvZiB0aGUgcmVnZXggYmVpbmcgYnVpbHQsIHRocm91Z2ggYHRoaXNgLiBJbnZva2VkIHdpdGggdGhyZWUgYXJndW1lbnRzOlxuICogICAtIFRoZSBtYXRjaCBhcnJheSwgd2l0aCBuYW1lZCBiYWNrcmVmZXJlbmNlIHByb3BlcnRpZXMuXG4gKiAgIC0gVGhlIHJlZ2V4IHNjb3BlIHdoZXJlIHRoZSBtYXRjaCB3YXMgZm91bmQ6ICdkZWZhdWx0JyBvciAnY2xhc3MnLlxuICogICAtIFRoZSBmbGFncyB1c2VkIGJ5IHRoZSByZWdleCwgaW5jbHVkaW5nIGFueSBmbGFncyBpbiBhIGxlYWRpbmcgbW9kZSBtb2RpZmllci5cbiAqICAgVGhlIGhhbmRsZXIgZnVuY3Rpb24gYmVjb21lcyBwYXJ0IG9mIHRoZSBYUmVnRXhwIGNvbnN0cnVjdGlvbiBwcm9jZXNzLCBzbyBiZSBjYXJlZnVsIG5vdCB0b1xuICogICBjb25zdHJ1Y3QgWFJlZ0V4cHMgd2l0aGluIHRoZSBmdW5jdGlvbiBvciB5b3Ugd2lsbCB0cmlnZ2VyIGluZmluaXRlIHJlY3Vyc2lvbi5cbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9uc10gT3B0aW9ucyBvYmplY3Qgd2l0aCBvcHRpb25hbCBwcm9wZXJ0aWVzOlxuICogICAtIGBzY29wZWAge1N0cmluZ30gU2NvcGUgd2hlcmUgdGhlIHRva2VuIGFwcGxpZXM6ICdkZWZhdWx0JywgJ2NsYXNzJywgb3IgJ2FsbCcuXG4gKiAgIC0gYGZsYWdgIHtTdHJpbmd9IFNpbmdsZS1jaGFyYWN0ZXIgZmxhZyB0aGF0IHRyaWdnZXJzIHRoZSB0b2tlbi4gVGhpcyBhbHNvIHJlZ2lzdGVycyB0aGVcbiAqICAgICBmbGFnLCB3aGljaCBwcmV2ZW50cyBYUmVnRXhwIGZyb20gdGhyb3dpbmcgYW4gJ3Vua25vd24gZmxhZycgZXJyb3Igd2hlbiB0aGUgZmxhZyBpcyB1c2VkLlxuICogICAtIGBvcHRpb25hbEZsYWdzYCB7U3RyaW5nfSBBbnkgY3VzdG9tIGZsYWdzIGNoZWNrZWQgZm9yIHdpdGhpbiB0aGUgdG9rZW4gYGhhbmRsZXJgIHRoYXQgYXJlXG4gKiAgICAgbm90IHJlcXVpcmVkIHRvIHRyaWdnZXIgdGhlIHRva2VuLiBUaGlzIHJlZ2lzdGVycyB0aGUgZmxhZ3MsIHRvIHByZXZlbnQgWFJlZ0V4cCBmcm9tXG4gKiAgICAgdGhyb3dpbmcgYW4gJ3Vua25vd24gZmxhZycgZXJyb3Igd2hlbiBhbnkgb2YgdGhlIGZsYWdzIGFyZSB1c2VkLlxuICogICAtIGByZXBhcnNlYCB7Qm9vbGVhbn0gV2hldGhlciB0aGUgYGhhbmRsZXJgIGZ1bmN0aW9uJ3Mgb3V0cHV0IHNob3VsZCBub3QgYmUgdHJlYXRlZCBhc1xuICogICAgIGZpbmFsLCBhbmQgaW5zdGVhZCBiZSByZXBhcnNlYWJsZSBieSBvdGhlciB0b2tlbnMgKGluY2x1ZGluZyB0aGUgY3VycmVudCB0b2tlbikuIEFsbG93c1xuICogICAgIHRva2VuIGNoYWluaW5nIG9yIGRlZmVycmluZy5cbiAqICAgLSBgbGVhZENoYXJgIHtTdHJpbmd9IFNpbmdsZSBjaGFyYWN0ZXIgdGhhdCBvY2N1cnMgYXQgdGhlIGJlZ2lubmluZyBvZiBhbnkgc3VjY2Vzc2Z1bCBtYXRjaFxuICogICAgIG9mIHRoZSB0b2tlbiAobm90IGFsd2F5cyBhcHBsaWNhYmxlKS4gVGhpcyBkb2Vzbid0IGNoYW5nZSB0aGUgYmVoYXZpb3Igb2YgdGhlIHRva2VuIHVubGVzc1xuICogICAgIHlvdSBwcm92aWRlIGFuIGVycm9uZW91cyB2YWx1ZS4gSG93ZXZlciwgcHJvdmlkaW5nIGl0IGNhbiBpbmNyZWFzZSB0aGUgdG9rZW4ncyBwZXJmb3JtYW5jZVxuICogICAgIHNpbmNlIHRoZSB0b2tlbiBjYW4gYmUgc2tpcHBlZCBhdCBhbnkgcG9zaXRpb25zIHdoZXJlIHRoaXMgY2hhcmFjdGVyIGRvZXNuJ3QgYXBwZWFyLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBCYXNpYyB1c2FnZTogQWRkIFxcYSBmb3IgdGhlIEFMRVJUIGNvbnRyb2wgY29kZVxuICogWFJlZ0V4cC5hZGRUb2tlbihcbiAqICAgL1xcXFxhLyxcbiAqICAgKCkgPT4gJ1xcXFx4MDcnLFxuICogICB7c2NvcGU6ICdhbGwnfVxuICogKTtcbiAqIFhSZWdFeHAoJ1xcXFxhW1xcXFxhLVxcXFxuXSsnKS50ZXN0KCdcXHgwN1xcblxceDA3Jyk7IC8vIC0+IHRydWVcbiAqXG4gKiAvLyBBZGQgdGhlIFUgKHVuZ3JlZWR5KSBmbGFnIGZyb20gUENSRSBhbmQgUkUyLCB3aGljaCByZXZlcnNlcyBncmVlZHkgYW5kIGxhenkgcXVhbnRpZmllcnMuXG4gKiAvLyBTaW5jZSBgc2NvcGVgIGlzIG5vdCBzcGVjaWZpZWQsIGl0IHVzZXMgJ2RlZmF1bHQnIChpLmUuLCB0cmFuc2Zvcm1hdGlvbnMgYXBwbHkgb3V0c2lkZSBvZlxuICogLy8gY2hhcmFjdGVyIGNsYXNzZXMgb25seSlcbiAqIFhSZWdFeHAuYWRkVG9rZW4oXG4gKiAgIC8oWz8qK118e1xcZCsoPzosXFxkKik/fSkoXFw/PykvLFxuICogICAobWF0Y2gpID0+IGAke21hdGNoWzFdfSR7bWF0Y2hbMl0gPyAnJyA6ICc/J31gLFxuICogICB7ZmxhZzogJ1UnfVxuICogKTtcbiAqIFhSZWdFeHAoJ2ErJywgJ1UnKS5leGVjKCdhYWEnKVswXTsgLy8gLT4gJ2EnXG4gKiBYUmVnRXhwKCdhKz8nLCAnVScpLmV4ZWMoJ2FhYScpWzBdOyAvLyAtPiAnYWFhJ1xuICovXG5YUmVnRXhwLmFkZFRva2VuID0gZnVuY3Rpb24gKHJlZ2V4LCBoYW5kbGVyLCBvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgdmFyIG9wdGlvbmFsRmxhZ3MgPSBvcHRpb25zLm9wdGlvbmFsRmxhZ3M7XG4gICAgdmFyIGkgPSB2b2lkIDA7XG5cbiAgICBpZiAob3B0aW9ucy5mbGFnKSB7XG4gICAgICAgIHJlZ2lzdGVyRmxhZyhvcHRpb25zLmZsYWcpO1xuICAgIH1cblxuICAgIGlmIChvcHRpb25hbEZsYWdzKSB7XG4gICAgICAgIG9wdGlvbmFsRmxhZ3MgPSBuYXRpdi5zcGxpdC5jYWxsKG9wdGlvbmFsRmxhZ3MsICcnKTtcbiAgICAgICAgZm9yIChpID0gMDsgaSA8IG9wdGlvbmFsRmxhZ3MubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIHJlZ2lzdGVyRmxhZyhvcHRpb25hbEZsYWdzW2ldKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIC8vIEFkZCB0byB0aGUgcHJpdmF0ZSBsaXN0IG9mIHN5bnRheCB0b2tlbnNcbiAgICB0b2tlbnMucHVzaCh7XG4gICAgICAgIHJlZ2V4OiBjb3B5UmVnZXgocmVnZXgsIHtcbiAgICAgICAgICAgIGFkZEc6IHRydWUsXG4gICAgICAgICAgICBhZGRZOiBoYXNOYXRpdmVZLFxuICAgICAgICAgICAgaXNJbnRlcm5hbE9ubHk6IHRydWVcbiAgICAgICAgfSksXG4gICAgICAgIGhhbmRsZXI6IGhhbmRsZXIsXG4gICAgICAgIHNjb3BlOiBvcHRpb25zLnNjb3BlIHx8IGRlZmF1bHRTY29wZSxcbiAgICAgICAgZmxhZzogb3B0aW9ucy5mbGFnLFxuICAgICAgICByZXBhcnNlOiBvcHRpb25zLnJlcGFyc2UsXG4gICAgICAgIGxlYWRDaGFyOiBvcHRpb25zLmxlYWRDaGFyXG4gICAgfSk7XG5cbiAgICAvLyBSZXNldCB0aGUgcGF0dGVybiBjYWNoZSB1c2VkIGJ5IHRoZSBgWFJlZ0V4cGAgY29uc3RydWN0b3IsIHNpbmNlIHRoZSBzYW1lIHBhdHRlcm4gYW5kIGZsYWdzXG4gICAgLy8gbWlnaHQgbm93IHByb2R1Y2UgZGlmZmVyZW50IHJlc3VsdHNcbiAgICBYUmVnRXhwLmNhY2hlLmZsdXNoKCdwYXR0ZXJucycpO1xufTtcblxuLyoqXG4gKiBDYWNoZXMgYW5kIHJldHVybnMgdGhlIHJlc3VsdCBvZiBjYWxsaW5nIGBYUmVnRXhwKHBhdHRlcm4sIGZsYWdzKWAuIE9uIGFueSBzdWJzZXF1ZW50IGNhbGwgd2l0aFxuICogdGhlIHNhbWUgcGF0dGVybiBhbmQgZmxhZyBjb21iaW5hdGlvbiwgdGhlIGNhY2hlZCBjb3B5IG9mIHRoZSByZWdleCBpcyByZXR1cm5lZC5cbiAqXG4gKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICogQHBhcmFtIHtTdHJpbmd9IHBhdHRlcm4gUmVnZXggcGF0dGVybiBzdHJpbmcuXG4gKiBAcGFyYW0ge1N0cmluZ30gW2ZsYWdzXSBBbnkgY29tYmluYXRpb24gb2YgWFJlZ0V4cCBmbGFncy5cbiAqIEByZXR1cm5zIHtSZWdFeHB9IENhY2hlZCBYUmVnRXhwIG9iamVjdC5cbiAqIEBleGFtcGxlXG4gKlxuICogd2hpbGUgKG1hdGNoID0gWFJlZ0V4cC5jYWNoZSgnLicsICdncycpLmV4ZWMoc3RyKSkge1xuICogICAvLyBUaGUgcmVnZXggaXMgY29tcGlsZWQgb25jZSBvbmx5XG4gKiB9XG4gKi9cblhSZWdFeHAuY2FjaGUgPSBmdW5jdGlvbiAocGF0dGVybiwgZmxhZ3MpIHtcbiAgICBpZiAoIXJlZ2V4Q2FjaGVbcGF0dGVybl0pIHtcbiAgICAgICAgcmVnZXhDYWNoZVtwYXR0ZXJuXSA9IHt9O1xuICAgIH1cbiAgICByZXR1cm4gcmVnZXhDYWNoZVtwYXR0ZXJuXVtmbGFnc10gfHwgKHJlZ2V4Q2FjaGVbcGF0dGVybl1bZmxhZ3NdID0gWFJlZ0V4cChwYXR0ZXJuLCBmbGFncykpO1xufTtcblxuLy8gSW50ZW50aW9uYWxseSB1bmRvY3VtZW50ZWQ7IHVzZWQgaW4gdGVzdHNcblhSZWdFeHAuY2FjaGUuZmx1c2ggPSBmdW5jdGlvbiAoY2FjaGVOYW1lKSB7XG4gICAgaWYgKGNhY2hlTmFtZSA9PT0gJ3BhdHRlcm5zJykge1xuICAgICAgICAvLyBGbHVzaCB0aGUgcGF0dGVybiBjYWNoZSB1c2VkIGJ5IHRoZSBgWFJlZ0V4cGAgY29uc3RydWN0b3JcbiAgICAgICAgcGF0dGVybkNhY2hlID0ge307XG4gICAgfSBlbHNlIHtcbiAgICAgICAgLy8gRmx1c2ggdGhlIHJlZ2V4IGNhY2hlIHBvcHVsYXRlZCBieSBgWFJlZ0V4cC5jYWNoZWBcbiAgICAgICAgcmVnZXhDYWNoZSA9IHt9O1xuICAgIH1cbn07XG5cbi8qKlxuICogRXNjYXBlcyBhbnkgcmVndWxhciBleHByZXNzaW9uIG1ldGFjaGFyYWN0ZXJzLCBmb3IgdXNlIHdoZW4gbWF0Y2hpbmcgbGl0ZXJhbCBzdHJpbmdzLiBUaGUgcmVzdWx0XG4gKiBjYW4gc2FmZWx5IGJlIHVzZWQgYXQgYW55IHBvaW50IHdpdGhpbiBhIHJlZ2V4IHRoYXQgdXNlcyBhbnkgZmxhZ3MuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIGVzY2FwZS5cbiAqIEByZXR1cm5zIHtTdHJpbmd9IFN0cmluZyB3aXRoIHJlZ2V4IG1ldGFjaGFyYWN0ZXJzIGVzY2FwZWQuXG4gKiBAZXhhbXBsZVxuICpcbiAqIFhSZWdFeHAuZXNjYXBlKCdFc2NhcGVkPyA8Lj4nKTtcbiAqIC8vIC0+ICdFc2NhcGVkXFw/XFwgPFxcLj4nXG4gKi9cblhSZWdFeHAuZXNjYXBlID0gZnVuY3Rpb24gKHN0cikge1xuICAgIHJldHVybiBuYXRpdi5yZXBsYWNlLmNhbGwodG9PYmplY3Qoc3RyKSwgL1stXFxbXFxde30oKSorPy4sXFxcXF4kfCNcXHNdL2csICdcXFxcJCYnKTtcbn07XG5cbi8qKlxuICogRXhlY3V0ZXMgYSByZWdleCBzZWFyY2ggaW4gYSBzcGVjaWZpZWQgc3RyaW5nLiBSZXR1cm5zIGEgbWF0Y2ggYXJyYXkgb3IgYG51bGxgLiBJZiB0aGUgcHJvdmlkZWRcbiAqIHJlZ2V4IHVzZXMgbmFtZWQgY2FwdHVyZSwgbmFtZWQgYmFja3JlZmVyZW5jZSBwcm9wZXJ0aWVzIGFyZSBpbmNsdWRlZCBvbiB0aGUgbWF0Y2ggYXJyYXkuXG4gKiBPcHRpb25hbCBgcG9zYCBhbmQgYHN0aWNreWAgYXJndW1lbnRzIHNwZWNpZnkgdGhlIHNlYXJjaCBzdGFydCBwb3NpdGlvbiwgYW5kIHdoZXRoZXIgdGhlIG1hdGNoXG4gKiBtdXN0IHN0YXJ0IGF0IHRoZSBzcGVjaWZpZWQgcG9zaXRpb24gb25seS4gVGhlIGBsYXN0SW5kZXhgIHByb3BlcnR5IG9mIHRoZSBwcm92aWRlZCByZWdleCBpcyBub3RcbiAqIHVzZWQsIGJ1dCBpcyB1cGRhdGVkIGZvciBjb21wYXRpYmlsaXR5LiBBbHNvIGZpeGVzIGJyb3dzZXIgYnVncyBjb21wYXJlZCB0byB0aGUgbmF0aXZlXG4gKiBgUmVnRXhwLnByb3RvdHlwZS5leGVjYCBhbmQgY2FuIGJlIHVzZWQgcmVsaWFibHkgY3Jvc3MtYnJvd3Nlci5cbiAqXG4gKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBTdHJpbmcgdG8gc2VhcmNoLlxuICogQHBhcmFtIHtSZWdFeHB9IHJlZ2V4IFJlZ2V4IHRvIHNlYXJjaCB3aXRoLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtwb3M9MF0gWmVyby1iYXNlZCBpbmRleCBhdCB3aGljaCB0byBzdGFydCB0aGUgc2VhcmNoLlxuICogQHBhcmFtIHtCb29sZWFufFN0cmluZ30gW3N0aWNreT1mYWxzZV0gV2hldGhlciB0aGUgbWF0Y2ggbXVzdCBzdGFydCBhdCB0aGUgc3BlY2lmaWVkIHBvc2l0aW9uXG4gKiAgIG9ubHkuIFRoZSBzdHJpbmcgYCdzdGlja3knYCBpcyBhY2NlcHRlZCBhcyBhbiBhbHRlcm5hdGl2ZSB0byBgdHJ1ZWAuXG4gKiBAcmV0dXJucyB7QXJyYXl9IE1hdGNoIGFycmF5IHdpdGggbmFtZWQgYmFja3JlZmVyZW5jZSBwcm9wZXJ0aWVzLCBvciBgbnVsbGAuXG4gKiBAZXhhbXBsZVxuICpcbiAqIC8vIEJhc2ljIHVzZSwgd2l0aCBuYW1lZCBiYWNrcmVmZXJlbmNlXG4gKiBsZXQgbWF0Y2ggPSBYUmVnRXhwLmV4ZWMoJ1UrMjYyMCcsIFhSZWdFeHAoJ1VcXFxcKyg/PGhleD5bMC05QS1GXXs0fSknKSk7XG4gKiBtYXRjaC5oZXg7IC8vIC0+ICcyNjIwJ1xuICpcbiAqIC8vIFdpdGggcG9zIGFuZCBzdGlja3ksIGluIGEgbG9vcFxuICogbGV0IHBvcyA9IDIsIHJlc3VsdCA9IFtdLCBtYXRjaDtcbiAqIHdoaWxlIChtYXRjaCA9IFhSZWdFeHAuZXhlYygnPDE+PDI+PDM+PDQ+NTw2PicsIC88KFxcZCk+LywgcG9zLCAnc3RpY2t5JykpIHtcbiAqICAgcmVzdWx0LnB1c2gobWF0Y2hbMV0pO1xuICogICBwb3MgPSBtYXRjaC5pbmRleCArIG1hdGNoWzBdLmxlbmd0aDtcbiAqIH1cbiAqIC8vIHJlc3VsdCAtPiBbJzInLCAnMycsICc0J11cbiAqL1xuWFJlZ0V4cC5leGVjID0gZnVuY3Rpb24gKHN0ciwgcmVnZXgsIHBvcywgc3RpY2t5KSB7XG4gICAgdmFyIGNhY2hlS2V5ID0gJ2cnO1xuICAgIHZhciBhZGRZID0gZmFsc2U7XG4gICAgdmFyIGZha2VZID0gZmFsc2U7XG4gICAgdmFyIG1hdGNoID0gdm9pZCAwO1xuXG4gICAgYWRkWSA9IGhhc05hdGl2ZVkgJiYgISEoc3RpY2t5IHx8IHJlZ2V4LnN0aWNreSAmJiBzdGlja3kgIT09IGZhbHNlKTtcbiAgICBpZiAoYWRkWSkge1xuICAgICAgICBjYWNoZUtleSArPSAneSc7XG4gICAgfSBlbHNlIGlmIChzdGlja3kpIHtcbiAgICAgICAgLy8gU2ltdWxhdGUgc3RpY2t5IG1hdGNoaW5nIGJ5IGFwcGVuZGluZyBhbiBlbXB0eSBjYXB0dXJlIHRvIHRoZSBvcmlnaW5hbCByZWdleC4gVGhlXG4gICAgICAgIC8vIHJlc3VsdGluZyByZWdleCB3aWxsIHN1Y2NlZWQgbm8gbWF0dGVyIHdoYXQgYXQgdGhlIGN1cnJlbnQgaW5kZXggKHNldCB3aXRoIGBsYXN0SW5kZXhgKSxcbiAgICAgICAgLy8gYW5kIHdpbGwgbm90IHNlYXJjaCB0aGUgcmVzdCBvZiB0aGUgc3ViamVjdCBzdHJpbmcuIFdlJ2xsIGtub3cgdGhhdCB0aGUgb3JpZ2luYWwgcmVnZXhcbiAgICAgICAgLy8gaGFzIGZhaWxlZCBpZiB0aGF0IGxhc3QgY2FwdHVyZSBpcyBgJydgIHJhdGhlciB0aGFuIGB1bmRlZmluZWRgIChpLmUuLCBpZiB0aGF0IGxhc3RcbiAgICAgICAgLy8gY2FwdHVyZSBwYXJ0aWNpcGF0ZWQgaW4gdGhlIG1hdGNoKS5cbiAgICAgICAgZmFrZVkgPSB0cnVlO1xuICAgICAgICBjYWNoZUtleSArPSAnRmFrZVknO1xuICAgIH1cblxuICAgIHJlZ2V4W1JFR0VYX0RBVEFdID0gcmVnZXhbUkVHRVhfREFUQV0gfHwge307XG5cbiAgICAvLyBTaGFyZXMgY2FjaGVkIGNvcGllcyB3aXRoIGBYUmVnRXhwLm1hdGNoYC9gcmVwbGFjZWBcbiAgICB2YXIgcjIgPSByZWdleFtSRUdFWF9EQVRBXVtjYWNoZUtleV0gfHwgKHJlZ2V4W1JFR0VYX0RBVEFdW2NhY2hlS2V5XSA9IGNvcHlSZWdleChyZWdleCwge1xuICAgICAgICBhZGRHOiB0cnVlLFxuICAgICAgICBhZGRZOiBhZGRZLFxuICAgICAgICBzb3VyY2U6IGZha2VZID8gcmVnZXguc291cmNlICsgJ3woKScgOiB1bmRlZmluZWQsXG4gICAgICAgIHJlbW92ZVk6IHN0aWNreSA9PT0gZmFsc2UsXG4gICAgICAgIGlzSW50ZXJuYWxPbmx5OiB0cnVlXG4gICAgfSkpO1xuXG4gICAgcG9zID0gcG9zIHx8IDA7XG4gICAgcjIubGFzdEluZGV4ID0gcG9zO1xuXG4gICAgLy8gRml4ZWQgYGV4ZWNgIHJlcXVpcmVkIGZvciBgbGFzdEluZGV4YCBmaXgsIG5hbWVkIGJhY2tyZWZlcmVuY2VzLCBldGMuXG4gICAgbWF0Y2ggPSBmaXhlZC5leGVjLmNhbGwocjIsIHN0cik7XG5cbiAgICAvLyBHZXQgcmlkIG9mIHRoZSBjYXB0dXJlIGFkZGVkIGJ5IHRoZSBwc2V1ZG8tc3RpY2t5IG1hdGNoZXIgaWYgbmVlZGVkLiBBbiBlbXB0eSBzdHJpbmcgbWVhbnNcbiAgICAvLyB0aGUgb3JpZ2luYWwgcmVnZXhwIGZhaWxlZCAoc2VlIGFib3ZlKS5cbiAgICBpZiAoZmFrZVkgJiYgbWF0Y2ggJiYgbWF0Y2gucG9wKCkgPT09ICcnKSB7XG4gICAgICAgIG1hdGNoID0gbnVsbDtcbiAgICB9XG5cbiAgICBpZiAocmVnZXguZ2xvYmFsKSB7XG4gICAgICAgIHJlZ2V4Lmxhc3RJbmRleCA9IG1hdGNoID8gcjIubGFzdEluZGV4IDogMDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWF0Y2g7XG59O1xuXG4vKipcbiAqIEV4ZWN1dGVzIGEgcHJvdmlkZWQgZnVuY3Rpb24gb25jZSBwZXIgcmVnZXggbWF0Y2guIFNlYXJjaGVzIGFsd2F5cyBzdGFydCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZVxuICogc3RyaW5nIGFuZCBjb250aW51ZSB1bnRpbCB0aGUgZW5kLCByZWdhcmRsZXNzIG9mIHRoZSBzdGF0ZSBvZiB0aGUgcmVnZXgncyBgZ2xvYmFsYCBwcm9wZXJ0eSBhbmRcbiAqIGluaXRpYWwgYGxhc3RJbmRleGAuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIHNlYXJjaC5cbiAqIEBwYXJhbSB7UmVnRXhwfSByZWdleCBSZWdleCB0byBzZWFyY2ggd2l0aC5cbiAqIEBwYXJhbSB7RnVuY3Rpb259IGNhbGxiYWNrIEZ1bmN0aW9uIHRvIGV4ZWN1dGUgZm9yIGVhY2ggbWF0Y2guIEludm9rZWQgd2l0aCBmb3VyIGFyZ3VtZW50czpcbiAqICAgLSBUaGUgbWF0Y2ggYXJyYXksIHdpdGggbmFtZWQgYmFja3JlZmVyZW5jZSBwcm9wZXJ0aWVzLlxuICogICAtIFRoZSB6ZXJvLWJhc2VkIG1hdGNoIGluZGV4LlxuICogICAtIFRoZSBzdHJpbmcgYmVpbmcgdHJhdmVyc2VkLlxuICogICAtIFRoZSByZWdleCBvYmplY3QgYmVpbmcgdXNlZCB0byB0cmF2ZXJzZSB0aGUgc3RyaW5nLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBFeHRyYWN0cyBldmVyeSBvdGhlciBkaWdpdCBmcm9tIGEgc3RyaW5nXG4gKiBjb25zdCBldmVucyA9IFtdO1xuICogWFJlZ0V4cC5mb3JFYWNoKCcxYTIzNDUnLCAvXFxkLywgKG1hdGNoLCBpKSA9PiB7XG4gKiAgIGlmIChpICUgMikgZXZlbnMucHVzaCgrbWF0Y2hbMF0pO1xuICogfSk7XG4gKiAvLyBldmVucyAtPiBbMiwgNF1cbiAqL1xuWFJlZ0V4cC5mb3JFYWNoID0gZnVuY3Rpb24gKHN0ciwgcmVnZXgsIGNhbGxiYWNrKSB7XG4gICAgdmFyIHBvcyA9IDA7XG4gICAgdmFyIGkgPSAtMTtcbiAgICB2YXIgbWF0Y2ggPSB2b2lkIDA7XG5cbiAgICB3aGlsZSAobWF0Y2ggPSBYUmVnRXhwLmV4ZWMoc3RyLCByZWdleCwgcG9zKSkge1xuICAgICAgICAvLyBCZWNhdXNlIGByZWdleGAgaXMgcHJvdmlkZWQgdG8gYGNhbGxiYWNrYCwgdGhlIGZ1bmN0aW9uIGNvdWxkIHVzZSB0aGUgZGVwcmVjYXRlZC9cbiAgICAgICAgLy8gbm9uc3RhbmRhcmQgYFJlZ0V4cC5wcm90b3R5cGUuY29tcGlsZWAgdG8gbXV0YXRlIHRoZSByZWdleC4gSG93ZXZlciwgc2luY2UgYFhSZWdFeHAuZXhlY2BcbiAgICAgICAgLy8gZG9lc24ndCB1c2UgYGxhc3RJbmRleGAgdG8gc2V0IHRoZSBzZWFyY2ggcG9zaXRpb24sIHRoaXMgY2FuJ3QgbGVhZCB0byBhbiBpbmZpbml0ZSBsb29wLFxuICAgICAgICAvLyBhdCBsZWFzdC4gQWN0dWFsbHksIGJlY2F1c2Ugb2YgdGhlIHdheSBgWFJlZ0V4cC5leGVjYCBjYWNoZXMgZ2xvYmFsaXplZCB2ZXJzaW9ucyBvZlxuICAgICAgICAvLyByZWdleGVzLCBtdXRhdGluZyB0aGUgcmVnZXggd2lsbCBub3QgaGF2ZSBhbnkgZWZmZWN0IG9uIHRoZSBpdGVyYXRpb24gb3IgbWF0Y2hlZCBzdHJpbmdzLFxuICAgICAgICAvLyB3aGljaCBpcyBhIG5pY2Ugc2lkZSBlZmZlY3QgdGhhdCBicmluZ3MgZXh0cmEgc2FmZXR5LlxuICAgICAgICBjYWxsYmFjayhtYXRjaCwgKytpLCBzdHIsIHJlZ2V4KTtcblxuICAgICAgICBwb3MgPSBtYXRjaC5pbmRleCArIChtYXRjaFswXS5sZW5ndGggfHwgMSk7XG4gICAgfVxufTtcblxuLyoqXG4gKiBDb3BpZXMgYSByZWdleCBvYmplY3QgYW5kIGFkZHMgZmxhZyBgZ2AuIFRoZSBjb3B5IG1haW50YWlucyBleHRlbmRlZCBkYXRhLCBpcyBhdWdtZW50ZWQgd2l0aFxuICogYFhSZWdFeHAucHJvdG90eXBlYCBwcm9wZXJ0aWVzLCBhbmQgaGFzIGEgZnJlc2ggYGxhc3RJbmRleGAgcHJvcGVydHkgKHNldCB0byB6ZXJvKS4gTmF0aXZlXG4gKiByZWdleGVzIGFyZSBub3QgcmVjb21waWxlZCB1c2luZyBYUmVnRXhwIHN5bnRheC5cbiAqXG4gKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICogQHBhcmFtIHtSZWdFeHB9IHJlZ2V4IFJlZ2V4IHRvIGdsb2JhbGl6ZS5cbiAqIEByZXR1cm5zIHtSZWdFeHB9IENvcHkgb2YgdGhlIHByb3ZpZGVkIHJlZ2V4IHdpdGggZmxhZyBgZ2AgYWRkZWQuXG4gKiBAZXhhbXBsZVxuICpcbiAqIGNvbnN0IGdsb2JhbENvcHkgPSBYUmVnRXhwLmdsb2JhbGl6ZSgvcmVnZXgvKTtcbiAqIGdsb2JhbENvcHkuZ2xvYmFsOyAvLyAtPiB0cnVlXG4gKi9cblhSZWdFeHAuZ2xvYmFsaXplID0gZnVuY3Rpb24gKHJlZ2V4KSB7XG4gICAgcmV0dXJuIGNvcHlSZWdleChyZWdleCwgeyBhZGRHOiB0cnVlIH0pO1xufTtcblxuLyoqXG4gKiBJbnN0YWxscyBvcHRpb25hbCBmZWF0dXJlcyBhY2NvcmRpbmcgdG8gdGhlIHNwZWNpZmllZCBvcHRpb25zLiBDYW4gYmUgdW5kb25lIHVzaW5nXG4gKiBgWFJlZ0V4cC51bmluc3RhbGxgLlxuICpcbiAqIEBtZW1iZXJPZiBYUmVnRXhwXG4gKiBAcGFyYW0ge09iamVjdHxTdHJpbmd9IG9wdGlvbnMgT3B0aW9ucyBvYmplY3Qgb3Igc3RyaW5nLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBXaXRoIGFuIG9wdGlvbnMgb2JqZWN0XG4gKiBYUmVnRXhwLmluc3RhbGwoe1xuICogICAvLyBFbmFibGVzIHN1cHBvcnQgZm9yIGFzdHJhbCBjb2RlIHBvaW50cyBpbiBVbmljb2RlIGFkZG9ucyAoaW1wbGljaXRseSBzZXRzIGZsYWcgQSlcbiAqICAgYXN0cmFsOiB0cnVlXG4gKiB9KTtcbiAqXG4gKiAvLyBXaXRoIGFuIG9wdGlvbnMgc3RyaW5nXG4gKiBYUmVnRXhwLmluc3RhbGwoJ2FzdHJhbCcpO1xuICovXG5YUmVnRXhwLmluc3RhbGwgPSBmdW5jdGlvbiAob3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBwcmVwYXJlT3B0aW9ucyhvcHRpb25zKTtcblxuICAgIGlmICghZmVhdHVyZXMuYXN0cmFsICYmIG9wdGlvbnMuYXN0cmFsKSB7XG4gICAgICAgIHNldEFzdHJhbCh0cnVlKTtcbiAgICB9XG59O1xuXG4vKipcbiAqIENoZWNrcyB3aGV0aGVyIGFuIGluZGl2aWR1YWwgb3B0aW9uYWwgZmVhdHVyZSBpcyBpbnN0YWxsZWQuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBmZWF0dXJlIE5hbWUgb2YgdGhlIGZlYXR1cmUgdG8gY2hlY2suIE9uZSBvZjpcbiAqICAgLSBgYXN0cmFsYFxuICogQHJldHVybnMge0Jvb2xlYW59IFdoZXRoZXIgdGhlIGZlYXR1cmUgaXMgaW5zdGFsbGVkLlxuICogQGV4YW1wbGVcbiAqXG4gKiBYUmVnRXhwLmlzSW5zdGFsbGVkKCdhc3RyYWwnKTtcbiAqL1xuWFJlZ0V4cC5pc0luc3RhbGxlZCA9IGZ1bmN0aW9uIChmZWF0dXJlKSB7XG4gICAgcmV0dXJuICEhZmVhdHVyZXNbZmVhdHVyZV07XG59O1xuXG4vKipcbiAqIFJldHVybnMgYHRydWVgIGlmIGFuIG9iamVjdCBpcyBhIHJlZ2V4OyBgZmFsc2VgIGlmIGl0IGlzbid0LiBUaGlzIHdvcmtzIGNvcnJlY3RseSBmb3IgcmVnZXhlc1xuICogY3JlYXRlZCBpbiBhbm90aGVyIGZyYW1lLCB3aGVuIGBpbnN0YW5jZW9mYCBhbmQgYGNvbnN0cnVjdG9yYCBjaGVja3Mgd291bGQgZmFpbC5cbiAqXG4gKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICogQHBhcmFtIHsqfSB2YWx1ZSBPYmplY3QgdG8gY2hlY2suXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gV2hldGhlciB0aGUgb2JqZWN0IGlzIGEgYFJlZ0V4cGAgb2JqZWN0LlxuICogQGV4YW1wbGVcbiAqXG4gKiBYUmVnRXhwLmlzUmVnRXhwKCdzdHJpbmcnKTsgLy8gLT4gZmFsc2VcbiAqIFhSZWdFeHAuaXNSZWdFeHAoL3JlZ2V4L2kpOyAvLyAtPiB0cnVlXG4gKiBYUmVnRXhwLmlzUmVnRXhwKFJlZ0V4cCgnXicsICdtJykpOyAvLyAtPiB0cnVlXG4gKiBYUmVnRXhwLmlzUmVnRXhwKFhSZWdFeHAoJyg/cykuJykpOyAvLyAtPiB0cnVlXG4gKi9cblhSZWdFeHAuaXNSZWdFeHAgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICByZXR1cm4gdG9TdHJpbmcuY2FsbCh2YWx1ZSkgPT09ICdbb2JqZWN0IFJlZ0V4cF0nO1xufTsgLy8gaXNUeXBlKHZhbHVlLCAnUmVnRXhwJyk7XG5cbi8qKlxuICogUmV0dXJucyB0aGUgZmlyc3QgbWF0Y2hlZCBzdHJpbmcsIG9yIGluIGdsb2JhbCBtb2RlLCBhbiBhcnJheSBjb250YWluaW5nIGFsbCBtYXRjaGVkIHN0cmluZ3MuXG4gKiBUaGlzIGlzIGVzc2VudGlhbGx5IGEgbW9yZSBjb252ZW5pZW50IHJlLWltcGxlbWVudGF0aW9uIG9mIGBTdHJpbmcucHJvdG90eXBlLm1hdGNoYCB0aGF0IGdpdmVzXG4gKiB0aGUgcmVzdWx0IHR5cGVzIHlvdSBhY3R1YWxseSB3YW50IChzdHJpbmcgaW5zdGVhZCBvZiBgZXhlY2Atc3R5bGUgYXJyYXkgaW4gbWF0Y2gtZmlyc3QgbW9kZSxcbiAqIGFuZCBhbiBlbXB0eSBhcnJheSBpbnN0ZWFkIG9mIGBudWxsYCB3aGVuIG5vIG1hdGNoZXMgYXJlIGZvdW5kIGluIG1hdGNoLWFsbCBtb2RlKS4gSXQgYWxzbyBsZXRzXG4gKiB5b3Ugb3ZlcnJpZGUgZmxhZyBnIGFuZCBpZ25vcmUgYGxhc3RJbmRleGAsIGFuZCBmaXhlcyBicm93c2VyIGJ1Z3MuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIHNlYXJjaC5cbiAqIEBwYXJhbSB7UmVnRXhwfSByZWdleCBSZWdleCB0byBzZWFyY2ggd2l0aC5cbiAqIEBwYXJhbSB7U3RyaW5nfSBbc2NvcGU9J29uZSddIFVzZSAnb25lJyB0byByZXR1cm4gdGhlIGZpcnN0IG1hdGNoIGFzIGEgc3RyaW5nLiBVc2UgJ2FsbCcgdG9cbiAqICAgcmV0dXJuIGFuIGFycmF5IG9mIGFsbCBtYXRjaGVkIHN0cmluZ3MuIElmIG5vdCBleHBsaWNpdGx5IHNwZWNpZmllZCBhbmQgYHJlZ2V4YCB1c2VzIGZsYWcgZyxcbiAqICAgYHNjb3BlYCBpcyAnYWxsJy5cbiAqIEByZXR1cm5zIHtTdHJpbmd8QXJyYXl9IEluIG1hdGNoLWZpcnN0IG1vZGU6IEZpcnN0IG1hdGNoIGFzIGEgc3RyaW5nLCBvciBgbnVsbGAuIEluIG1hdGNoLWFsbFxuICogICBtb2RlOiBBcnJheSBvZiBhbGwgbWF0Y2hlZCBzdHJpbmdzLCBvciBhbiBlbXB0eSBhcnJheS5cbiAqIEBleGFtcGxlXG4gKlxuICogLy8gTWF0Y2ggZmlyc3RcbiAqIFhSZWdFeHAubWF0Y2goJ2FiYycsIC9cXHcvKTsgLy8gLT4gJ2EnXG4gKiBYUmVnRXhwLm1hdGNoKCdhYmMnLCAvXFx3L2csICdvbmUnKTsgLy8gLT4gJ2EnXG4gKiBYUmVnRXhwLm1hdGNoKCdhYmMnLCAveC9nLCAnb25lJyk7IC8vIC0+IG51bGxcbiAqXG4gKiAvLyBNYXRjaCBhbGxcbiAqIFhSZWdFeHAubWF0Y2goJ2FiYycsIC9cXHcvZyk7IC8vIC0+IFsnYScsICdiJywgJ2MnXVxuICogWFJlZ0V4cC5tYXRjaCgnYWJjJywgL1xcdy8sICdhbGwnKTsgLy8gLT4gWydhJywgJ2InLCAnYyddXG4gKiBYUmVnRXhwLm1hdGNoKCdhYmMnLCAveC8sICdhbGwnKTsgLy8gLT4gW11cbiAqL1xuWFJlZ0V4cC5tYXRjaCA9IGZ1bmN0aW9uIChzdHIsIHJlZ2V4LCBzY29wZSkge1xuICAgIHZhciBnbG9iYWwgPSByZWdleC5nbG9iYWwgJiYgc2NvcGUgIT09ICdvbmUnIHx8IHNjb3BlID09PSAnYWxsJztcbiAgICB2YXIgY2FjaGVLZXkgPSAoZ2xvYmFsID8gJ2cnIDogJycpICsgKHJlZ2V4LnN0aWNreSA/ICd5JyA6ICcnKSB8fCAnbm9HWSc7XG5cbiAgICByZWdleFtSRUdFWF9EQVRBXSA9IHJlZ2V4W1JFR0VYX0RBVEFdIHx8IHt9O1xuXG4gICAgLy8gU2hhcmVzIGNhY2hlZCBjb3BpZXMgd2l0aCBgWFJlZ0V4cC5leGVjYC9gcmVwbGFjZWBcbiAgICB2YXIgcjIgPSByZWdleFtSRUdFWF9EQVRBXVtjYWNoZUtleV0gfHwgKHJlZ2V4W1JFR0VYX0RBVEFdW2NhY2hlS2V5XSA9IGNvcHlSZWdleChyZWdleCwge1xuICAgICAgICBhZGRHOiAhIWdsb2JhbCxcbiAgICAgICAgcmVtb3ZlRzogc2NvcGUgPT09ICdvbmUnLFxuICAgICAgICBpc0ludGVybmFsT25seTogdHJ1ZVxuICAgIH0pKTtcblxuICAgIHZhciByZXN1bHQgPSBuYXRpdi5tYXRjaC5jYWxsKHRvT2JqZWN0KHN0ciksIHIyKTtcblxuICAgIGlmIChyZWdleC5nbG9iYWwpIHtcbiAgICAgICAgcmVnZXgubGFzdEluZGV4ID0gc2NvcGUgPT09ICdvbmUnICYmIHJlc3VsdCA/XG4gICAgICAgIC8vIENhbid0IHVzZSBgcjIubGFzdEluZGV4YCBzaW5jZSBgcjJgIGlzIG5vbmdsb2JhbCBpbiB0aGlzIGNhc2VcbiAgICAgICAgcmVzdWx0LmluZGV4ICsgcmVzdWx0WzBdLmxlbmd0aCA6IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGdsb2JhbCA/IHJlc3VsdCB8fCBbXSA6IHJlc3VsdCAmJiByZXN1bHRbMF07XG59O1xuXG4vKipcbiAqIFJldHJpZXZlcyB0aGUgbWF0Y2hlcyBmcm9tIHNlYXJjaGluZyBhIHN0cmluZyB1c2luZyBhIGNoYWluIG9mIHJlZ2V4ZXMgdGhhdCBzdWNjZXNzaXZlbHkgc2VhcmNoXG4gKiB3aXRoaW4gcHJldmlvdXMgbWF0Y2hlcy4gVGhlIHByb3ZpZGVkIGBjaGFpbmAgYXJyYXkgY2FuIGNvbnRhaW4gcmVnZXhlcyBhbmQgb3Igb2JqZWN0cyB3aXRoXG4gKiBgcmVnZXhgIGFuZCBgYmFja3JlZmAgcHJvcGVydGllcy4gV2hlbiBhIGJhY2tyZWZlcmVuY2UgaXMgc3BlY2lmaWVkLCB0aGUgbmFtZWQgb3IgbnVtYmVyZWRcbiAqIGJhY2tyZWZlcmVuY2UgaXMgcGFzc2VkIGZvcndhcmQgdG8gdGhlIG5leHQgcmVnZXggb3IgcmV0dXJuZWQuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIHNlYXJjaC5cbiAqIEBwYXJhbSB7QXJyYXl9IGNoYWluIFJlZ2V4ZXMgdGhhdCBlYWNoIHNlYXJjaCBmb3IgbWF0Y2hlcyB3aXRoaW4gcHJlY2VkaW5nIHJlc3VsdHMuXG4gKiBAcmV0dXJucyB7QXJyYXl9IE1hdGNoZXMgYnkgdGhlIGxhc3QgcmVnZXggaW4gdGhlIGNoYWluLCBvciBhbiBlbXB0eSBhcnJheS5cbiAqIEBleGFtcGxlXG4gKlxuICogLy8gQmFzaWMgdXNhZ2U7IG1hdGNoZXMgbnVtYmVycyB3aXRoaW4gPGI+IHRhZ3NcbiAqIFhSZWdFeHAubWF0Y2hDaGFpbignMSA8Yj4yPC9iPiAzIDxiPjQgYSA1NjwvYj4nLCBbXG4gKiAgIFhSZWdFeHAoJyg/aXMpPGI+Lio/PC9iPicpLFxuICogICAvXFxkKy9cbiAqIF0pO1xuICogLy8gLT4gWycyJywgJzQnLCAnNTYnXVxuICpcbiAqIC8vIFBhc3NpbmcgZm9yd2FyZCBhbmQgcmV0dXJuaW5nIHNwZWNpZmljIGJhY2tyZWZlcmVuY2VzXG4gKiBodG1sID0gJzxhIGhyZWY9XCJodHRwOi8veHJlZ2V4cC5jb20vYXBpL1wiPlhSZWdFeHA8L2E+XFxcbiAqICAgICAgICAgPGEgaHJlZj1cImh0dHA6Ly93d3cuZ29vZ2xlLmNvbS9cIj5Hb29nbGU8L2E+JztcbiAqIFhSZWdFeHAubWF0Y2hDaGFpbihodG1sLCBbXG4gKiAgIHtyZWdleDogLzxhIGhyZWY9XCIoW15cIl0rKVwiPi9pLCBiYWNrcmVmOiAxfSxcbiAqICAge3JlZ2V4OiBYUmVnRXhwKCcoP2kpXmh0dHBzPzovLyg/PGRvbWFpbj5bXi8/I10rKScpLCBiYWNrcmVmOiAnZG9tYWluJ31cbiAqIF0pO1xuICogLy8gLT4gWyd4cmVnZXhwLmNvbScsICd3d3cuZ29vZ2xlLmNvbSddXG4gKi9cblhSZWdFeHAubWF0Y2hDaGFpbiA9IGZ1bmN0aW9uIChzdHIsIGNoYWluKSB7XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHJlY3Vyc2VDaGFpbih2YWx1ZXMsIGxldmVsKSB7XG4gICAgICAgIHZhciBpdGVtID0gY2hhaW5bbGV2ZWxdLnJlZ2V4ID8gY2hhaW5bbGV2ZWxdIDogeyByZWdleDogY2hhaW5bbGV2ZWxdIH07XG4gICAgICAgIHZhciBtYXRjaGVzID0gW107XG5cbiAgICAgICAgZnVuY3Rpb24gYWRkTWF0Y2gobWF0Y2gpIHtcbiAgICAgICAgICAgIGlmIChpdGVtLmJhY2tyZWYpIHtcbiAgICAgICAgICAgICAgICAvLyBTYWZhcmkgNC4wLjUgKGJ1dCBub3QgNS4wLjUrKSBpbmFwcHJvcHJpYXRlbHkgdXNlcyBzcGFyc2UgYXJyYXlzIHRvIGhvbGQgdGhlXG4gICAgICAgICAgICAgICAgLy8gYHVuZGVmaW5lZGBzIGZvciBiYWNrcmVmZXJlbmNlcyB0byBub25wYXJ0aWNpcGF0aW5nIGNhcHR1cmluZyBncm91cHMuIEluIHN1Y2hcbiAgICAgICAgICAgICAgICAvLyBjYXNlcywgYSBgaGFzT3duUHJvcGVydHlgIG9yIGBpbmAgY2hlY2sgb24gaXRzIG93biB3b3VsZCBpbmFwcHJvcHJpYXRlbHkgdGhyb3dcbiAgICAgICAgICAgICAgICAvLyB0aGUgZXhjZXB0aW9uLCBzbyBhbHNvIGNoZWNrIGlmIHRoZSBiYWNrcmVmZXJlbmNlIGlzIGEgbnVtYmVyIHRoYXQgaXMgd2l0aGluIHRoZVxuICAgICAgICAgICAgICAgIC8vIGJvdW5kcyBvZiB0aGUgYXJyYXkuXG4gICAgICAgICAgICAgICAgaWYgKCEobWF0Y2guaGFzT3duUHJvcGVydHkoaXRlbS5iYWNrcmVmKSB8fCAraXRlbS5iYWNrcmVmIDwgbWF0Y2gubGVuZ3RoKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoJ0JhY2tyZWZlcmVuY2UgdG8gdW5kZWZpbmVkIGdyb3VwOiAnICsgaXRlbS5iYWNrcmVmKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICBtYXRjaGVzLnB1c2gobWF0Y2hbaXRlbS5iYWNrcmVmXSB8fCAnJyk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIG1hdGNoZXMucHVzaChtYXRjaFswXSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHZhbHVlcy5sZW5ndGg7ICsraSkge1xuICAgICAgICAgICAgWFJlZ0V4cC5mb3JFYWNoKHZhbHVlc1tpXSwgaXRlbS5yZWdleCwgYWRkTWF0Y2gpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGxldmVsID09PSBjaGFpbi5sZW5ndGggLSAxIHx8ICFtYXRjaGVzLmxlbmd0aCA/IG1hdGNoZXMgOiByZWN1cnNlQ2hhaW4obWF0Y2hlcywgbGV2ZWwgKyAxKTtcbiAgICB9KFtzdHJdLCAwKTtcbn07XG5cbi8qKlxuICogUmV0dXJucyBhIG5ldyBzdHJpbmcgd2l0aCBvbmUgb3IgYWxsIG1hdGNoZXMgb2YgYSBwYXR0ZXJuIHJlcGxhY2VkLiBUaGUgcGF0dGVybiBjYW4gYmUgYSBzdHJpbmdcbiAqIG9yIHJlZ2V4LCBhbmQgdGhlIHJlcGxhY2VtZW50IGNhbiBiZSBhIHN0cmluZyBvciBhIGZ1bmN0aW9uIHRvIGJlIGNhbGxlZCBmb3IgZWFjaCBtYXRjaC4gVG9cbiAqIHBlcmZvcm0gYSBnbG9iYWwgc2VhcmNoIGFuZCByZXBsYWNlLCB1c2UgdGhlIG9wdGlvbmFsIGBzY29wZWAgYXJndW1lbnQgb3IgaW5jbHVkZSBmbGFnIGcgaWYgdXNpbmdcbiAqIGEgcmVnZXguIFJlcGxhY2VtZW50IHN0cmluZ3MgY2FuIHVzZSBgJHtufWAgb3IgYCQ8bj5gIGZvciBuYW1lZCBhbmQgbnVtYmVyZWQgYmFja3JlZmVyZW5jZXMuXG4gKiBSZXBsYWNlbWVudCBmdW5jdGlvbnMgY2FuIHVzZSBuYW1lZCBiYWNrcmVmZXJlbmNlcyB2aWEgYGFyZ3VtZW50c1swXS5uYW1lYC4gQWxzbyBmaXhlcyBicm93c2VyXG4gKiBidWdzIGNvbXBhcmVkIHRvIHRoZSBuYXRpdmUgYFN0cmluZy5wcm90b3R5cGUucmVwbGFjZWAgYW5kIGNhbiBiZSB1c2VkIHJlbGlhYmx5IGNyb3NzLWJyb3dzZXIuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIHNlYXJjaC5cbiAqIEBwYXJhbSB7UmVnRXhwfFN0cmluZ30gc2VhcmNoIFNlYXJjaCBwYXR0ZXJuIHRvIGJlIHJlcGxhY2VkLlxuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHJlcGxhY2VtZW50IFJlcGxhY2VtZW50IHN0cmluZyBvciBhIGZ1bmN0aW9uIGludm9rZWQgdG8gY3JlYXRlIGl0LlxuICogICBSZXBsYWNlbWVudCBzdHJpbmdzIGNhbiBpbmNsdWRlIHNwZWNpYWwgcmVwbGFjZW1lbnQgc3ludGF4OlxuICogICAgIC0gJCQgLSBJbnNlcnRzIGEgbGl0ZXJhbCAkIGNoYXJhY3Rlci5cbiAqICAgICAtICQmLCAkMCAtIEluc2VydHMgdGhlIG1hdGNoZWQgc3Vic3RyaW5nLlxuICogICAgIC0gJGAgLSBJbnNlcnRzIHRoZSBzdHJpbmcgdGhhdCBwcmVjZWRlcyB0aGUgbWF0Y2hlZCBzdWJzdHJpbmcgKGxlZnQgY29udGV4dCkuXG4gKiAgICAgLSAkJyAtIEluc2VydHMgdGhlIHN0cmluZyB0aGF0IGZvbGxvd3MgdGhlIG1hdGNoZWQgc3Vic3RyaW5nIChyaWdodCBjb250ZXh0KS5cbiAqICAgICAtICRuLCAkbm4gLSBXaGVyZSBuL25uIGFyZSBkaWdpdHMgcmVmZXJlbmNpbmcgYW4gZXhpc3RlbnQgY2FwdHVyaW5nIGdyb3VwLCBpbnNlcnRzXG4gKiAgICAgICBiYWNrcmVmZXJlbmNlIG4vbm4uXG4gKiAgICAgLSAke259LCAkPG4+IC0gV2hlcmUgbiBpcyBhIG5hbWUgb3IgYW55IG51bWJlciBvZiBkaWdpdHMgdGhhdCByZWZlcmVuY2UgYW4gZXhpc3RlbnQgY2FwdHVyaW5nXG4gKiAgICAgICBncm91cCwgaW5zZXJ0cyBiYWNrcmVmZXJlbmNlIG4uXG4gKiAgIFJlcGxhY2VtZW50IGZ1bmN0aW9ucyBhcmUgaW52b2tlZCB3aXRoIHRocmVlIG9yIG1vcmUgYXJndW1lbnRzOlxuICogICAgIC0gVGhlIG1hdGNoZWQgc3Vic3RyaW5nIChjb3JyZXNwb25kcyB0byAkJiBhYm92ZSkuIE5hbWVkIGJhY2tyZWZlcmVuY2VzIGFyZSBhY2Nlc3NpYmxlIGFzXG4gKiAgICAgICBwcm9wZXJ0aWVzIG9mIHRoaXMgZmlyc3QgYXJndW1lbnQuXG4gKiAgICAgLSAwLi5uIGFyZ3VtZW50cywgb25lIGZvciBlYWNoIGJhY2tyZWZlcmVuY2UgKGNvcnJlc3BvbmRpbmcgdG8gJDEsICQyLCBldGMuIGFib3ZlKS5cbiAqICAgICAtIFRoZSB6ZXJvLWJhc2VkIGluZGV4IG9mIHRoZSBtYXRjaCB3aXRoaW4gdGhlIHRvdGFsIHNlYXJjaCBzdHJpbmcuXG4gKiAgICAgLSBUaGUgdG90YWwgc3RyaW5nIGJlaW5nIHNlYXJjaGVkLlxuICogQHBhcmFtIHtTdHJpbmd9IFtzY29wZT0nb25lJ10gVXNlICdvbmUnIHRvIHJlcGxhY2UgdGhlIGZpcnN0IG1hdGNoIG9ubHksIG9yICdhbGwnLiBJZiBub3RcbiAqICAgZXhwbGljaXRseSBzcGVjaWZpZWQgYW5kIHVzaW5nIGEgcmVnZXggd2l0aCBmbGFnIGcsIGBzY29wZWAgaXMgJ2FsbCcuXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBOZXcgc3RyaW5nIHdpdGggb25lIG9yIGFsbCBtYXRjaGVzIHJlcGxhY2VkLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBSZWdleCBzZWFyY2gsIHVzaW5nIG5hbWVkIGJhY2tyZWZlcmVuY2VzIGluIHJlcGxhY2VtZW50IHN0cmluZ1xuICogY29uc3QgbmFtZSA9IFhSZWdFeHAoJyg/PGZpcnN0PlxcXFx3KykgKD88bGFzdD5cXFxcdyspJyk7XG4gKiBYUmVnRXhwLnJlcGxhY2UoJ0pvaG4gU21pdGgnLCBuYW1lLCAnJDxsYXN0PiwgJDxmaXJzdD4nKTtcbiAqIC8vIC0+ICdTbWl0aCwgSm9obidcbiAqXG4gKiAvLyBSZWdleCBzZWFyY2gsIHVzaW5nIG5hbWVkIGJhY2tyZWZlcmVuY2VzIGluIHJlcGxhY2VtZW50IGZ1bmN0aW9uXG4gKiBYUmVnRXhwLnJlcGxhY2UoJ0pvaG4gU21pdGgnLCBuYW1lLCAobWF0Y2gpID0+IGAke21hdGNoLmxhc3R9LCAke21hdGNoLmZpcnN0fWApO1xuICogLy8gLT4gJ1NtaXRoLCBKb2huJ1xuICpcbiAqIC8vIFN0cmluZyBzZWFyY2gsIHdpdGggcmVwbGFjZS1hbGxcbiAqIFhSZWdFeHAucmVwbGFjZSgnUmVnRXhwIGJ1aWxkcyBSZWdFeHBzJywgJ1JlZ0V4cCcsICdYUmVnRXhwJywgJ2FsbCcpO1xuICogLy8gLT4gJ1hSZWdFeHAgYnVpbGRzIFhSZWdFeHBzJ1xuICovXG5YUmVnRXhwLnJlcGxhY2UgPSBmdW5jdGlvbiAoc3RyLCBzZWFyY2gsIHJlcGxhY2VtZW50LCBzY29wZSkge1xuICAgIHZhciBpc1JlZ2V4ID0gWFJlZ0V4cC5pc1JlZ0V4cChzZWFyY2gpO1xuICAgIHZhciBnbG9iYWwgPSBzZWFyY2guZ2xvYmFsICYmIHNjb3BlICE9PSAnb25lJyB8fCBzY29wZSA9PT0gJ2FsbCc7XG4gICAgdmFyIGNhY2hlS2V5ID0gKGdsb2JhbCA/ICdnJyA6ICcnKSArIChzZWFyY2guc3RpY2t5ID8gJ3knIDogJycpIHx8ICdub0dZJztcbiAgICB2YXIgczIgPSBzZWFyY2g7XG5cbiAgICBpZiAoaXNSZWdleCkge1xuICAgICAgICBzZWFyY2hbUkVHRVhfREFUQV0gPSBzZWFyY2hbUkVHRVhfREFUQV0gfHwge307XG5cbiAgICAgICAgLy8gU2hhcmVzIGNhY2hlZCBjb3BpZXMgd2l0aCBgWFJlZ0V4cC5leGVjYC9gbWF0Y2hgLiBTaW5jZSBhIGNvcHkgaXMgdXNlZCwgYHNlYXJjaGAnc1xuICAgICAgICAvLyBgbGFzdEluZGV4YCBpc24ndCB1cGRhdGVkICpkdXJpbmcqIHJlcGxhY2VtZW50IGl0ZXJhdGlvbnNcbiAgICAgICAgczIgPSBzZWFyY2hbUkVHRVhfREFUQV1bY2FjaGVLZXldIHx8IChzZWFyY2hbUkVHRVhfREFUQV1bY2FjaGVLZXldID0gY29weVJlZ2V4KHNlYXJjaCwge1xuICAgICAgICAgICAgYWRkRzogISFnbG9iYWwsXG4gICAgICAgICAgICByZW1vdmVHOiBzY29wZSA9PT0gJ29uZScsXG4gICAgICAgICAgICBpc0ludGVybmFsT25seTogdHJ1ZVxuICAgICAgICB9KSk7XG4gICAgfSBlbHNlIGlmIChnbG9iYWwpIHtcbiAgICAgICAgczIgPSBuZXcgUmVnRXhwKFhSZWdFeHAuZXNjYXBlKFN0cmluZyhzZWFyY2gpKSwgJ2cnKTtcbiAgICB9XG5cbiAgICAvLyBGaXhlZCBgcmVwbGFjZWAgcmVxdWlyZWQgZm9yIG5hbWVkIGJhY2tyZWZlcmVuY2VzLCBldGMuXG4gICAgdmFyIHJlc3VsdCA9IGZpeGVkLnJlcGxhY2UuY2FsbCh0b09iamVjdChzdHIpLCBzMiwgcmVwbGFjZW1lbnQpO1xuXG4gICAgaWYgKGlzUmVnZXggJiYgc2VhcmNoLmdsb2JhbCkge1xuICAgICAgICAvLyBGaXhlcyBJRSwgU2FmYXJpIGJ1ZyAobGFzdCB0ZXN0ZWQgSUUgOSwgU2FmYXJpIDUuMSlcbiAgICAgICAgc2VhcmNoLmxhc3RJbmRleCA9IDA7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogUGVyZm9ybXMgYmF0Y2ggcHJvY2Vzc2luZyBvZiBzdHJpbmcgcmVwbGFjZW1lbnRzLiBVc2VkIGxpa2UgYFhSZWdFeHAucmVwbGFjZWAsIGJ1dCBhY2NlcHRzIGFuXG4gKiBhcnJheSBvZiByZXBsYWNlbWVudCBkZXRhaWxzLiBMYXRlciByZXBsYWNlbWVudHMgb3BlcmF0ZSBvbiB0aGUgb3V0cHV0IG9mIGVhcmxpZXIgcmVwbGFjZW1lbnRzLlxuICogUmVwbGFjZW1lbnQgZGV0YWlscyBhcmUgYWNjZXB0ZWQgYXMgYW4gYXJyYXkgd2l0aCBhIHJlZ2V4IG9yIHN0cmluZyB0byBzZWFyY2ggZm9yLCB0aGVcbiAqIHJlcGxhY2VtZW50IHN0cmluZyBvciBmdW5jdGlvbiwgYW5kIGFuIG9wdGlvbmFsIHNjb3BlIG9mICdvbmUnIG9yICdhbGwnLiBVc2VzIHRoZSBYUmVnRXhwXG4gKiByZXBsYWNlbWVudCB0ZXh0IHN5bnRheCwgd2hpY2ggc3VwcG9ydHMgbmFtZWQgYmFja3JlZmVyZW5jZSBwcm9wZXJ0aWVzIHZpYSBgJHtuYW1lfWAgb3JcbiAqIGAkPG5hbWU+YC5cbiAqXG4gKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBTdHJpbmcgdG8gc2VhcmNoLlxuICogQHBhcmFtIHtBcnJheX0gcmVwbGFjZW1lbnRzIEFycmF5IG9mIHJlcGxhY2VtZW50IGRldGFpbCBhcnJheXMuXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBOZXcgc3RyaW5nIHdpdGggYWxsIHJlcGxhY2VtZW50cy5cbiAqIEBleGFtcGxlXG4gKlxuICogc3RyID0gWFJlZ0V4cC5yZXBsYWNlRWFjaChzdHIsIFtcbiAqICAgW1hSZWdFeHAoJyg/PG5hbWU+YSknKSwgJ3oke25hbWV9J10sXG4gKiAgIFsvYi9naSwgJ3knXSxcbiAqICAgWy9jL2csICd4JywgJ29uZSddLCAvLyBzY29wZSAnb25lJyBvdmVycmlkZXMgL2dcbiAqICAgWy9kLywgJ3cnLCAnYWxsJ10sICAvLyBzY29wZSAnYWxsJyBvdmVycmlkZXMgbGFjayBvZiAvZ1xuICogICBbJ2UnLCAndicsICdhbGwnXSwgIC8vIHNjb3BlICdhbGwnIGFsbG93cyByZXBsYWNlLWFsbCBmb3Igc3RyaW5nc1xuICogICBbL2YvZywgKCQwKSA9PiAkMC50b1VwcGVyQ2FzZSgpXVxuICogXSk7XG4gKi9cblhSZWdFeHAucmVwbGFjZUVhY2ggPSBmdW5jdGlvbiAoc3RyLCByZXBsYWNlbWVudHMpIHtcbiAgICB2YXIgaSA9IHZvaWQgMDtcbiAgICB2YXIgciA9IHZvaWQgMDtcblxuICAgIGZvciAoaSA9IDA7IGkgPCByZXBsYWNlbWVudHMubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgciA9IHJlcGxhY2VtZW50c1tpXTtcbiAgICAgICAgc3RyID0gWFJlZ0V4cC5yZXBsYWNlKHN0ciwgclswXSwgclsxXSwgclsyXSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHN0cjtcbn07XG5cbi8qKlxuICogU3BsaXRzIGEgc3RyaW5nIGludG8gYW4gYXJyYXkgb2Ygc3RyaW5ncyB1c2luZyBhIHJlZ2V4IG9yIHN0cmluZyBzZXBhcmF0b3IuIE1hdGNoZXMgb2YgdGhlXG4gKiBzZXBhcmF0b3IgYXJlIG5vdCBpbmNsdWRlZCBpbiB0aGUgcmVzdWx0IGFycmF5LiBIb3dldmVyLCBpZiBgc2VwYXJhdG9yYCBpcyBhIHJlZ2V4IHRoYXQgY29udGFpbnNcbiAqIGNhcHR1cmluZyBncm91cHMsIGJhY2tyZWZlcmVuY2VzIGFyZSBzcGxpY2VkIGludG8gdGhlIHJlc3VsdCBlYWNoIHRpbWUgYHNlcGFyYXRvcmAgaXMgbWF0Y2hlZC5cbiAqIEZpeGVzIGJyb3dzZXIgYnVncyBjb21wYXJlZCB0byB0aGUgbmF0aXZlIGBTdHJpbmcucHJvdG90eXBlLnNwbGl0YCBhbmQgY2FuIGJlIHVzZWQgcmVsaWFibHlcbiAqIGNyb3NzLWJyb3dzZXIuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIHNwbGl0LlxuICogQHBhcmFtIHtSZWdFeHB8U3RyaW5nfSBzZXBhcmF0b3IgUmVnZXggb3Igc3RyaW5nIHRvIHVzZSBmb3Igc2VwYXJhdGluZyB0aGUgc3RyaW5nLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtsaW1pdF0gTWF4aW11bSBudW1iZXIgb2YgaXRlbXMgdG8gaW5jbHVkZSBpbiB0aGUgcmVzdWx0IGFycmF5LlxuICogQHJldHVybnMge0FycmF5fSBBcnJheSBvZiBzdWJzdHJpbmdzLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBCYXNpYyB1c2VcbiAqIFhSZWdFeHAuc3BsaXQoJ2EgYiBjJywgJyAnKTtcbiAqIC8vIC0+IFsnYScsICdiJywgJ2MnXVxuICpcbiAqIC8vIFdpdGggbGltaXRcbiAqIFhSZWdFeHAuc3BsaXQoJ2EgYiBjJywgJyAnLCAyKTtcbiAqIC8vIC0+IFsnYScsICdiJ11cbiAqXG4gKiAvLyBCYWNrcmVmZXJlbmNlcyBpbiByZXN1bHQgYXJyYXlcbiAqIFhSZWdFeHAuc3BsaXQoJy4ud29yZDEuLicsIC8oW2Etel0rKShcXGQrKS9pKTtcbiAqIC8vIC0+IFsnLi4nLCAnd29yZCcsICcxJywgJy4uJ11cbiAqL1xuWFJlZ0V4cC5zcGxpdCA9IGZ1bmN0aW9uIChzdHIsIHNlcGFyYXRvciwgbGltaXQpIHtcbiAgICByZXR1cm4gZml4ZWQuc3BsaXQuY2FsbCh0b09iamVjdChzdHIpLCBzZXBhcmF0b3IsIGxpbWl0KTtcbn07XG5cbi8qKlxuICogRXhlY3V0ZXMgYSByZWdleCBzZWFyY2ggaW4gYSBzcGVjaWZpZWQgc3RyaW5nLiBSZXR1cm5zIGB0cnVlYCBvciBgZmFsc2VgLiBPcHRpb25hbCBgcG9zYCBhbmRcbiAqIGBzdGlja3lgIGFyZ3VtZW50cyBzcGVjaWZ5IHRoZSBzZWFyY2ggc3RhcnQgcG9zaXRpb24sIGFuZCB3aGV0aGVyIHRoZSBtYXRjaCBtdXN0IHN0YXJ0IGF0IHRoZVxuICogc3BlY2lmaWVkIHBvc2l0aW9uIG9ubHkuIFRoZSBgbGFzdEluZGV4YCBwcm9wZXJ0eSBvZiB0aGUgcHJvdmlkZWQgcmVnZXggaXMgbm90IHVzZWQsIGJ1dCBpc1xuICogdXBkYXRlZCBmb3IgY29tcGF0aWJpbGl0eS4gQWxzbyBmaXhlcyBicm93c2VyIGJ1Z3MgY29tcGFyZWQgdG8gdGhlIG5hdGl2ZVxuICogYFJlZ0V4cC5wcm90b3R5cGUudGVzdGAgYW5kIGNhbiBiZSB1c2VkIHJlbGlhYmx5IGNyb3NzLWJyb3dzZXIuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIHNlYXJjaC5cbiAqIEBwYXJhbSB7UmVnRXhwfSByZWdleCBSZWdleCB0byBzZWFyY2ggd2l0aC5cbiAqIEBwYXJhbSB7TnVtYmVyfSBbcG9zPTBdIFplcm8tYmFzZWQgaW5kZXggYXQgd2hpY2ggdG8gc3RhcnQgdGhlIHNlYXJjaC5cbiAqIEBwYXJhbSB7Qm9vbGVhbnxTdHJpbmd9IFtzdGlja3k9ZmFsc2VdIFdoZXRoZXIgdGhlIG1hdGNoIG11c3Qgc3RhcnQgYXQgdGhlIHNwZWNpZmllZCBwb3NpdGlvblxuICogICBvbmx5LiBUaGUgc3RyaW5nIGAnc3RpY2t5J2AgaXMgYWNjZXB0ZWQgYXMgYW4gYWx0ZXJuYXRpdmUgdG8gYHRydWVgLlxuICogQHJldHVybnMge0Jvb2xlYW59IFdoZXRoZXIgdGhlIHJlZ2V4IG1hdGNoZWQgdGhlIHByb3ZpZGVkIHZhbHVlLlxuICogQGV4YW1wbGVcbiAqXG4gKiAvLyBCYXNpYyB1c2VcbiAqIFhSZWdFeHAudGVzdCgnYWJjJywgL2MvKTsgLy8gLT4gdHJ1ZVxuICpcbiAqIC8vIFdpdGggcG9zIGFuZCBzdGlja3lcbiAqIFhSZWdFeHAudGVzdCgnYWJjJywgL2MvLCAwLCAnc3RpY2t5Jyk7IC8vIC0+IGZhbHNlXG4gKiBYUmVnRXhwLnRlc3QoJ2FiYycsIC9jLywgMiwgJ3N0aWNreScpOyAvLyAtPiB0cnVlXG4gKi9cbi8vIERvIHRoaXMgdGhlIGVhc3kgd2F5IDotKVxuWFJlZ0V4cC50ZXN0ID0gZnVuY3Rpb24gKHN0ciwgcmVnZXgsIHBvcywgc3RpY2t5KSB7XG4gICAgcmV0dXJuICEhWFJlZ0V4cC5leGVjKHN0ciwgcmVnZXgsIHBvcywgc3RpY2t5KTtcbn07XG5cbi8qKlxuICogVW5pbnN0YWxscyBvcHRpb25hbCBmZWF0dXJlcyBhY2NvcmRpbmcgdG8gdGhlIHNwZWNpZmllZCBvcHRpb25zLiBBbGwgb3B0aW9uYWwgZmVhdHVyZXMgc3RhcnQgb3V0XG4gKiB1bmluc3RhbGxlZCwgc28gdGhpcyBpcyB1c2VkIHRvIHVuZG8gdGhlIGFjdGlvbnMgb2YgYFhSZWdFeHAuaW5zdGFsbGAuXG4gKlxuICogQG1lbWJlck9mIFhSZWdFeHBcbiAqIEBwYXJhbSB7T2JqZWN0fFN0cmluZ30gb3B0aW9ucyBPcHRpb25zIG9iamVjdCBvciBzdHJpbmcuXG4gKiBAZXhhbXBsZVxuICpcbiAqIC8vIFdpdGggYW4gb3B0aW9ucyBvYmplY3RcbiAqIFhSZWdFeHAudW5pbnN0YWxsKHtcbiAqICAgLy8gRGlzYWJsZXMgc3VwcG9ydCBmb3IgYXN0cmFsIGNvZGUgcG9pbnRzIGluIFVuaWNvZGUgYWRkb25zXG4gKiAgIGFzdHJhbDogdHJ1ZVxuICogfSk7XG4gKlxuICogLy8gV2l0aCBhbiBvcHRpb25zIHN0cmluZ1xuICogWFJlZ0V4cC51bmluc3RhbGwoJ2FzdHJhbCcpO1xuICovXG5YUmVnRXhwLnVuaW5zdGFsbCA9IGZ1bmN0aW9uIChvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHByZXBhcmVPcHRpb25zKG9wdGlvbnMpO1xuXG4gICAgaWYgKGZlYXR1cmVzLmFzdHJhbCAmJiBvcHRpb25zLmFzdHJhbCkge1xuICAgICAgICBzZXRBc3RyYWwoZmFsc2UpO1xuICAgIH1cbn07XG5cbi8qKlxuICogUmV0dXJucyBhbiBYUmVnRXhwIG9iamVjdCB0aGF0IGlzIHRoZSB1bmlvbiBvZiB0aGUgZ2l2ZW4gcGF0dGVybnMuIFBhdHRlcm5zIGNhbiBiZSBwcm92aWRlZCBhc1xuICogcmVnZXggb2JqZWN0cyBvciBzdHJpbmdzLiBNZXRhY2hhcmFjdGVycyBhcmUgZXNjYXBlZCBpbiBwYXR0ZXJucyBwcm92aWRlZCBhcyBzdHJpbmdzLlxuICogQmFja3JlZmVyZW5jZXMgaW4gcHJvdmlkZWQgcmVnZXggb2JqZWN0cyBhcmUgYXV0b21hdGljYWxseSByZW51bWJlcmVkIHRvIHdvcmsgY29ycmVjdGx5IHdpdGhpblxuICogdGhlIGxhcmdlciBjb21iaW5lZCBwYXR0ZXJuLiBOYXRpdmUgZmxhZ3MgdXNlZCBieSBwcm92aWRlZCByZWdleGVzIGFyZSBpZ25vcmVkIGluIGZhdm9yIG9mIHRoZVxuICogYGZsYWdzYCBhcmd1bWVudC5cbiAqXG4gKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICogQHBhcmFtIHtBcnJheX0gcGF0dGVybnMgUmVnZXhlcyBhbmQgc3RyaW5ncyB0byBjb21iaW5lLlxuICogQHBhcmFtIHtTdHJpbmd9IFtmbGFnc10gQW55IGNvbWJpbmF0aW9uIG9mIFhSZWdFeHAgZmxhZ3MuXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIE9wdGlvbnMgb2JqZWN0IHdpdGggb3B0aW9uYWwgcHJvcGVydGllczpcbiAqICAgLSBgY29uanVuY3Rpb25gIHtTdHJpbmd9IFR5cGUgb2YgY29uanVuY3Rpb24gdG8gdXNlOiAnb3InIChkZWZhdWx0KSBvciAnbm9uZScuXG4gKiBAcmV0dXJucyB7UmVnRXhwfSBVbmlvbiBvZiB0aGUgcHJvdmlkZWQgcmVnZXhlcyBhbmQgc3RyaW5ncy5cbiAqIEBleGFtcGxlXG4gKlxuICogWFJlZ0V4cC51bmlvbihbJ2ErYipjJywgLyhkb2dzKVxcMS8sIC8oY2F0cylcXDEvXSwgJ2knKTtcbiAqIC8vIC0+IC9hXFwrYlxcKmN8KGRvZ3MpXFwxfChjYXRzKVxcMi9pXG4gKlxuICogWFJlZ0V4cC51bmlvbihbL21hbi8sIC9iZWFyLywgL3BpZy9dLCAnaScsIHtjb25qdW5jdGlvbjogJ25vbmUnfSk7XG4gKiAvLyAtPiAvbWFuYmVhcnBpZy9pXG4gKi9cblhSZWdFeHAudW5pb24gPSBmdW5jdGlvbiAocGF0dGVybnMsIGZsYWdzLCBvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgdmFyIGNvbmp1bmN0aW9uID0gb3B0aW9ucy5jb25qdW5jdGlvbiB8fCAnb3InO1xuICAgIHZhciBudW1DYXB0dXJlcyA9IDA7XG4gICAgdmFyIG51bVByaW9yQ2FwdHVyZXMgPSB2b2lkIDA7XG4gICAgdmFyIGNhcHR1cmVOYW1lcyA9IHZvaWQgMDtcblxuICAgIGZ1bmN0aW9uIHJld3JpdGUobWF0Y2gsIHBhcmVuLCBiYWNrcmVmKSB7XG4gICAgICAgIHZhciBuYW1lID0gY2FwdHVyZU5hbWVzW251bUNhcHR1cmVzIC0gbnVtUHJpb3JDYXB0dXJlc107XG5cbiAgICAgICAgLy8gQ2FwdHVyaW5nIGdyb3VwXG4gICAgICAgIGlmIChwYXJlbikge1xuICAgICAgICAgICAgKytudW1DYXB0dXJlcztcbiAgICAgICAgICAgIC8vIElmIHRoZSBjdXJyZW50IGNhcHR1cmUgaGFzIGEgbmFtZSwgcHJlc2VydmUgdGhlIG5hbWVcbiAgICAgICAgICAgIGlmIChuYW1lKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcoPzwnICsgbmFtZSArICc+JztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIEJhY2tyZWZlcmVuY2VcbiAgICAgICAgfSBlbHNlIGlmIChiYWNrcmVmKSB7XG4gICAgICAgICAgICAvLyBSZXdyaXRlIHRoZSBiYWNrcmVmZXJlbmNlXG4gICAgICAgICAgICByZXR1cm4gJ1xcXFwnICsgKCtiYWNrcmVmICsgbnVtUHJpb3JDYXB0dXJlcyk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgfVxuXG4gICAgaWYgKCEoaXNUeXBlKHBhdHRlcm5zLCAnQXJyYXknKSAmJiBwYXR0ZXJucy5sZW5ndGgpKSB7XG4gICAgICAgIHRocm93IG5ldyBUeXBlRXJyb3IoJ011c3QgcHJvdmlkZSBhIG5vbmVtcHR5IGFycmF5IG9mIHBhdHRlcm5zIHRvIG1lcmdlJyk7XG4gICAgfVxuXG4gICAgdmFyIHBhcnRzID0gLyhcXCgpKD8hXFw/KXxcXFxcKFsxLTldXFxkKil8XFxcXFtcXHNcXFNdfFxcWyg/OlteXFxcXFxcXV18XFxcXFtcXHNcXFNdKSpcXF0vZztcbiAgICB2YXIgb3V0cHV0ID0gW107XG4gICAgdmFyIHBhdHRlcm4gPSB2b2lkIDA7XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwYXR0ZXJucy5sZW5ndGg7ICsraSkge1xuICAgICAgICBwYXR0ZXJuID0gcGF0dGVybnNbaV07XG5cbiAgICAgICAgaWYgKFhSZWdFeHAuaXNSZWdFeHAocGF0dGVybikpIHtcbiAgICAgICAgICAgIG51bVByaW9yQ2FwdHVyZXMgPSBudW1DYXB0dXJlcztcbiAgICAgICAgICAgIGNhcHR1cmVOYW1lcyA9IHBhdHRlcm5bUkVHRVhfREFUQV0gJiYgcGF0dGVybltSRUdFWF9EQVRBXS5jYXB0dXJlTmFtZXMgfHwgW107XG5cbiAgICAgICAgICAgIC8vIFJld3JpdGUgYmFja3JlZmVyZW5jZXMuIFBhc3NpbmcgdG8gWFJlZ0V4cCBkaWVzIG9uIG9jdGFscyBhbmQgZW5zdXJlcyBwYXR0ZXJucyBhcmVcbiAgICAgICAgICAgIC8vIGluZGVwZW5kZW50bHkgdmFsaWQ7IGhlbHBzIGtlZXAgdGhpcyBzaW1wbGUuIE5hbWVkIGNhcHR1cmVzIGFyZSBwdXQgYmFja1xuICAgICAgICAgICAgb3V0cHV0LnB1c2gobmF0aXYucmVwbGFjZS5jYWxsKFhSZWdFeHAocGF0dGVybi5zb3VyY2UpLnNvdXJjZSwgcGFydHMsIHJld3JpdGUpKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIG91dHB1dC5wdXNoKFhSZWdFeHAuZXNjYXBlKHBhdHRlcm4pKTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHZhciBzZXBhcmF0b3IgPSBjb25qdW5jdGlvbiA9PT0gJ25vbmUnID8gJycgOiAnfCc7XG4gICAgcmV0dXJuIFhSZWdFeHAob3V0cHV0LmpvaW4oc2VwYXJhdG9yKSwgZmxhZ3MpO1xufTtcblxuLy8gPT0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLT09XG4vLyBGaXhlZC9leHRlbmRlZCBuYXRpdmUgbWV0aG9kc1xuLy8gPT0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLT09XG5cbi8qKlxuICogQWRkcyBuYW1lZCBjYXB0dXJlIHN1cHBvcnQgKHdpdGggYmFja3JlZmVyZW5jZXMgcmV0dXJuZWQgYXMgYHJlc3VsdC5uYW1lYCksIGFuZCBmaXhlcyBicm93c2VyXG4gKiBidWdzIGluIHRoZSBuYXRpdmUgYFJlZ0V4cC5wcm90b3R5cGUuZXhlY2AuIFVzZSB2aWEgYFhSZWdFeHAuZXhlY2AuXG4gKlxuICogQG1lbWJlck9mIFJlZ0V4cFxuICogQHBhcmFtIHtTdHJpbmd9IHN0ciBTdHJpbmcgdG8gc2VhcmNoLlxuICogQHJldHVybnMge0FycmF5fSBNYXRjaCBhcnJheSB3aXRoIG5hbWVkIGJhY2tyZWZlcmVuY2UgcHJvcGVydGllcywgb3IgYG51bGxgLlxuICovXG5maXhlZC5leGVjID0gZnVuY3Rpb24gKHN0cikge1xuICAgIHZhciBvcmlnTGFzdEluZGV4ID0gdGhpcy5sYXN0SW5kZXg7XG4gICAgdmFyIG1hdGNoID0gbmF0aXYuZXhlYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXG4gICAgaWYgKG1hdGNoKSB7XG4gICAgICAgIC8vIEZpeCBicm93c2VycyB3aG9zZSBgZXhlY2AgbWV0aG9kcyBkb24ndCByZXR1cm4gYHVuZGVmaW5lZGAgZm9yIG5vbnBhcnRpY2lwYXRpbmcgY2FwdHVyaW5nXG4gICAgICAgIC8vIGdyb3Vwcy4gVGhpcyBmaXhlcyBJRSA1LjUtOCwgYnV0IG5vdCBJRSA5J3MgcXVpcmtzIG1vZGUgb3IgZW11bGF0aW9uIG9mIG9sZGVyIElFcy4gSUUgOVxuICAgICAgICAvLyBpbiBzdGFuZGFyZHMgbW9kZSBmb2xsb3dzIHRoZSBzcGVjLlxuICAgICAgICBpZiAoIWNvcnJlY3RFeGVjTnBjZyAmJiBtYXRjaC5sZW5ndGggPiAxICYmIG1hdGNoLmluZGV4T2YoJycpICE9PSAtMSkge1xuICAgICAgICAgICAgdmFyIHIyID0gY29weVJlZ2V4KHRoaXMsIHtcbiAgICAgICAgICAgICAgICByZW1vdmVHOiB0cnVlLFxuICAgICAgICAgICAgICAgIGlzSW50ZXJuYWxPbmx5OiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIC8vIFVzaW5nIGBzdHIuc2xpY2UobWF0Y2guaW5kZXgpYCByYXRoZXIgdGhhbiBgbWF0Y2hbMF1gIGluIGNhc2UgbG9va2FoZWFkIGFsbG93ZWRcbiAgICAgICAgICAgIC8vIG1hdGNoaW5nIGR1ZSB0byBjaGFyYWN0ZXJzIG91dHNpZGUgdGhlIG1hdGNoXG4gICAgICAgICAgICBuYXRpdi5yZXBsYWNlLmNhbGwoU3RyaW5nKHN0cikuc2xpY2UobWF0Y2guaW5kZXgpLCByMiwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbiksIF9rZXkgPSAwOyBfa2V5IDwgX2xlbjsgX2tleSsrKSB7XG4gICAgICAgICAgICAgICAgICAgIGFyZ3NbX2tleV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgICAgdmFyIGxlbiA9IGFyZ3MubGVuZ3RoO1xuICAgICAgICAgICAgICAgIC8vIFNraXAgaW5kZXggMCBhbmQgdGhlIGxhc3QgMlxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgbGVuIC0gMjsgKytpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChhcmdzW2ldID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG1hdGNoW2ldID0gdW5kZWZpbmVkO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBdHRhY2ggbmFtZWQgY2FwdHVyZSBwcm9wZXJ0aWVzXG4gICAgICAgIGlmICh0aGlzW1JFR0VYX0RBVEFdICYmIHRoaXNbUkVHRVhfREFUQV0uY2FwdHVyZU5hbWVzKSB7XG4gICAgICAgICAgICAvLyBTa2lwIGluZGV4IDBcbiAgICAgICAgICAgIGZvciAodmFyIGkgPSAxOyBpIDwgbWF0Y2gubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgICAgICB2YXIgbmFtZSA9IHRoaXNbUkVHRVhfREFUQV0uY2FwdHVyZU5hbWVzW2kgLSAxXTtcbiAgICAgICAgICAgICAgICBpZiAobmFtZSkge1xuICAgICAgICAgICAgICAgICAgICBtYXRjaFtuYW1lXSA9IG1hdGNoW2ldO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIEZpeCBicm93c2VycyB0aGF0IGluY3JlbWVudCBgbGFzdEluZGV4YCBhZnRlciB6ZXJvLWxlbmd0aCBtYXRjaGVzXG4gICAgICAgIGlmICh0aGlzLmdsb2JhbCAmJiAhbWF0Y2hbMF0ubGVuZ3RoICYmIHRoaXMubGFzdEluZGV4ID4gbWF0Y2guaW5kZXgpIHtcbiAgICAgICAgICAgIHRoaXMubGFzdEluZGV4ID0gbWF0Y2guaW5kZXg7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAoIXRoaXMuZ2xvYmFsKSB7XG4gICAgICAgIC8vIEZpeGVzIElFLCBPcGVyYSBidWcgKGxhc3QgdGVzdGVkIElFIDksIE9wZXJhIDExLjYpXG4gICAgICAgIHRoaXMubGFzdEluZGV4ID0gb3JpZ0xhc3RJbmRleDtcbiAgICB9XG5cbiAgICByZXR1cm4gbWF0Y2g7XG59O1xuXG4vKipcbiAqIEZpeGVzIGJyb3dzZXIgYnVncyBpbiB0aGUgbmF0aXZlIGBSZWdFeHAucHJvdG90eXBlLnRlc3RgLlxuICpcbiAqIEBtZW1iZXJPZiBSZWdFeHBcbiAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIHNlYXJjaC5cbiAqIEByZXR1cm5zIHtCb29sZWFufSBXaGV0aGVyIHRoZSByZWdleCBtYXRjaGVkIHRoZSBwcm92aWRlZCB2YWx1ZS5cbiAqL1xuZml4ZWQudGVzdCA9IGZ1bmN0aW9uIChzdHIpIHtcbiAgICAvLyBEbyB0aGlzIHRoZSBlYXN5IHdheSA6LSlcbiAgICByZXR1cm4gISFmaXhlZC5leGVjLmNhbGwodGhpcywgc3RyKTtcbn07XG5cbi8qKlxuICogQWRkcyBuYW1lZCBjYXB0dXJlIHN1cHBvcnQgKHdpdGggYmFja3JlZmVyZW5jZXMgcmV0dXJuZWQgYXMgYHJlc3VsdC5uYW1lYCksIGFuZCBmaXhlcyBicm93c2VyXG4gKiBidWdzIGluIHRoZSBuYXRpdmUgYFN0cmluZy5wcm90b3R5cGUubWF0Y2hgLlxuICpcbiAqIEBtZW1iZXJPZiBTdHJpbmdcbiAqIEBwYXJhbSB7UmVnRXhwfCp9IHJlZ2V4IFJlZ2V4IHRvIHNlYXJjaCB3aXRoLiBJZiBub3QgYSByZWdleCBvYmplY3QsIGl0IGlzIHBhc3NlZCB0byBgUmVnRXhwYC5cbiAqIEByZXR1cm5zIHtBcnJheX0gSWYgYHJlZ2V4YCB1c2VzIGZsYWcgZywgYW4gYXJyYXkgb2YgbWF0Y2ggc3RyaW5ncyBvciBgbnVsbGAuIFdpdGhvdXQgZmxhZyBnLFxuICogICB0aGUgcmVzdWx0IG9mIGNhbGxpbmcgYHJlZ2V4LmV4ZWModGhpcylgLlxuICovXG5maXhlZC5tYXRjaCA9IGZ1bmN0aW9uIChyZWdleCkge1xuICAgIGlmICghWFJlZ0V4cC5pc1JlZ0V4cChyZWdleCkpIHtcbiAgICAgICAgLy8gVXNlIHRoZSBuYXRpdmUgYFJlZ0V4cGAgcmF0aGVyIHRoYW4gYFhSZWdFeHBgXG4gICAgICAgIHJlZ2V4ID0gbmV3IFJlZ0V4cChyZWdleCk7XG4gICAgfSBlbHNlIGlmIChyZWdleC5nbG9iYWwpIHtcbiAgICAgICAgdmFyIHJlc3VsdCA9IG5hdGl2Lm1hdGNoLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICAgIC8vIEZpeGVzIElFIGJ1Z1xuICAgICAgICByZWdleC5sYXN0SW5kZXggPSAwO1xuXG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIGZpeGVkLmV4ZWMuY2FsbChyZWdleCwgdG9PYmplY3QodGhpcykpO1xufTtcblxuLyoqXG4gKiBBZGRzIHN1cHBvcnQgZm9yIGAke259YCAob3IgYCQ8bj5gKSB0b2tlbnMgZm9yIG5hbWVkIGFuZCBudW1iZXJlZCBiYWNrcmVmZXJlbmNlcyBpbiByZXBsYWNlbWVudFxuICogdGV4dCwgYW5kIHByb3ZpZGVzIG5hbWVkIGJhY2tyZWZlcmVuY2VzIHRvIHJlcGxhY2VtZW50IGZ1bmN0aW9ucyBhcyBgYXJndW1lbnRzWzBdLm5hbWVgLiBBbHNvXG4gKiBmaXhlcyBicm93c2VyIGJ1Z3MgaW4gcmVwbGFjZW1lbnQgdGV4dCBzeW50YXggd2hlbiBwZXJmb3JtaW5nIGEgcmVwbGFjZW1lbnQgdXNpbmcgYSBub25yZWdleFxuICogc2VhcmNoIHZhbHVlLCBhbmQgdGhlIHZhbHVlIG9mIGEgcmVwbGFjZW1lbnQgcmVnZXgncyBgbGFzdEluZGV4YCBwcm9wZXJ0eSBkdXJpbmcgcmVwbGFjZW1lbnRcbiAqIGl0ZXJhdGlvbnMgYW5kIHVwb24gY29tcGxldGlvbi4gTm90ZSB0aGF0IHRoaXMgZG9lc24ndCBzdXBwb3J0IFNwaWRlck1vbmtleSdzIHByb3ByaWV0YXJ5IHRoaXJkXG4gKiAoYGZsYWdzYCkgYXJndW1lbnQuIFVzZSB2aWEgYFhSZWdFeHAucmVwbGFjZWAuXG4gKlxuICogQG1lbWJlck9mIFN0cmluZ1xuICogQHBhcmFtIHtSZWdFeHB8U3RyaW5nfSBzZWFyY2ggU2VhcmNoIHBhdHRlcm4gdG8gYmUgcmVwbGFjZWQuXG4gKiBAcGFyYW0ge1N0cmluZ3xGdW5jdGlvbn0gcmVwbGFjZW1lbnQgUmVwbGFjZW1lbnQgc3RyaW5nIG9yIGEgZnVuY3Rpb24gaW52b2tlZCB0byBjcmVhdGUgaXQuXG4gKiBAcmV0dXJucyB7U3RyaW5nfSBOZXcgc3RyaW5nIHdpdGggb25lIG9yIGFsbCBtYXRjaGVzIHJlcGxhY2VkLlxuICovXG5maXhlZC5yZXBsYWNlID0gZnVuY3Rpb24gKHNlYXJjaCwgcmVwbGFjZW1lbnQpIHtcbiAgICB2YXIgaXNSZWdleCA9IFhSZWdFeHAuaXNSZWdFeHAoc2VhcmNoKTtcbiAgICB2YXIgb3JpZ0xhc3RJbmRleCA9IHZvaWQgMDtcbiAgICB2YXIgY2FwdHVyZU5hbWVzID0gdm9pZCAwO1xuICAgIHZhciByZXN1bHQgPSB2b2lkIDA7XG5cbiAgICBpZiAoaXNSZWdleCkge1xuICAgICAgICBpZiAoc2VhcmNoW1JFR0VYX0RBVEFdKSB7XG4gICAgICAgICAgICBjYXB0dXJlTmFtZXMgPSBzZWFyY2hbUkVHRVhfREFUQV0uY2FwdHVyZU5hbWVzO1xuICAgICAgICB9XG4gICAgICAgIC8vIE9ubHkgbmVlZGVkIGlmIGBzZWFyY2hgIGlzIG5vbmdsb2JhbFxuICAgICAgICBvcmlnTGFzdEluZGV4ID0gc2VhcmNoLmxhc3RJbmRleDtcbiAgICB9IGVsc2Uge1xuICAgICAgICBzZWFyY2ggKz0gJyc7IC8vIFR5cGUtY29udmVydFxuICAgIH1cblxuICAgIC8vIERvbid0IHVzZSBgdHlwZW9mYDsgc29tZSBvbGRlciBicm93c2VycyByZXR1cm4gJ2Z1bmN0aW9uJyBmb3IgcmVnZXggb2JqZWN0c1xuICAgIGlmIChpc1R5cGUocmVwbGFjZW1lbnQsICdGdW5jdGlvbicpKSB7XG4gICAgICAgIC8vIFN0cmluZ2lmeWluZyBgdGhpc2AgZml4ZXMgYSBidWcgaW4gSUUgPCA5IHdoZXJlIHRoZSBsYXN0IGFyZ3VtZW50IGluIHJlcGxhY2VtZW50XG4gICAgICAgIC8vIGZ1bmN0aW9ucyBpc24ndCB0eXBlLWNvbnZlcnRlZCB0byBhIHN0cmluZ1xuICAgICAgICByZXN1bHQgPSBuYXRpdi5yZXBsYWNlLmNhbGwoU3RyaW5nKHRoaXMpLCBzZWFyY2gsIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGZvciAodmFyIF9sZW4yID0gYXJndW1lbnRzLmxlbmd0aCwgYXJncyA9IEFycmF5KF9sZW4yKSwgX2tleTIgPSAwOyBfa2V5MiA8IF9sZW4yOyBfa2V5MisrKSB7XG4gICAgICAgICAgICAgICAgYXJnc1tfa2V5Ml0gPSBhcmd1bWVudHNbX2tleTJdO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBpZiAoY2FwdHVyZU5hbWVzKSB7XG4gICAgICAgICAgICAgICAgLy8gQ2hhbmdlIHRoZSBgYXJnc1swXWAgc3RyaW5nIHByaW1pdGl2ZSB0byBhIGBTdHJpbmdgIG9iamVjdCB0aGF0IGNhbiBzdG9yZVxuICAgICAgICAgICAgICAgIC8vIHByb3BlcnRpZXMuIFRoaXMgcmVhbGx5IGRvZXMgbmVlZCB0byB1c2UgYFN0cmluZ2AgYXMgYSBjb25zdHJ1Y3RvclxuICAgICAgICAgICAgICAgIGFyZ3NbMF0gPSBuZXcgU3RyaW5nKGFyZ3NbMF0pO1xuICAgICAgICAgICAgICAgIC8vIFN0b3JlIG5hbWVkIGJhY2tyZWZlcmVuY2VzIG9uIHRoZSBmaXJzdCBhcmd1bWVudFxuICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgY2FwdHVyZU5hbWVzLmxlbmd0aDsgKytpKSB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChjYXB0dXJlTmFtZXNbaV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGFyZ3NbMF1bY2FwdHVyZU5hbWVzW2ldXSA9IGFyZ3NbaSArIDFdO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gVXBkYXRlIGBsYXN0SW5kZXhgIGJlZm9yZSBjYWxsaW5nIGByZXBsYWNlbWVudGAuIEZpeGVzIElFLCBDaHJvbWUsIEZpcmVmb3gsIFNhZmFyaVxuICAgICAgICAgICAgLy8gYnVnIChsYXN0IHRlc3RlZCBJRSA5LCBDaHJvbWUgMTcsIEZpcmVmb3ggMTEsIFNhZmFyaSA1LjEpXG4gICAgICAgICAgICBpZiAoaXNSZWdleCAmJiBzZWFyY2guZ2xvYmFsKSB7XG4gICAgICAgICAgICAgICAgc2VhcmNoLmxhc3RJbmRleCA9IGFyZ3NbYXJncy5sZW5ndGggLSAyXSArIGFyZ3NbMF0ubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gRVM2IHNwZWNzIHRoZSBjb250ZXh0IGZvciByZXBsYWNlbWVudCBmdW5jdGlvbnMgYXMgYHVuZGVmaW5lZGBcbiAgICAgICAgICAgIHJldHVybiByZXBsYWNlbWVudC5hcHBseSh1bmRlZmluZWQsIGFyZ3MpO1xuICAgICAgICB9KTtcbiAgICB9IGVsc2Uge1xuICAgICAgICAvLyBFbnN1cmUgdGhhdCB0aGUgbGFzdCB2YWx1ZSBvZiBgYXJnc2Agd2lsbCBiZSBhIHN0cmluZyB3aGVuIGdpdmVuIG5vbnN0cmluZyBgdGhpc2AsXG4gICAgICAgIC8vIHdoaWxlIHN0aWxsIHRocm93aW5nIG9uIG51bGwgb3IgdW5kZWZpbmVkIGNvbnRleHRcbiAgICAgICAgcmVzdWx0ID0gbmF0aXYucmVwbGFjZS5jYWxsKHRoaXMgPT0gbnVsbCA/IHRoaXMgOiBTdHJpbmcodGhpcyksIHNlYXJjaCwgZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgZm9yICh2YXIgX2xlbjMgPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gQXJyYXkoX2xlbjMpLCBfa2V5MyA9IDA7IF9rZXkzIDwgX2xlbjM7IF9rZXkzKyspIHtcbiAgICAgICAgICAgICAgICBhcmdzW19rZXkzXSA9IGFyZ3VtZW50c1tfa2V5M107XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBuYXRpdi5yZXBsYWNlLmNhbGwoU3RyaW5nKHJlcGxhY2VtZW50KSwgcmVwbGFjZW1lbnRUb2tlbiwgcmVwbGFjZXIpO1xuXG4gICAgICAgICAgICBmdW5jdGlvbiByZXBsYWNlcigkMCwgYnJhY2tldGVkLCBhbmdsZWQsIGRvbGxhclRva2VuKSB7XG4gICAgICAgICAgICAgICAgYnJhY2tldGVkID0gYnJhY2tldGVkIHx8IGFuZ2xlZDtcbiAgICAgICAgICAgICAgICAvLyBOYW1lZCBvciBudW1iZXJlZCBiYWNrcmVmZXJlbmNlIHdpdGggY3VybHkgb3IgYW5nbGVkIGJyYWNlc1xuICAgICAgICAgICAgICAgIGlmIChicmFja2V0ZWQpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gWFJlZ0V4cCBiZWhhdmlvciBmb3IgYCR7bn1gIG9yIGAkPG4+YDpcbiAgICAgICAgICAgICAgICAgICAgLy8gMS4gQmFja3JlZmVyZW5jZSB0byBudW1iZXJlZCBjYXB0dXJlLCBpZiBgbmAgaXMgYW4gaW50ZWdlci4gVXNlIGAwYCBmb3IgdGhlXG4gICAgICAgICAgICAgICAgICAgIC8vICAgIGVudGlyZSBtYXRjaC4gQW55IG51bWJlciBvZiBsZWFkaW5nIHplcm9zIG1heSBiZSB1c2VkLlxuICAgICAgICAgICAgICAgICAgICAvLyAyLiBCYWNrcmVmZXJlbmNlIHRvIG5hbWVkIGNhcHR1cmUgYG5gLCBpZiBpdCBleGlzdHMgYW5kIGlzIG5vdCBhbiBpbnRlZ2VyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgIG92ZXJyaWRkZW4gYnkgbnVtYmVyZWQgY2FwdHVyZS4gSW4gcHJhY3RpY2UsIHRoaXMgZG9lcyBub3Qgb3ZlcmxhcCB3aXRoXG4gICAgICAgICAgICAgICAgICAgIC8vICAgIG51bWJlcmVkIGNhcHR1cmUgc2luY2UgWFJlZ0V4cCBkb2VzIG5vdCBhbGxvdyBuYW1lZCBjYXB0dXJlIHRvIHVzZSBhIGJhcmVcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgaW50ZWdlciBhcyB0aGUgbmFtZS5cbiAgICAgICAgICAgICAgICAgICAgLy8gMy4gSWYgdGhlIG5hbWUgb3IgbnVtYmVyIGRvZXMgbm90IHJlZmVyIHRvIGFuIGV4aXN0aW5nIGNhcHR1cmluZyBncm91cCwgaXQnc1xuICAgICAgICAgICAgICAgICAgICAvLyAgICBhbiBlcnJvci5cbiAgICAgICAgICAgICAgICAgICAgdmFyIG4gPSArYnJhY2tldGVkOyAvLyBUeXBlLWNvbnZlcnQ7IGRyb3AgbGVhZGluZyB6ZXJvc1xuICAgICAgICAgICAgICAgICAgICBpZiAobiA8PSBhcmdzLmxlbmd0aCAtIDMpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBhcmdzW25dIHx8ICcnO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIC8vIEdyb3VwcyB3aXRoIHRoZSBzYW1lIG5hbWUgaXMgYW4gZXJyb3IsIGVsc2Ugd291bGQgbmVlZCBgbGFzdEluZGV4T2ZgXG4gICAgICAgICAgICAgICAgICAgIG4gPSBjYXB0dXJlTmFtZXMgPyBjYXB0dXJlTmFtZXMuaW5kZXhPZihicmFja2V0ZWQpIDogLTE7XG4gICAgICAgICAgICAgICAgICAgIGlmIChuIDwgMCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdCYWNrcmVmZXJlbmNlIHRvIHVuZGVmaW5lZCBncm91cCAnICsgJDApO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBhcmdzW24gKyAxXSB8fCAnJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gRWxzZSwgc3BlY2lhbCB2YXJpYWJsZSBvciBudW1iZXJlZCBiYWNrcmVmZXJlbmNlIHdpdGhvdXQgY3VybHkgYnJhY2VzXG4gICAgICAgICAgICAgICAgaWYgKGRvbGxhclRva2VuID09PSAnJCcpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gJCRcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuICckJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRvbGxhclRva2VuID09PSAnJicgfHwgK2RvbGxhclRva2VuID09PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICQmLCAkMCAobm90IGZvbGxvd2VkIGJ5IDEtOSksICQwMFxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXJnc1swXTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGRvbGxhclRva2VuID09PSAnYCcpIHtcbiAgICAgICAgICAgICAgICAgICAgLy8gJGAgKGxlZnQgY29udGV4dClcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFyZ3NbYXJncy5sZW5ndGggLSAxXS5zbGljZSgwLCBhcmdzW2FyZ3MubGVuZ3RoIC0gMl0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBpZiAoZG9sbGFyVG9rZW4gPT09IFwiJ1wiKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vICQnIChyaWdodCBjb250ZXh0KVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gYXJnc1thcmdzLmxlbmd0aCAtIDFdLnNsaWNlKGFyZ3NbYXJncy5sZW5ndGggLSAyXSArIGFyZ3NbMF0ubGVuZ3RoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gRWxzZSwgbnVtYmVyZWQgYmFja3JlZmVyZW5jZSB3aXRob3V0IGJyYWNlc1xuICAgICAgICAgICAgICAgIGRvbGxhclRva2VuID0gK2RvbGxhclRva2VuOyAvLyBUeXBlLWNvbnZlcnQ7IGRyb3AgbGVhZGluZyB6ZXJvXG4gICAgICAgICAgICAgICAgLy8gWFJlZ0V4cCBiZWhhdmlvciBmb3IgYCRuYCBhbmQgYCRubmA6XG4gICAgICAgICAgICAgICAgLy8gLSBCYWNrcmVmcyBlbmQgYWZ0ZXIgMSBvciAyIGRpZ2l0cy4gVXNlIGAkey4ufWAgb3IgYCQ8Li4+YCBmb3IgbW9yZSBkaWdpdHMuXG4gICAgICAgICAgICAgICAgLy8gLSBgJDFgIGlzIGFuIGVycm9yIGlmIG5vIGNhcHR1cmluZyBncm91cHMuXG4gICAgICAgICAgICAgICAgLy8gLSBgJDEwYCBpcyBhbiBlcnJvciBpZiBsZXNzIHRoYW4gMTAgY2FwdHVyaW5nIGdyb3Vwcy4gVXNlIGAkezF9MGAgb3IgYCQ8MT4wYFxuICAgICAgICAgICAgICAgIC8vICAgaW5zdGVhZC5cbiAgICAgICAgICAgICAgICAvLyAtIGAkMDFgIGlzIGAkMWAgaWYgYXQgbGVhc3Qgb25lIGNhcHR1cmluZyBncm91cCwgZWxzZSBpdCdzIGFuIGVycm9yLlxuICAgICAgICAgICAgICAgIC8vIC0gYCQwYCAobm90IGZvbGxvd2VkIGJ5IDEtOSkgYW5kIGAkMDBgIGFyZSB0aGUgZW50aXJlIG1hdGNoLlxuICAgICAgICAgICAgICAgIC8vIE5hdGl2ZSBiZWhhdmlvciwgZm9yIGNvbXBhcmlzb246XG4gICAgICAgICAgICAgICAgLy8gLSBCYWNrcmVmcyBlbmQgYWZ0ZXIgMSBvciAyIGRpZ2l0cy4gQ2Fubm90IHJlZmVyZW5jZSBjYXB0dXJpbmcgZ3JvdXAgMTAwKy5cbiAgICAgICAgICAgICAgICAvLyAtIGAkMWAgaXMgYSBsaXRlcmFsIGAkMWAgaWYgbm8gY2FwdHVyaW5nIGdyb3Vwcy5cbiAgICAgICAgICAgICAgICAvLyAtIGAkMTBgIGlzIGAkMWAgZm9sbG93ZWQgYnkgYSBsaXRlcmFsIGAwYCBpZiBsZXNzIHRoYW4gMTAgY2FwdHVyaW5nIGdyb3Vwcy5cbiAgICAgICAgICAgICAgICAvLyAtIGAkMDFgIGlzIGAkMWAgaWYgYXQgbGVhc3Qgb25lIGNhcHR1cmluZyBncm91cCwgZWxzZSBpdCdzIGEgbGl0ZXJhbCBgJDAxYC5cbiAgICAgICAgICAgICAgICAvLyAtIGAkMGAgaXMgYSBsaXRlcmFsIGAkMGAuXG4gICAgICAgICAgICAgICAgaWYgKCFpc05hTihkb2xsYXJUb2tlbikpIHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRvbGxhclRva2VuID4gYXJncy5sZW5ndGggLSAzKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ0JhY2tyZWZlcmVuY2UgdG8gdW5kZWZpbmVkIGdyb3VwICcgKyAkMCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGFyZ3NbZG9sbGFyVG9rZW5dIHx8ICcnO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBgJGAgZm9sbG93ZWQgYnkgYW4gdW5zdXBwb3J0ZWQgY2hhciBpcyBhbiBlcnJvciwgdW5saWtlIG5hdGl2ZSBKU1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcignSW52YWxpZCB0b2tlbiAnICsgJDApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoaXNSZWdleCkge1xuICAgICAgICBpZiAoc2VhcmNoLmdsb2JhbCkge1xuICAgICAgICAgICAgLy8gRml4ZXMgSUUsIFNhZmFyaSBidWcgKGxhc3QgdGVzdGVkIElFIDksIFNhZmFyaSA1LjEpXG4gICAgICAgICAgICBzZWFyY2gubGFzdEluZGV4ID0gMDtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIC8vIEZpeGVzIElFLCBPcGVyYSBidWcgKGxhc3QgdGVzdGVkIElFIDksIE9wZXJhIDExLjYpXG4gICAgICAgICAgICBzZWFyY2gubGFzdEluZGV4ID0gb3JpZ0xhc3RJbmRleDtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHJldHVybiByZXN1bHQ7XG59O1xuXG4vKipcbiAqIEZpeGVzIGJyb3dzZXIgYnVncyBpbiB0aGUgbmF0aXZlIGBTdHJpbmcucHJvdG90eXBlLnNwbGl0YC4gVXNlIHZpYSBgWFJlZ0V4cC5zcGxpdGAuXG4gKlxuICogQG1lbWJlck9mIFN0cmluZ1xuICogQHBhcmFtIHtSZWdFeHB8U3RyaW5nfSBzZXBhcmF0b3IgUmVnZXggb3Igc3RyaW5nIHRvIHVzZSBmb3Igc2VwYXJhdGluZyB0aGUgc3RyaW5nLlxuICogQHBhcmFtIHtOdW1iZXJ9IFtsaW1pdF0gTWF4aW11bSBudW1iZXIgb2YgaXRlbXMgdG8gaW5jbHVkZSBpbiB0aGUgcmVzdWx0IGFycmF5LlxuICogQHJldHVybnMge0FycmF5fSBBcnJheSBvZiBzdWJzdHJpbmdzLlxuICovXG5maXhlZC5zcGxpdCA9IGZ1bmN0aW9uIChzZXBhcmF0b3IsIGxpbWl0KSB7XG4gICAgaWYgKCFYUmVnRXhwLmlzUmVnRXhwKHNlcGFyYXRvcikpIHtcbiAgICAgICAgLy8gQnJvd3NlcnMgaGFuZGxlIG5vbnJlZ2V4IHNwbGl0IGNvcnJlY3RseSwgc28gdXNlIHRoZSBmYXN0ZXIgbmF0aXZlIG1ldGhvZFxuICAgICAgICByZXR1cm4gbmF0aXYuc3BsaXQuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICB9XG5cbiAgICB2YXIgc3RyID0gU3RyaW5nKHRoaXMpO1xuICAgIHZhciBvdXRwdXQgPSBbXTtcbiAgICB2YXIgb3JpZ0xhc3RJbmRleCA9IHNlcGFyYXRvci5sYXN0SW5kZXg7XG4gICAgdmFyIGxhc3RMYXN0SW5kZXggPSAwO1xuICAgIHZhciBsYXN0TGVuZ3RoID0gdm9pZCAwO1xuXG4gICAgLy8gVmFsdWVzIGZvciBgbGltaXRgLCBwZXIgdGhlIHNwZWM6XG4gICAgLy8gSWYgdW5kZWZpbmVkOiBwb3coMiwzMikgLSAxXG4gICAgLy8gSWYgMCwgSW5maW5pdHksIG9yIE5hTjogMFxuICAgIC8vIElmIHBvc2l0aXZlIG51bWJlcjogbGltaXQgPSBmbG9vcihsaW1pdCk7IGlmIChsaW1pdCA+PSBwb3coMiwzMikpIGxpbWl0IC09IHBvdygyLDMyKTtcbiAgICAvLyBJZiBuZWdhdGl2ZSBudW1iZXI6IHBvdygyLDMyKSAtIGZsb29yKGFicyhsaW1pdCkpXG4gICAgLy8gSWYgb3RoZXI6IFR5cGUtY29udmVydCwgdGhlbiB1c2UgdGhlIGFib3ZlIHJ1bGVzXG4gICAgLy8gVGhpcyBsaW5lIGZhaWxzIGluIHZlcnkgc3RyYW5nZSB3YXlzIGZvciBzb21lIHZhbHVlcyBvZiBgbGltaXRgIGluIE9wZXJhIDEwLjUtMTAuNjMsIHVubGVzc1xuICAgIC8vIE9wZXJhIERyYWdvbmZseSBpcyBvcGVuIChnbyBmaWd1cmUpLiBJdCB3b3JrcyBpbiBhdCBsZWFzdCBPcGVyYSA5LjUtMTAuMSBhbmQgMTErXG4gICAgbGltaXQgPSAobGltaXQgPT09IHVuZGVmaW5lZCA/IC0xIDogbGltaXQpID4+PiAwO1xuXG4gICAgWFJlZ0V4cC5mb3JFYWNoKHN0ciwgc2VwYXJhdG9yLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgICAgLy8gVGhpcyBjb25kaXRpb24gaXMgbm90IHRoZSBzYW1lIGFzIGBpZiAobWF0Y2hbMF0ubGVuZ3RoKWBcbiAgICAgICAgaWYgKG1hdGNoLmluZGV4ICsgbWF0Y2hbMF0ubGVuZ3RoID4gbGFzdExhc3RJbmRleCkge1xuICAgICAgICAgICAgb3V0cHV0LnB1c2goc3RyLnNsaWNlKGxhc3RMYXN0SW5kZXgsIG1hdGNoLmluZGV4KSk7XG4gICAgICAgICAgICBpZiAobWF0Y2gubGVuZ3RoID4gMSAmJiBtYXRjaC5pbmRleCA8IHN0ci5sZW5ndGgpIHtcbiAgICAgICAgICAgICAgICBBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShvdXRwdXQsIG1hdGNoLnNsaWNlKDEpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGxhc3RMZW5ndGggPSBtYXRjaFswXS5sZW5ndGg7XG4gICAgICAgICAgICBsYXN0TGFzdEluZGV4ID0gbWF0Y2guaW5kZXggKyBsYXN0TGVuZ3RoO1xuICAgICAgICB9XG4gICAgfSk7XG5cbiAgICBpZiAobGFzdExhc3RJbmRleCA9PT0gc3RyLmxlbmd0aCkge1xuICAgICAgICBpZiAoIW5hdGl2LnRlc3QuY2FsbChzZXBhcmF0b3IsICcnKSB8fCBsYXN0TGVuZ3RoKSB7XG4gICAgICAgICAgICBvdXRwdXQucHVzaCgnJyk7XG4gICAgICAgIH1cbiAgICB9IGVsc2Uge1xuICAgICAgICBvdXRwdXQucHVzaChzdHIuc2xpY2UobGFzdExhc3RJbmRleCkpO1xuICAgIH1cblxuICAgIHNlcGFyYXRvci5sYXN0SW5kZXggPSBvcmlnTGFzdEluZGV4O1xuICAgIHJldHVybiBvdXRwdXQubGVuZ3RoID4gbGltaXQgPyBvdXRwdXQuc2xpY2UoMCwgbGltaXQpIDogb3V0cHV0O1xufTtcblxuLy8gPT0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLT09XG4vLyBCdWlsdC1pbiBzeW50YXgvZmxhZyB0b2tlbnNcbi8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuXG4vKlxuICogTGV0dGVyIGVzY2FwZXMgdGhhdCBuYXRpdmVseSBtYXRjaCBsaXRlcmFsIGNoYXJhY3RlcnM6IGBcXGFgLCBgXFxBYCwgZXRjLiBUaGVzZSBzaG91bGQgYmVcbiAqIFN5bnRheEVycm9ycyBidXQgYXJlIGFsbG93ZWQgaW4gd2ViIHJlYWxpdHkuIFhSZWdFeHAgbWFrZXMgdGhlbSBlcnJvcnMgZm9yIGNyb3NzLWJyb3dzZXJcbiAqIGNvbnNpc3RlbmN5IGFuZCB0byByZXNlcnZlIHRoZWlyIHN5bnRheCwgYnV0IGxldHMgdGhlbSBiZSBzdXBlcnNlZGVkIGJ5IGFkZG9ucy5cbiAqL1xuWFJlZ0V4cC5hZGRUb2tlbigvXFxcXChbQUJDRS1SVFVWWFlaYWVnLW1vcHF5el18Yyg/IVtBLVphLXpdKXx1KD8hW1xcZEEtRmEtZl17NH18e1tcXGRBLUZhLWZdK30pfHgoPyFbXFxkQS1GYS1mXXsyfSkpLywgZnVuY3Rpb24gKG1hdGNoLCBzY29wZSkge1xuICAgIC8vIFxcQiBpcyBhbGxvd2VkIGluIGRlZmF1bHQgc2NvcGUgb25seVxuICAgIGlmIChtYXRjaFsxXSA9PT0gJ0InICYmIHNjb3BlID09PSBkZWZhdWx0U2NvcGUpIHtcbiAgICAgICAgcmV0dXJuIG1hdGNoWzBdO1xuICAgIH1cbiAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ0ludmFsaWQgZXNjYXBlICcgKyBtYXRjaFswXSk7XG59LCB7XG4gICAgc2NvcGU6ICdhbGwnLFxuICAgIGxlYWRDaGFyOiAnXFxcXCdcbn0pO1xuXG4vKlxuICogVW5pY29kZSBjb2RlIHBvaW50IGVzY2FwZSB3aXRoIGN1cmx5IGJyYWNlczogYFxcdXtOLi59YC4gYE4uLmAgaXMgYW55IG9uZSBvciBtb3JlIGRpZ2l0XG4gKiBoZXhhZGVjaW1hbCBudW1iZXIgZnJvbSAwLTEwRkZGRiwgYW5kIGNhbiBpbmNsdWRlIGxlYWRpbmcgemVyb3MuIFJlcXVpcmVzIHRoZSBuYXRpdmUgRVM2IGB1YCBmbGFnXG4gKiB0byBzdXBwb3J0IGNvZGUgcG9pbnRzIGdyZWF0ZXIgdGhhbiBVK0ZGRkYuIEF2b2lkcyBjb252ZXJ0aW5nIGNvZGUgcG9pbnRzIGFib3ZlIFUrRkZGRiB0b1xuICogc3Vycm9nYXRlIHBhaXJzICh3aGljaCBjb3VsZCBiZSBkb25lIHdpdGhvdXQgZmxhZyBgdWApLCBzaW5jZSB0aGF0IGNvdWxkIGxlYWQgdG8gYnJva2VuIGJlaGF2aW9yXG4gKiBpZiB5b3UgZm9sbG93IGEgYFxcdXtOLi59YCB0b2tlbiB0aGF0IHJlZmVyZW5jZXMgYSBjb2RlIHBvaW50IGFib3ZlIFUrRkZGRiB3aXRoIGEgcXVhbnRpZmllciwgb3JcbiAqIGlmIHlvdSB1c2UgdGhlIHNhbWUgaW4gYSBjaGFyYWN0ZXIgY2xhc3MuXG4gKi9cblhSZWdFeHAuYWRkVG9rZW4oL1xcXFx1eyhbXFxkQS1GYS1mXSspfS8sIGZ1bmN0aW9uIChtYXRjaCwgc2NvcGUsIGZsYWdzKSB7XG4gICAgdmFyIGNvZGUgPSBkZWMobWF0Y2hbMV0pO1xuICAgIGlmIChjb2RlID4gMHgxMEZGRkYpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdJbnZhbGlkIFVuaWNvZGUgY29kZSBwb2ludCAnICsgbWF0Y2hbMF0pO1xuICAgIH1cbiAgICBpZiAoY29kZSA8PSAweEZGRkYpIHtcbiAgICAgICAgLy8gQ29udmVydGluZyB0byBcXHVOTk5OIGF2b2lkcyBuZWVkaW5nIHRvIGVzY2FwZSB0aGUgbGl0ZXJhbCBjaGFyYWN0ZXIgYW5kIGtlZXAgaXRcbiAgICAgICAgLy8gc2VwYXJhdGUgZnJvbSBwcmVjZWRpbmcgdG9rZW5zXG4gICAgICAgIHJldHVybiAnXFxcXHUnICsgcGFkNChoZXgoY29kZSkpO1xuICAgIH1cbiAgICAvLyBJZiBgY29kZWAgaXMgYmV0d2VlbiAweEZGRkYgYW5kIDB4MTBGRkZGLCByZXF1aXJlIGFuZCBkZWZlciB0byBuYXRpdmUgaGFuZGxpbmdcbiAgICBpZiAoaGFzTmF0aXZlVSAmJiBmbGFncy5pbmRleE9mKCd1JykgIT09IC0xKSB7XG4gICAgICAgIHJldHVybiBtYXRjaFswXTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdDYW5ub3QgdXNlIFVuaWNvZGUgY29kZSBwb2ludCBhYm92ZSBcXFxcdXtGRkZGfSB3aXRob3V0IGZsYWcgdScpO1xufSwge1xuICAgIHNjb3BlOiAnYWxsJyxcbiAgICBsZWFkQ2hhcjogJ1xcXFwnXG59KTtcblxuLypcbiAqIEVtcHR5IGNoYXJhY3RlciBjbGFzczogYFtdYCBvciBgW15dYC4gVGhpcyBmaXhlcyBhIGNyaXRpY2FsIGNyb3NzLWJyb3dzZXIgc3ludGF4IGluY29uc2lzdGVuY3kuXG4gKiBVbmxlc3MgdGhpcyBpcyBzdGFuZGFyZGl6ZWQgKHBlciB0aGUgRVMgc3BlYyksIHJlZ2V4IHN5bnRheCBjYW4ndCBiZSBhY2N1cmF0ZWx5IHBhcnNlZCBiZWNhdXNlXG4gKiBjaGFyYWN0ZXIgY2xhc3MgZW5kaW5ncyBjYW4ndCBiZSBkZXRlcm1pbmVkLlxuICovXG5YUmVnRXhwLmFkZFRva2VuKC9cXFsoXFxePylcXF0vLFxuLy8gRm9yIGNyb3NzLWJyb3dzZXIgY29tcGF0aWJpbGl0eSB3aXRoIEVTMywgY29udmVydCBbXSB0byBcXGJcXEIgYW5kIFteXSB0byBbXFxzXFxTXS5cbi8vICg/ISkgc2hvdWxkIHdvcmsgbGlrZSBcXGJcXEIsIGJ1dCBpcyB1bnJlbGlhYmxlIGluIHNvbWUgdmVyc2lvbnMgb2YgRmlyZWZveFxuLyogZXNsaW50LWRpc2FibGUgbm8tY29uZnVzaW5nLWFycm93ICovXG5mdW5jdGlvbiAobWF0Y2gpIHtcbiAgICByZXR1cm4gbWF0Y2hbMV0gPyAnW1xcXFxzXFxcXFNdJyA6ICdcXFxcYlxcXFxCJztcbn0sXG4vKiBlc2xpbnQtZW5hYmxlIG5vLWNvbmZ1c2luZy1hcnJvdyAqL1xueyBsZWFkQ2hhcjogJ1snIH0pO1xuXG4vKlxuICogQ29tbWVudCBwYXR0ZXJuOiBgKD8jIClgLiBJbmxpbmUgY29tbWVudHMgYXJlIGFuIGFsdGVybmF0aXZlIHRvIHRoZSBsaW5lIGNvbW1lbnRzIGFsbG93ZWQgaW5cbiAqIGZyZWUtc3BhY2luZyBtb2RlIChmbGFnIHgpLlxuICovXG5YUmVnRXhwLmFkZFRva2VuKC9cXChcXD8jW14pXSpcXCkvLCBnZXRDb250ZXh0dWFsVG9rZW5TZXBhcmF0b3IsIHsgbGVhZENoYXI6ICcoJyB9KTtcblxuLypcbiAqIFdoaXRlc3BhY2UgYW5kIGxpbmUgY29tbWVudHMsIGluIGZyZWUtc3BhY2luZyBtb2RlIChha2EgZXh0ZW5kZWQgbW9kZSwgZmxhZyB4KSBvbmx5LlxuICovXG5YUmVnRXhwLmFkZFRva2VuKC9cXHMrfCNbXlxcbl0qXFxuPy8sIGdldENvbnRleHR1YWxUb2tlblNlcGFyYXRvciwgeyBmbGFnOiAneCcgfSk7XG5cbi8qXG4gKiBEb3QsIGluIGRvdGFsbCBtb2RlIChha2Egc2luZ2xlbGluZSBtb2RlLCBmbGFnIHMpIG9ubHkuXG4gKi9cblhSZWdFeHAuYWRkVG9rZW4oL1xcLi8sIGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gJ1tcXFxcc1xcXFxTXSc7XG59LCB7XG4gICAgZmxhZzogJ3MnLFxuICAgIGxlYWRDaGFyOiAnLidcbn0pO1xuXG4vKlxuICogTmFtZWQgYmFja3JlZmVyZW5jZTogYFxcazxuYW1lPmAuIEJhY2tyZWZlcmVuY2UgbmFtZXMgY2FuIHVzZSB0aGUgY2hhcmFjdGVycyBBLVosIGEteiwgMC05LCBfLFxuICogYW5kICQgb25seS4gQWxzbyBhbGxvd3MgbnVtYmVyZWQgYmFja3JlZmVyZW5jZXMgYXMgYFxcazxuPmAuXG4gKi9cblhSZWdFeHAuYWRkVG9rZW4oL1xcXFxrPChbXFx3JF0rKT4vLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAvLyBHcm91cHMgd2l0aCB0aGUgc2FtZSBuYW1lIGlzIGFuIGVycm9yLCBlbHNlIHdvdWxkIG5lZWQgYGxhc3RJbmRleE9mYFxuICAgIHZhciBpbmRleCA9IGlzTmFOKG1hdGNoWzFdKSA/IHRoaXMuY2FwdHVyZU5hbWVzLmluZGV4T2YobWF0Y2hbMV0pICsgMSA6ICttYXRjaFsxXTtcbiAgICB2YXIgZW5kSW5kZXggPSBtYXRjaC5pbmRleCArIG1hdGNoWzBdLmxlbmd0aDtcbiAgICBpZiAoIWluZGV4IHx8IGluZGV4ID4gdGhpcy5jYXB0dXJlTmFtZXMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcignQmFja3JlZmVyZW5jZSB0byB1bmRlZmluZWQgZ3JvdXAgJyArIG1hdGNoWzBdKTtcbiAgICB9XG4gICAgLy8gS2VlcCBiYWNrcmVmZXJlbmNlcyBzZXBhcmF0ZSBmcm9tIHN1YnNlcXVlbnQgbGl0ZXJhbCBudW1iZXJzLiBUaGlzIGF2b2lkcyBlLmcuXG4gICAgLy8gaW5hZHZlcnRlZGx5IGNoYW5naW5nIGAoPzxuPilcXGs8bj4xYCB0byBgKClcXDExYC5cbiAgICByZXR1cm4gJ1xcXFwnICsgaW5kZXggKyAoZW5kSW5kZXggPT09IG1hdGNoLmlucHV0Lmxlbmd0aCB8fCBpc05hTihtYXRjaC5pbnB1dFtlbmRJbmRleF0pID8gJycgOiAnKD86KScpO1xufSwgeyBsZWFkQ2hhcjogJ1xcXFwnIH0pO1xuXG4vKlxuICogTnVtYmVyZWQgYmFja3JlZmVyZW5jZSBvciBvY3RhbCwgcGx1cyBhbnkgZm9sbG93aW5nIGRpZ2l0czogYFxcMGAsIGBcXDExYCwgZXRjLiBPY3RhbHMgZXhjZXB0IGBcXDBgXG4gKiBub3QgZm9sbG93ZWQgYnkgMC05IGFuZCBiYWNrcmVmZXJlbmNlcyB0byB1bm9wZW5lZCBjYXB0dXJlIGdyb3VwcyB0aHJvdyBhbiBlcnJvci4gT3RoZXIgbWF0Y2hlc1xuICogYXJlIHJldHVybmVkIHVuYWx0ZXJlZC4gSUUgPCA5IGRvZXNuJ3Qgc3VwcG9ydCBiYWNrcmVmZXJlbmNlcyBhYm92ZSBgXFw5OWAgaW4gcmVnZXggc3ludGF4LlxuICovXG5YUmVnRXhwLmFkZFRva2VuKC9cXFxcKFxcZCspLywgZnVuY3Rpb24gKG1hdGNoLCBzY29wZSkge1xuICAgIGlmICghKHNjb3BlID09PSBkZWZhdWx0U2NvcGUgJiYgL15bMS05XS8udGVzdChtYXRjaFsxXSkgJiYgK21hdGNoWzFdIDw9IHRoaXMuY2FwdHVyZU5hbWVzLmxlbmd0aCkgJiYgbWF0Y2hbMV0gIT09ICcwJykge1xuICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ0Nhbm5vdCB1c2Ugb2N0YWwgZXNjYXBlIG9yIGJhY2tyZWZlcmVuY2UgdG8gdW5kZWZpbmVkIGdyb3VwICcgKyBtYXRjaFswXSk7XG4gICAgfVxuICAgIHJldHVybiBtYXRjaFswXTtcbn0sIHtcbiAgICBzY29wZTogJ2FsbCcsXG4gICAgbGVhZENoYXI6ICdcXFxcJ1xufSk7XG5cbi8qXG4gKiBOYW1lZCBjYXB0dXJpbmcgZ3JvdXA7IG1hdGNoIHRoZSBvcGVuaW5nIGRlbGltaXRlciBvbmx5OiBgKD88bmFtZT5gLiBDYXB0dXJlIG5hbWVzIGNhbiB1c2UgdGhlXG4gKiBjaGFyYWN0ZXJzIEEtWiwgYS16LCAwLTksIF8sIGFuZCAkIG9ubHkuIE5hbWVzIGNhbid0IGJlIGludGVnZXJzLiBTdXBwb3J0cyBQeXRob24tc3R5bGVcbiAqIGAoP1A8bmFtZT5gIGFzIGFuIGFsdGVybmF0ZSBzeW50YXggdG8gYXZvaWQgaXNzdWVzIGluIHNvbWUgb2xkZXIgdmVyc2lvbnMgb2YgT3BlcmEgd2hpY2ggbmF0aXZlbHlcbiAqIHN1cHBvcnRlZCB0aGUgUHl0aG9uLXN0eWxlIHN5bnRheC4gT3RoZXJ3aXNlLCBYUmVnRXhwIG1pZ2h0IHRyZWF0IG51bWJlcmVkIGJhY2tyZWZlcmVuY2VzIHRvXG4gKiBQeXRob24tc3R5bGUgbmFtZWQgY2FwdHVyZSBhcyBvY3RhbHMuXG4gKi9cblhSZWdFeHAuYWRkVG9rZW4oL1xcKFxcP1A/PChbXFx3JF0rKT4vLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAvLyBEaXNhbGxvdyBiYXJlIGludGVnZXJzIGFzIG5hbWVzIGJlY2F1c2UgbmFtZWQgYmFja3JlZmVyZW5jZXMgYXJlIGFkZGVkIHRvIG1hdGNoIGFycmF5c1xuICAgIC8vIGFuZCB0aGVyZWZvcmUgbnVtZXJpYyBwcm9wZXJ0aWVzIG1heSBsZWFkIHRvIGluY29ycmVjdCBsb29rdXBzXG4gICAgaWYgKCFpc05hTihtYXRjaFsxXSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKCdDYW5ub3QgdXNlIGludGVnZXIgYXMgY2FwdHVyZSBuYW1lICcgKyBtYXRjaFswXSk7XG4gICAgfVxuICAgIGlmIChtYXRjaFsxXSA9PT0gJ2xlbmd0aCcgfHwgbWF0Y2hbMV0gPT09ICdfX3Byb3RvX18nKSB7XG4gICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcignQ2Fubm90IHVzZSByZXNlcnZlZCB3b3JkIGFzIGNhcHR1cmUgbmFtZSAnICsgbWF0Y2hbMF0pO1xuICAgIH1cbiAgICBpZiAodGhpcy5jYXB0dXJlTmFtZXMuaW5kZXhPZihtYXRjaFsxXSkgIT09IC0xKSB7XG4gICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcignQ2Fubm90IHVzZSBzYW1lIG5hbWUgZm9yIG11bHRpcGxlIGdyb3VwcyAnICsgbWF0Y2hbMF0pO1xuICAgIH1cbiAgICB0aGlzLmNhcHR1cmVOYW1lcy5wdXNoKG1hdGNoWzFdKTtcbiAgICB0aGlzLmhhc05hbWVkQ2FwdHVyZSA9IHRydWU7XG4gICAgcmV0dXJuICcoJztcbn0sIHsgbGVhZENoYXI6ICcoJyB9KTtcblxuLypcbiAqIENhcHR1cmluZyBncm91cDsgbWF0Y2ggdGhlIG9wZW5pbmcgcGFyZW50aGVzaXMgb25seS4gUmVxdWlyZWQgZm9yIHN1cHBvcnQgb2YgbmFtZWQgY2FwdHVyaW5nXG4gKiBncm91cHMuIEFsc28gYWRkcyBleHBsaWNpdCBjYXB0dXJlIG1vZGUgKGZsYWcgbikuXG4gKi9cblhSZWdFeHAuYWRkVG9rZW4oL1xcKCg/IVxcPykvLCBmdW5jdGlvbiAobWF0Y2gsIHNjb3BlLCBmbGFncykge1xuICAgIGlmIChmbGFncy5pbmRleE9mKCduJykgIT09IC0xKSB7XG4gICAgICAgIHJldHVybiAnKD86JztcbiAgICB9XG4gICAgdGhpcy5jYXB0dXJlTmFtZXMucHVzaChudWxsKTtcbiAgICByZXR1cm4gJygnO1xufSwge1xuICAgIG9wdGlvbmFsRmxhZ3M6ICduJyxcbiAgICBsZWFkQ2hhcjogJygnXG59KTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gWFJlZ0V4cDtcbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG4vKiFcbiAqIFhSZWdFeHAuYnVpbGQgNC4wLjBcbiAqIDx4cmVnZXhwLmNvbT5cbiAqIFN0ZXZlbiBMZXZpdGhhbiAoYykgMjAxMi0yMDE3IE1JVCBMaWNlbnNlXG4gKi9cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKFhSZWdFeHApIHtcbiAgICB2YXIgUkVHRVhfREFUQSA9ICd4cmVnZXhwJztcbiAgICB2YXIgc3ViUGFydHMgPSAvKFxcKCkoPyFcXD8pfFxcXFwoWzEtOV1cXGQqKXxcXFxcW1xcc1xcU118XFxbKD86W15cXFxcXFxdXXxcXFxcW1xcc1xcU10pKlxcXS9nO1xuICAgIHZhciBwYXJ0cyA9IFhSZWdFeHAudW5pb24oWy9cXCh7eyhbXFx3JF0rKX19XFwpfHt7KFtcXHckXSspfX0vLCBzdWJQYXJ0c10sICdnJywge1xuICAgICAgICBjb25qdW5jdGlvbjogJ29yJ1xuICAgIH0pO1xuXG4gICAgLyoqXG4gICAgICogU3RyaXBzIGEgbGVhZGluZyBgXmAgYW5kIHRyYWlsaW5nIHVuZXNjYXBlZCBgJGAsIGlmIGJvdGggYXJlIHByZXNlbnQuXG4gICAgICpcbiAgICAgKiBAcHJpdmF0ZVxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBwYXR0ZXJuIFBhdHRlcm4gdG8gcHJvY2Vzcy5cbiAgICAgKiBAcmV0dXJucyB7U3RyaW5nfSBQYXR0ZXJuIHdpdGggZWRnZSBhbmNob3JzIHJlbW92ZWQuXG4gICAgICovXG4gICAgZnVuY3Rpb24gZGVhbmNob3IocGF0dGVybikge1xuICAgICAgICAvLyBBbGxvdyBhbnkgbnVtYmVyIG9mIGVtcHR5IG5vbmNhcHR1cmluZyBncm91cHMgYmVmb3JlL2FmdGVyIGFuY2hvcnMsIGJlY2F1c2UgcmVnZXhlc1xuICAgICAgICAvLyBidWlsdC9nZW5lcmF0ZWQgYnkgWFJlZ0V4cCBzb21ldGltZXMgaW5jbHVkZSB0aGVtXG4gICAgICAgIHZhciBsZWFkaW5nQW5jaG9yID0gL14oPzpcXChcXD86XFwpKSpcXF4vO1xuICAgICAgICB2YXIgdHJhaWxpbmdBbmNob3IgPSAvXFwkKD86XFwoXFw/OlxcKSkqJC87XG5cbiAgICAgICAgaWYgKGxlYWRpbmdBbmNob3IudGVzdChwYXR0ZXJuKSAmJiB0cmFpbGluZ0FuY2hvci50ZXN0KHBhdHRlcm4pICYmXG4gICAgICAgIC8vIEVuc3VyZSB0aGF0IHRoZSB0cmFpbGluZyBgJGAgaXNuJ3QgZXNjYXBlZFxuICAgICAgICB0cmFpbGluZ0FuY2hvci50ZXN0KHBhdHRlcm4ucmVwbGFjZSgvXFxcXFtcXHNcXFNdL2csICcnKSkpIHtcbiAgICAgICAgICAgIHJldHVybiBwYXR0ZXJuLnJlcGxhY2UobGVhZGluZ0FuY2hvciwgJycpLnJlcGxhY2UodHJhaWxpbmdBbmNob3IsICcnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBwYXR0ZXJuO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENvbnZlcnRzIHRoZSBwcm92aWRlZCB2YWx1ZSB0byBhbiBYUmVnRXhwLiBOYXRpdmUgUmVnRXhwIGZsYWdzIGFyZSBub3QgcHJlc2VydmVkLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKiBAcGFyYW0ge1N0cmluZ3xSZWdFeHB9IHZhbHVlIFZhbHVlIHRvIGNvbnZlcnQuXG4gICAgICogQHBhcmFtIHtCb29sZWFufSBbYWRkRmxhZ1hdIFdoZXRoZXIgdG8gYXBwbHkgdGhlIGB4YCBmbGFnIGluIGNhc2VzIHdoZW4gYHZhbHVlYCBpcyBub3RcbiAgICAgKiAgIGFscmVhZHkgYSByZWdleCBnZW5lcmF0ZWQgYnkgWFJlZ0V4cFxuICAgICAqIEByZXR1cm5zIHtSZWdFeHB9IFhSZWdFeHAgb2JqZWN0IHdpdGggWFJlZ0V4cCBzeW50YXggYXBwbGllZC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBhc1hSZWdFeHAodmFsdWUsIGFkZEZsYWdYKSB7XG4gICAgICAgIHZhciBmbGFncyA9IGFkZEZsYWdYID8gJ3gnIDogJyc7XG4gICAgICAgIHJldHVybiBYUmVnRXhwLmlzUmVnRXhwKHZhbHVlKSA/IHZhbHVlW1JFR0VYX0RBVEFdICYmIHZhbHVlW1JFR0VYX0RBVEFdLmNhcHR1cmVOYW1lcyA/XG4gICAgICAgIC8vIERvbid0IHJlY29tcGlsZSwgdG8gcHJlc2VydmUgY2FwdHVyZSBuYW1lc1xuICAgICAgICB2YWx1ZSA6XG4gICAgICAgIC8vIFJlY29tcGlsZSBhcyBYUmVnRXhwXG4gICAgICAgIFhSZWdFeHAodmFsdWUuc291cmNlLCBmbGFncykgOlxuICAgICAgICAvLyBDb21waWxlIHN0cmluZyBhcyBYUmVnRXhwXG4gICAgICAgIFhSZWdFeHAodmFsdWUsIGZsYWdzKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBpbnRlcnBvbGF0ZShzdWJzdGl0dXRpb24pIHtcbiAgICAgICAgcmV0dXJuIHN1YnN0aXR1dGlvbiBpbnN0YW5jZW9mIFJlZ0V4cCA/IHN1YnN0aXR1dGlvbiA6IFhSZWdFeHAuZXNjYXBlKHN1YnN0aXR1dGlvbik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gcmVkdWNlVG9TdWJwYXR0ZXJuc09iamVjdChzdWJwYXR0ZXJucywgaW50ZXJwb2xhdGVkLCBzdWJwYXR0ZXJuSW5kZXgpIHtcbiAgICAgICAgc3VicGF0dGVybnNbJ3N1YnBhdHRlcm4nICsgc3VicGF0dGVybkluZGV4XSA9IGludGVycG9sYXRlZDtcbiAgICAgICAgcmV0dXJuIHN1YnBhdHRlcm5zO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGVtYmVkU3VicGF0dGVybkFmdGVyKHJhdywgc3VicGF0dGVybkluZGV4LCByYXdMaXRlcmFscykge1xuICAgICAgICB2YXIgaGFzU3VicGF0dGVybiA9IHN1YnBhdHRlcm5JbmRleCA8IHJhd0xpdGVyYWxzLmxlbmd0aCAtIDE7XG4gICAgICAgIHJldHVybiByYXcgKyAoaGFzU3VicGF0dGVybiA/ICd7e3N1YnBhdHRlcm4nICsgc3VicGF0dGVybkluZGV4ICsgJ319JyA6ICcnKTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBQcm92aWRlcyB0YWdnZWQgdGVtcGxhdGUgbGl0ZXJhbHMgdGhhdCBjcmVhdGUgcmVnZXhlcyB3aXRoIFhSZWdFeHAgc3ludGF4IGFuZCBmbGFncy4gVGhlXG4gICAgICogcHJvdmlkZWQgcGF0dGVybiBpcyBoYW5kbGVkIGFzIGEgcmF3IHN0cmluZywgc28gYmFja3NsYXNoZXMgZG9uJ3QgbmVlZCB0byBiZSBlc2NhcGVkLlxuICAgICAqXG4gICAgICogSW50ZXJwb2xhdGlvbiBvZiBzdHJpbmdzIGFuZCByZWdleGVzIHNoYXJlcyB0aGUgZmVhdHVyZXMgb2YgYFhSZWdFeHAuYnVpbGRgLiBJbnRlcnBvbGF0ZWRcbiAgICAgKiBwYXR0ZXJucyBhcmUgdHJlYXRlZCBhcyBhdG9taWMgdW5pdHMgd2hlbiBxdWFudGlmaWVkLCBpbnRlcnBvbGF0ZWQgc3RyaW5ncyBoYXZlIHRoZWlyIHNwZWNpYWxcbiAgICAgKiBjaGFyYWN0ZXJzIGVzY2FwZWQsIGEgbGVhZGluZyBgXmAgYW5kIHRyYWlsaW5nIHVuZXNjYXBlZCBgJGAgYXJlIHN0cmlwcGVkIGZyb20gaW50ZXJwb2xhdGVkXG4gICAgICogcmVnZXhlcyBpZiBib3RoIGFyZSBwcmVzZW50LCBhbmQgYW55IGJhY2tyZWZlcmVuY2VzIHdpdGhpbiBhbiBpbnRlcnBvbGF0ZWQgcmVnZXggYXJlXG4gICAgICogcmV3cml0dGVuIHRvIHdvcmsgd2l0aGluIHRoZSBvdmVyYWxsIHBhdHRlcm4uXG4gICAgICpcbiAgICAgKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBbZmxhZ3NdIEFueSBjb21iaW5hdGlvbiBvZiBYUmVnRXhwIGZsYWdzLlxuICAgICAqIEByZXR1cm5zIHtGdW5jdGlvbn0gSGFuZGxlciBmb3IgdGVtcGxhdGUgbGl0ZXJhbHMgdGhhdCBjb25zdHJ1Y3QgcmVnZXhlcyB3aXRoIFhSZWdFeHAgc3ludGF4LlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiBjb25zdCBoMTIgPSAvMVswLTJdfDA/WzEtOV0vO1xuICAgICAqIGNvbnN0IGgyNCA9IC8yWzAtM118WzAxXVswLTldLztcbiAgICAgKiBjb25zdCBob3VycyA9IFhSZWdFeHAudGFnKCd4JylgJHtoMTJ9IDogfCAke2gyNH1gO1xuICAgICAqIGNvbnN0IG1pbnV0ZXMgPSAvXlswLTVdWzAtOV0kLztcbiAgICAgKiAvLyBOb3RlIHRoYXQgZXhwbGljaXRseSBuYW1pbmcgdGhlICdtaW51dGVzJyBncm91cCBpcyByZXF1aXJlZCBmb3IgbmFtZWQgYmFja3JlZmVyZW5jZXNcbiAgICAgKiBjb25zdCB0aW1lID0gWFJlZ0V4cC50YWcoJ3gnKWBeICR7aG91cnN9ICg/PG1pbnV0ZXM+JHttaW51dGVzfSkgJGA7XG4gICAgICogdGltZS50ZXN0KCcxMDo1OScpOyAvLyAtPiB0cnVlXG4gICAgICogWFJlZ0V4cC5leGVjKCcxMDo1OScsIHRpbWUpLm1pbnV0ZXM7IC8vIC0+ICc1OSdcbiAgICAgKi9cbiAgICBYUmVnRXhwLnRhZyA9IGZ1bmN0aW9uIChmbGFncykge1xuICAgICAgICByZXR1cm4gZnVuY3Rpb24gKGxpdGVyYWxzKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBfbGVuID0gYXJndW1lbnRzLmxlbmd0aCwgc3Vic3RpdHV0aW9ucyA9IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgICAgICAgICBzdWJzdGl0dXRpb25zW19rZXkgLSAxXSA9IGFyZ3VtZW50c1tfa2V5XTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgdmFyIHN1YnBhdHRlcm5zID0gc3Vic3RpdHV0aW9ucy5tYXAoaW50ZXJwb2xhdGUpLnJlZHVjZShyZWR1Y2VUb1N1YnBhdHRlcm5zT2JqZWN0LCB7fSk7XG4gICAgICAgICAgICB2YXIgcGF0dGVybiA9IGxpdGVyYWxzLnJhdy5tYXAoZW1iZWRTdWJwYXR0ZXJuQWZ0ZXIpLmpvaW4oJycpO1xuICAgICAgICAgICAgcmV0dXJuIFhSZWdFeHAuYnVpbGQocGF0dGVybiwgc3VicGF0dGVybnMsIGZsYWdzKTtcbiAgICAgICAgfTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQnVpbGRzIHJlZ2V4ZXMgdXNpbmcgbmFtZWQgc3VicGF0dGVybnMsIGZvciByZWFkYWJpbGl0eSBhbmQgcGF0dGVybiByZXVzZS4gQmFja3JlZmVyZW5jZXMgaW5cbiAgICAgKiB0aGUgb3V0ZXIgcGF0dGVybiBhbmQgcHJvdmlkZWQgc3VicGF0dGVybnMgYXJlIGF1dG9tYXRpY2FsbHkgcmVudW1iZXJlZCB0byB3b3JrIGNvcnJlY3RseS5cbiAgICAgKiBOYXRpdmUgZmxhZ3MgdXNlZCBieSBwcm92aWRlZCBzdWJwYXR0ZXJucyBhcmUgaWdub3JlZCBpbiBmYXZvciBvZiB0aGUgYGZsYWdzYCBhcmd1bWVudC5cbiAgICAgKlxuICAgICAqIEBtZW1iZXJPZiBYUmVnRXhwXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHBhdHRlcm4gWFJlZ0V4cCBwYXR0ZXJuIHVzaW5nIGB7e25hbWV9fWAgZm9yIGVtYmVkZGVkIHN1YnBhdHRlcm5zLiBBbGxvd3NcbiAgICAgKiAgIGAoe3tuYW1lfX0pYCBhcyBzaG9ydGhhbmQgZm9yIGAoPzxuYW1lPnt7bmFtZX19KWAuIFBhdHRlcm5zIGNhbm5vdCBiZSBlbWJlZGRlZCB3aXRoaW5cbiAgICAgKiAgIGNoYXJhY3RlciBjbGFzc2VzLlxuICAgICAqIEBwYXJhbSB7T2JqZWN0fSBzdWJzIExvb2t1cCBvYmplY3QgZm9yIG5hbWVkIHN1YnBhdHRlcm5zLiBWYWx1ZXMgY2FuIGJlIHN0cmluZ3Mgb3IgcmVnZXhlcy4gQVxuICAgICAqICAgbGVhZGluZyBgXmAgYW5kIHRyYWlsaW5nIHVuZXNjYXBlZCBgJGAgYXJlIHN0cmlwcGVkIGZyb20gc3VicGF0dGVybnMsIGlmIGJvdGggYXJlIHByZXNlbnQuXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IFtmbGFnc10gQW55IGNvbWJpbmF0aW9uIG9mIFhSZWdFeHAgZmxhZ3MuXG4gICAgICogQHJldHVybnMge1JlZ0V4cH0gUmVnZXggd2l0aCBpbnRlcnBvbGF0ZWQgc3VicGF0dGVybnMuXG4gICAgICogQGV4YW1wbGVcbiAgICAgKlxuICAgICAqIGNvbnN0IHRpbWUgPSBYUmVnRXhwLmJ1aWxkKCcoP3gpXiB7e2hvdXJzfX0gKHt7bWludXRlc319KSAkJywge1xuICAgICAqICAgaG91cnM6IFhSZWdFeHAuYnVpbGQoJ3t7aDEyfX0gOiB8IHt7aDI0fX0nLCB7XG4gICAgICogICAgIGgxMjogLzFbMC0yXXwwP1sxLTldLyxcbiAgICAgKiAgICAgaDI0OiAvMlswLTNdfFswMV1bMC05XS9cbiAgICAgKiAgIH0sICd4JyksXG4gICAgICogICBtaW51dGVzOiAvXlswLTVdWzAtOV0kL1xuICAgICAqIH0pO1xuICAgICAqIHRpbWUudGVzdCgnMTA6NTknKTsgLy8gLT4gdHJ1ZVxuICAgICAqIFhSZWdFeHAuZXhlYygnMTA6NTknLCB0aW1lKS5taW51dGVzOyAvLyAtPiAnNTknXG4gICAgICovXG4gICAgWFJlZ0V4cC5idWlsZCA9IGZ1bmN0aW9uIChwYXR0ZXJuLCBzdWJzLCBmbGFncykge1xuICAgICAgICBmbGFncyA9IGZsYWdzIHx8ICcnO1xuICAgICAgICAvLyBVc2VkIHdpdGggYGFzWFJlZ0V4cGAgY2FsbHMgZm9yIGBwYXR0ZXJuYCBhbmQgc3VicGF0dGVybnMgaW4gYHN1YnNgLCB0byB3b3JrIGFyb3VuZCBob3dcbiAgICAgICAgLy8gc29tZSBicm93c2VycyBjb252ZXJ0IGBSZWdFeHAoJ1xcbicpYCB0byBhIHJlZ2V4IHRoYXQgY29udGFpbnMgdGhlIGxpdGVyYWwgY2hhcmFjdGVycyBgXFxgXG4gICAgICAgIC8vIGFuZCBgbmAuIFNlZSBtb3JlIGRldGFpbHMgYXQgPGh0dHBzOi8vZ2l0aHViLmNvbS9zbGV2aXRoYW4veHJlZ2V4cC9wdWxsLzE2Mz4uXG4gICAgICAgIHZhciBhZGRGbGFnWCA9IGZsYWdzLmluZGV4T2YoJ3gnKSAhPT0gLTE7XG4gICAgICAgIHZhciBpbmxpbmVGbGFncyA9IC9eXFwoXFw/KFtcXHckXSspXFwpLy5leGVjKHBhdHRlcm4pO1xuICAgICAgICAvLyBBZGQgZmxhZ3Mgd2l0aGluIGEgbGVhZGluZyBtb2RlIG1vZGlmaWVyIHRvIHRoZSBvdmVyYWxsIHBhdHRlcm4ncyBmbGFnc1xuICAgICAgICBpZiAoaW5saW5lRmxhZ3MpIHtcbiAgICAgICAgICAgIGZsYWdzID0gWFJlZ0V4cC5fY2xpcER1cGxpY2F0ZXMoZmxhZ3MgKyBpbmxpbmVGbGFnc1sxXSk7XG4gICAgICAgIH1cblxuICAgICAgICB2YXIgZGF0YSA9IHt9O1xuICAgICAgICBmb3IgKHZhciBwIGluIHN1YnMpIHtcbiAgICAgICAgICAgIGlmIChzdWJzLmhhc093blByb3BlcnR5KHApKSB7XG4gICAgICAgICAgICAgICAgLy8gUGFzc2luZyB0byBYUmVnRXhwIGVuYWJsZXMgZXh0ZW5kZWQgc3ludGF4IGFuZCBlbnN1cmVzIGluZGVwZW5kZW50IHZhbGlkaXR5LFxuICAgICAgICAgICAgICAgIC8vIGxlc3QgYW4gdW5lc2NhcGVkIGAoYCwgYClgLCBgW2AsIG9yIHRyYWlsaW5nIGBcXGAgYnJlYWtzIHRoZSBgKD86KWAgd3JhcHBlci4gRm9yXG4gICAgICAgICAgICAgICAgLy8gc3VicGF0dGVybnMgcHJvdmlkZWQgYXMgbmF0aXZlIHJlZ2V4ZXMsIGl0IGRpZXMgb24gb2N0YWxzIGFuZCBhZGRzIHRoZSBwcm9wZXJ0eVxuICAgICAgICAgICAgICAgIC8vIHVzZWQgdG8gaG9sZCBleHRlbmRlZCByZWdleCBpbnN0YW5jZSBkYXRhLCBmb3Igc2ltcGxpY2l0eS5cbiAgICAgICAgICAgICAgICB2YXIgc3ViID0gYXNYUmVnRXhwKHN1YnNbcF0sIGFkZEZsYWdYKTtcbiAgICAgICAgICAgICAgICBkYXRhW3BdID0ge1xuICAgICAgICAgICAgICAgICAgICAvLyBEZWFuY2hvcmluZyBhbGxvd3MgZW1iZWRkaW5nIGluZGVwZW5kZW50bHkgdXNlZnVsIGFuY2hvcmVkIHJlZ2V4ZXMuIElmIHlvdVxuICAgICAgICAgICAgICAgICAgICAvLyByZWFsbHkgbmVlZCB0byBrZWVwIHlvdXIgYW5jaG9ycywgZG91YmxlIHRoZW0gKGkuZS4sIGBeXi4uLiQkYCkuXG4gICAgICAgICAgICAgICAgICAgIHBhdHRlcm46IGRlYW5jaG9yKHN1Yi5zb3VyY2UpLFxuICAgICAgICAgICAgICAgICAgICBuYW1lczogc3ViW1JFR0VYX0RBVEFdLmNhcHR1cmVOYW1lcyB8fCBbXVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICAvLyBQYXNzaW5nIHRvIFhSZWdFeHAgZGllcyBvbiBvY3RhbHMgYW5kIGVuc3VyZXMgdGhlIG91dGVyIHBhdHRlcm4gaXMgaW5kZXBlbmRlbnRseSB2YWxpZDtcbiAgICAgICAgLy8gaGVscHMga2VlcCB0aGlzIHNpbXBsZS4gTmFtZWQgY2FwdHVyZXMgd2lsbCBiZSBwdXQgYmFjay5cbiAgICAgICAgdmFyIHBhdHRlcm5Bc1JlZ2V4ID0gYXNYUmVnRXhwKHBhdHRlcm4sIGFkZEZsYWdYKTtcblxuICAgICAgICAvLyAnQ2FwcycgaXMgc2hvcnQgZm9yICdjYXB0dXJlcydcbiAgICAgICAgdmFyIG51bUNhcHMgPSAwO1xuICAgICAgICB2YXIgbnVtUHJpb3JDYXBzID0gdm9pZCAwO1xuICAgICAgICB2YXIgbnVtT3V0ZXJDYXBzID0gMDtcbiAgICAgICAgdmFyIG91dGVyQ2Fwc01hcCA9IFswXTtcbiAgICAgICAgdmFyIG91dGVyQ2FwTmFtZXMgPSBwYXR0ZXJuQXNSZWdleFtSRUdFWF9EQVRBXS5jYXB0dXJlTmFtZXMgfHwgW107XG4gICAgICAgIHZhciBvdXRwdXQgPSBwYXR0ZXJuQXNSZWdleC5zb3VyY2UucmVwbGFjZShwYXJ0cywgZnVuY3Rpb24gKCQwLCAkMSwgJDIsICQzLCAkNCkge1xuICAgICAgICAgICAgdmFyIHN1Yk5hbWUgPSAkMSB8fCAkMjtcbiAgICAgICAgICAgIHZhciBjYXBOYW1lID0gdm9pZCAwO1xuICAgICAgICAgICAgdmFyIGludHJvID0gdm9pZCAwO1xuICAgICAgICAgICAgdmFyIGxvY2FsQ2FwSW5kZXggPSB2b2lkIDA7XG4gICAgICAgICAgICAvLyBOYW1lZCBzdWJwYXR0ZXJuXG4gICAgICAgICAgICBpZiAoc3ViTmFtZSkge1xuICAgICAgICAgICAgICAgIGlmICghZGF0YS5oYXNPd25Qcm9wZXJ0eShzdWJOYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoJ1VuZGVmaW5lZCBwcm9wZXJ0eSAnICsgJDApO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyBOYW1lZCBzdWJwYXR0ZXJuIHdhcyB3cmFwcGVkIGluIGEgY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgICAgICAgaWYgKCQxKSB7XG4gICAgICAgICAgICAgICAgICAgIGNhcE5hbWUgPSBvdXRlckNhcE5hbWVzW251bU91dGVyQ2Fwc107XG4gICAgICAgICAgICAgICAgICAgIG91dGVyQ2Fwc01hcFsrK251bU91dGVyQ2Fwc10gPSArK251bUNhcHM7XG4gICAgICAgICAgICAgICAgICAgIC8vIElmIGl0J3MgYSBuYW1lZCBncm91cCwgcHJlc2VydmUgdGhlIG5hbWUuIE90aGVyd2lzZSwgdXNlIHRoZSBzdWJwYXR0ZXJuIG5hbWVcbiAgICAgICAgICAgICAgICAgICAgLy8gYXMgdGhlIGNhcHR1cmUgbmFtZVxuICAgICAgICAgICAgICAgICAgICBpbnRybyA9ICcoPzwnICsgKGNhcE5hbWUgfHwgc3ViTmFtZSkgKyAnPic7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgaW50cm8gPSAnKD86JztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbnVtUHJpb3JDYXBzID0gbnVtQ2FwcztcbiAgICAgICAgICAgICAgICB2YXIgcmV3cml0dGVuU3VicGF0dGVybiA9IGRhdGFbc3ViTmFtZV0ucGF0dGVybi5yZXBsYWNlKHN1YlBhcnRzLCBmdW5jdGlvbiAobWF0Y2gsIHBhcmVuLCBiYWNrcmVmKSB7XG4gICAgICAgICAgICAgICAgICAgIC8vIENhcHR1cmluZyBncm91cFxuICAgICAgICAgICAgICAgICAgICBpZiAocGFyZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGNhcE5hbWUgPSBkYXRhW3N1Yk5hbWVdLm5hbWVzW251bUNhcHMgLSBudW1QcmlvckNhcHNdO1xuICAgICAgICAgICAgICAgICAgICAgICAgKytudW1DYXBzO1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8gSWYgdGhlIGN1cnJlbnQgY2FwdHVyZSBoYXMgYSBuYW1lLCBwcmVzZXJ2ZSB0aGUgbmFtZVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNhcE5hbWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gJyg/PCcgKyBjYXBOYW1lICsgJz4nO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gQmFja3JlZmVyZW5jZVxuICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGJhY2tyZWYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGxvY2FsQ2FwSW5kZXggPSArYmFja3JlZiAtIDE7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBSZXdyaXRlIHRoZSBiYWNrcmVmZXJlbmNlXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YVtzdWJOYW1lXS5uYW1lc1tsb2NhbENhcEluZGV4XSA/XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyBOZWVkIHRvIHByZXNlcnZlIHRoZSBiYWNrcmVmZXJlbmNlIG5hbWUgaW4gY2FzZSB1c2luZyBmbGFnIGBuYFxuICAgICAgICAgICAgICAgICAgICAgICAgJ1xcXFxrPCcgKyBkYXRhW3N1Yk5hbWVdLm5hbWVzW2xvY2FsQ2FwSW5kZXhdICsgJz4nIDogJ1xcXFwnICsgKCtiYWNrcmVmICsgbnVtUHJpb3JDYXBzKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbWF0Y2g7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuICcnICsgaW50cm8gKyByZXdyaXR0ZW5TdWJwYXR0ZXJuICsgJyknO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gQ2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgICBpZiAoJDMpIHtcbiAgICAgICAgICAgICAgICBjYXBOYW1lID0gb3V0ZXJDYXBOYW1lc1tudW1PdXRlckNhcHNdO1xuICAgICAgICAgICAgICAgIG91dGVyQ2Fwc01hcFsrK251bU91dGVyQ2Fwc10gPSArK251bUNhcHM7XG4gICAgICAgICAgICAgICAgLy8gSWYgdGhlIGN1cnJlbnQgY2FwdHVyZSBoYXMgYSBuYW1lLCBwcmVzZXJ2ZSB0aGUgbmFtZVxuICAgICAgICAgICAgICAgIGlmIChjYXBOYW1lKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAnKD88JyArIGNhcE5hbWUgKyAnPic7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIEJhY2tyZWZlcmVuY2VcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoJDQpIHtcbiAgICAgICAgICAgICAgICBsb2NhbENhcEluZGV4ID0gKyQ0IC0gMTtcbiAgICAgICAgICAgICAgICAvLyBSZXdyaXRlIHRoZSBiYWNrcmVmZXJlbmNlXG4gICAgICAgICAgICAgICAgcmV0dXJuIG91dGVyQ2FwTmFtZXNbbG9jYWxDYXBJbmRleF0gP1xuICAgICAgICAgICAgICAgIC8vIE5lZWQgdG8gcHJlc2VydmUgdGhlIGJhY2tyZWZlcmVuY2UgbmFtZSBpbiBjYXNlIHVzaW5nIGZsYWcgYG5gXG4gICAgICAgICAgICAgICAgJ1xcXFxrPCcgKyBvdXRlckNhcE5hbWVzW2xvY2FsQ2FwSW5kZXhdICsgJz4nIDogJ1xcXFwnICsgb3V0ZXJDYXBzTWFwWyskNF07XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gJDA7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIHJldHVybiBYUmVnRXhwKG91dHB1dCwgZmxhZ3MpO1xuICAgIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxuLyohXG4gKiBYUmVnRXhwLm1hdGNoUmVjdXJzaXZlIDQuMC4wXG4gKiA8eHJlZ2V4cC5jb20+XG4gKiBTdGV2ZW4gTGV2aXRoYW4gKGMpIDIwMDktMjAxNyBNSVQgTGljZW5zZVxuICovXG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChYUmVnRXhwKSB7XG5cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgbWF0Y2ggZGV0YWlsIG9iamVjdCBjb21wb3NlZCBvZiB0aGUgcHJvdmlkZWQgdmFsdWVzLlxuICAgICAqXG4gICAgICogQHByaXZhdGVcbiAgICAgKi9cbiAgICBmdW5jdGlvbiByb3cobmFtZSwgdmFsdWUsIHN0YXJ0LCBlbmQpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG5hbWU6IG5hbWUsXG4gICAgICAgICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICAgICAgICBzdGFydDogc3RhcnQsXG4gICAgICAgICAgICBlbmQ6IGVuZFxuICAgICAgICB9O1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldHVybnMgYW4gYXJyYXkgb2YgbWF0Y2ggc3RyaW5ncyBiZXR3ZWVuIG91dGVybW9zdCBsZWZ0IGFuZCByaWdodCBkZWxpbWl0ZXJzLCBvciBhbiBhcnJheSBvZlxuICAgICAqIG9iamVjdHMgd2l0aCBkZXRhaWxlZCBtYXRjaCBwYXJ0cyBhbmQgcG9zaXRpb24gZGF0YS4gQW4gZXJyb3IgaXMgdGhyb3duIGlmIGRlbGltaXRlcnMgYXJlXG4gICAgICogdW5iYWxhbmNlZCB3aXRoaW4gdGhlIGRhdGEuXG4gICAgICpcbiAgICAgKiBAbWVtYmVyT2YgWFJlZ0V4cFxuICAgICAqIEBwYXJhbSB7U3RyaW5nfSBzdHIgU3RyaW5nIHRvIHNlYXJjaC5cbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gbGVmdCBMZWZ0IGRlbGltaXRlciBhcyBhbiBYUmVnRXhwIHBhdHRlcm4uXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IHJpZ2h0IFJpZ2h0IGRlbGltaXRlciBhcyBhbiBYUmVnRXhwIHBhdHRlcm4uXG4gICAgICogQHBhcmFtIHtTdHJpbmd9IFtmbGFnc10gQW55IG5hdGl2ZSBvciBYUmVnRXhwIGZsYWdzLCB1c2VkIGZvciB0aGUgbGVmdCBhbmQgcmlnaHQgZGVsaW1pdGVycy5cbiAgICAgKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIExldHMgeW91IHNwZWNpZnkgYHZhbHVlTmFtZXNgIGFuZCBgZXNjYXBlQ2hhcmAgb3B0aW9ucy5cbiAgICAgKiBAcmV0dXJucyB7QXJyYXl9IEFycmF5IG9mIG1hdGNoZXMsIG9yIGFuIGVtcHR5IGFycmF5LlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBCYXNpYyB1c2FnZVxuICAgICAqIGxldCBzdHIgPSAnKHQoKGUpKXMpdCgpKGluZyknO1xuICAgICAqIFhSZWdFeHAubWF0Y2hSZWN1cnNpdmUoc3RyLCAnXFxcXCgnLCAnXFxcXCknLCAnZycpO1xuICAgICAqIC8vIC0+IFsndCgoZSkpcycsICcnLCAnaW5nJ11cbiAgICAgKlxuICAgICAqIC8vIEV4dGVuZGVkIGluZm9ybWF0aW9uIG1vZGUgd2l0aCB2YWx1ZU5hbWVzXG4gICAgICogc3RyID0gJ0hlcmUgaXMgPGRpdj4gPGRpdj5hbjwvZGl2PjwvZGl2PiBleGFtcGxlJztcbiAgICAgKiBYUmVnRXhwLm1hdGNoUmVjdXJzaXZlKHN0ciwgJzxkaXZcXFxccyo+JywgJzwvZGl2PicsICdnaScsIHtcbiAgICAgKiAgIHZhbHVlTmFtZXM6IFsnYmV0d2VlbicsICdsZWZ0JywgJ21hdGNoJywgJ3JpZ2h0J11cbiAgICAgKiB9KTtcbiAgICAgKiAvLyAtPiBbXG4gICAgICogLy8ge25hbWU6ICdiZXR3ZWVuJywgdmFsdWU6ICdIZXJlIGlzICcsICAgICAgIHN0YXJ0OiAwLCAgZW5kOiA4fSxcbiAgICAgKiAvLyB7bmFtZTogJ2xlZnQnLCAgICB2YWx1ZTogJzxkaXY+JywgICAgICAgICAgc3RhcnQ6IDgsICBlbmQ6IDEzfSxcbiAgICAgKiAvLyB7bmFtZTogJ21hdGNoJywgICB2YWx1ZTogJyA8ZGl2PmFuPC9kaXY+Jywgc3RhcnQ6IDEzLCBlbmQ6IDI3fSxcbiAgICAgKiAvLyB7bmFtZTogJ3JpZ2h0JywgICB2YWx1ZTogJzwvZGl2PicsICAgICAgICAgc3RhcnQ6IDI3LCBlbmQ6IDMzfSxcbiAgICAgKiAvLyB7bmFtZTogJ2JldHdlZW4nLCB2YWx1ZTogJyBleGFtcGxlJywgICAgICAgc3RhcnQ6IDMzLCBlbmQ6IDQxfVxuICAgICAqIC8vIF1cbiAgICAgKlxuICAgICAqIC8vIE9taXR0aW5nIHVubmVlZGVkIHBhcnRzIHdpdGggbnVsbCB2YWx1ZU5hbWVzLCBhbmQgdXNpbmcgZXNjYXBlQ2hhclxuICAgICAqIHN0ciA9ICcuLi57MX0uXFxcXHt7ZnVuY3Rpb24oeCx5KXtyZXR1cm4ge3k6eH19fSc7XG4gICAgICogWFJlZ0V4cC5tYXRjaFJlY3Vyc2l2ZShzdHIsICd7JywgJ30nLCAnZycsIHtcbiAgICAgKiAgIHZhbHVlTmFtZXM6IFsnbGl0ZXJhbCcsIG51bGwsICd2YWx1ZScsIG51bGxdLFxuICAgICAqICAgZXNjYXBlQ2hhcjogJ1xcXFwnXG4gICAgICogfSk7XG4gICAgICogLy8gLT4gW1xuICAgICAqIC8vIHtuYW1lOiAnbGl0ZXJhbCcsIHZhbHVlOiAnLi4uJywgIHN0YXJ0OiAwLCBlbmQ6IDN9LFxuICAgICAqIC8vIHtuYW1lOiAndmFsdWUnLCAgIHZhbHVlOiAnMScsICAgIHN0YXJ0OiA0LCBlbmQ6IDV9LFxuICAgICAqIC8vIHtuYW1lOiAnbGl0ZXJhbCcsIHZhbHVlOiAnLlxcXFx7Jywgc3RhcnQ6IDYsIGVuZDogOX0sXG4gICAgICogLy8ge25hbWU6ICd2YWx1ZScsICAgdmFsdWU6ICdmdW5jdGlvbih4LHkpe3JldHVybiB7eTp4fX0nLCBzdGFydDogMTAsIGVuZDogMzd9XG4gICAgICogLy8gXVxuICAgICAqXG4gICAgICogLy8gU3RpY2t5IG1vZGUgdmlhIGZsYWcgeVxuICAgICAqIHN0ciA9ICc8MT48PDwyPj4+PDM+NDw1Pic7XG4gICAgICogWFJlZ0V4cC5tYXRjaFJlY3Vyc2l2ZShzdHIsICc8JywgJz4nLCAnZ3knKTtcbiAgICAgKiAvLyAtPiBbJzEnLCAnPDwyPj4nLCAnMyddXG4gICAgICovXG4gICAgWFJlZ0V4cC5tYXRjaFJlY3Vyc2l2ZSA9IGZ1bmN0aW9uIChzdHIsIGxlZnQsIHJpZ2h0LCBmbGFncywgb3B0aW9ucykge1xuICAgICAgICBmbGFncyA9IGZsYWdzIHx8ICcnO1xuICAgICAgICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgICAgICAgdmFyIGdsb2JhbCA9IGZsYWdzLmluZGV4T2YoJ2cnKSAhPT0gLTE7XG4gICAgICAgIHZhciBzdGlja3kgPSBmbGFncy5pbmRleE9mKCd5JykgIT09IC0xO1xuICAgICAgICAvLyBGbGFnIGB5YCBpcyBjb250cm9sbGVkIGludGVybmFsbHlcbiAgICAgICAgdmFyIGJhc2ljRmxhZ3MgPSBmbGFncy5yZXBsYWNlKC95L2csICcnKTtcbiAgICAgICAgdmFyIGVzY2FwZUNoYXIgPSBvcHRpb25zLmVzY2FwZUNoYXI7XG4gICAgICAgIHZhciB2TiA9IG9wdGlvbnMudmFsdWVOYW1lcztcbiAgICAgICAgdmFyIG91dHB1dCA9IFtdO1xuICAgICAgICB2YXIgb3BlblRva2VucyA9IDA7XG4gICAgICAgIHZhciBkZWxpbVN0YXJ0ID0gMDtcbiAgICAgICAgdmFyIGRlbGltRW5kID0gMDtcbiAgICAgICAgdmFyIGxhc3RPdXRlckVuZCA9IDA7XG4gICAgICAgIHZhciBvdXRlclN0YXJ0ID0gdm9pZCAwO1xuICAgICAgICB2YXIgaW5uZXJTdGFydCA9IHZvaWQgMDtcbiAgICAgICAgdmFyIGxlZnRNYXRjaCA9IHZvaWQgMDtcbiAgICAgICAgdmFyIHJpZ2h0TWF0Y2ggPSB2b2lkIDA7XG4gICAgICAgIHZhciBlc2MgPSB2b2lkIDA7XG4gICAgICAgIGxlZnQgPSBYUmVnRXhwKGxlZnQsIGJhc2ljRmxhZ3MpO1xuICAgICAgICByaWdodCA9IFhSZWdFeHAocmlnaHQsIGJhc2ljRmxhZ3MpO1xuXG4gICAgICAgIGlmIChlc2NhcGVDaGFyKSB7XG4gICAgICAgICAgICBpZiAoZXNjYXBlQ2hhci5sZW5ndGggPiAxKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYW5ub3QgdXNlIG1vcmUgdGhhbiBvbmUgZXNjYXBlIGNoYXJhY3RlcicpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZXNjYXBlQ2hhciA9IFhSZWdFeHAuZXNjYXBlKGVzY2FwZUNoYXIpO1xuICAgICAgICAgICAgLy8gRXhhbXBsZSBvZiBjb25jYXRlbmF0ZWQgYGVzY2AgcmVnZXg6XG4gICAgICAgICAgICAvLyBgZXNjYXBlQ2hhcmA6ICclJ1xuICAgICAgICAgICAgLy8gYGxlZnRgOiAnPCdcbiAgICAgICAgICAgIC8vIGByaWdodGA6ICc+J1xuICAgICAgICAgICAgLy8gUmVnZXggaXM6IC8oPzolW1xcU1xcc118KD86KD8hPHw+KVteJV0pKykrL1xuICAgICAgICAgICAgZXNjID0gbmV3IFJlZ0V4cCgnKD86JyArIGVzY2FwZUNoYXIgKyAnW1xcXFxTXFxcXHNdfCg/Oig/IScgK1xuICAgICAgICAgICAgLy8gVXNpbmcgYFhSZWdFeHAudW5pb25gIHNhZmVseSByZXdyaXRlcyBiYWNrcmVmZXJlbmNlcyBpbiBgbGVmdGAgYW5kIGByaWdodGAuXG4gICAgICAgICAgICAvLyBJbnRlbnRpb25hbGx5IG5vdCBwYXNzaW5nIGBiYXNpY0ZsYWdzYCB0byBgWFJlZ0V4cC51bmlvbmAgc2luY2UgYW55IHN5bnRheFxuICAgICAgICAgICAgLy8gdHJhbnNmb3JtYXRpb24gcmVzdWx0aW5nIGZyb20gdGhvc2UgZmxhZ3Mgd2FzIGFscmVhZHkgYXBwbGllZCB0byBgbGVmdGAgYW5kXG4gICAgICAgICAgICAvLyBgcmlnaHRgIHdoZW4gdGhleSB3ZXJlIHBhc3NlZCB0aHJvdWdoIHRoZSBYUmVnRXhwIGNvbnN0cnVjdG9yIGFib3ZlLlxuICAgICAgICAgICAgWFJlZ0V4cC51bmlvbihbbGVmdCwgcmlnaHRdLCAnJywgeyBjb25qdW5jdGlvbjogJ29yJyB9KS5zb3VyY2UgKyAnKVteJyArIGVzY2FwZUNoYXIgKyAnXSkrKSsnLFxuICAgICAgICAgICAgLy8gRmxhZ3MgYGd5YCBub3QgbmVlZGVkIGhlcmVcbiAgICAgICAgICAgIGZsYWdzLnJlcGxhY2UoL1teaW11XSsvZywgJycpKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgICAgICAvLyBJZiB1c2luZyBhbiBlc2NhcGUgY2hhcmFjdGVyLCBhZHZhbmNlIHRvIHRoZSBkZWxpbWl0ZXIncyBuZXh0IHN0YXJ0aW5nIHBvc2l0aW9uLFxuICAgICAgICAgICAgLy8gc2tpcHBpbmcgYW55IGVzY2FwZWQgY2hhcmFjdGVycyBpbiBiZXR3ZWVuXG4gICAgICAgICAgICBpZiAoZXNjYXBlQ2hhcikge1xuICAgICAgICAgICAgICAgIGRlbGltRW5kICs9IChYUmVnRXhwLmV4ZWMoc3RyLCBlc2MsIGRlbGltRW5kLCAnc3RpY2t5JykgfHwgWycnXSlbMF0ubGVuZ3RoO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbGVmdE1hdGNoID0gWFJlZ0V4cC5leGVjKHN0ciwgbGVmdCwgZGVsaW1FbmQpO1xuICAgICAgICAgICAgcmlnaHRNYXRjaCA9IFhSZWdFeHAuZXhlYyhzdHIsIHJpZ2h0LCBkZWxpbUVuZCk7XG4gICAgICAgICAgICAvLyBLZWVwIHRoZSBsZWZ0bW9zdCBtYXRjaCBvbmx5XG4gICAgICAgICAgICBpZiAobGVmdE1hdGNoICYmIHJpZ2h0TWF0Y2gpIHtcbiAgICAgICAgICAgICAgICBpZiAobGVmdE1hdGNoLmluZGV4IDw9IHJpZ2h0TWF0Y2guaW5kZXgpIHtcbiAgICAgICAgICAgICAgICAgICAgcmlnaHRNYXRjaCA9IG51bGw7XG4gICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgbGVmdE1hdGNoID0gbnVsbDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBQYXRocyAoTE06IGxlZnRNYXRjaCwgUk06IHJpZ2h0TWF0Y2gsIE9UOiBvcGVuVG9rZW5zKTpcbiAgICAgICAgICAgIC8vIExNIHwgUk0gfCBPVCB8IFJlc3VsdFxuICAgICAgICAgICAgLy8gMSAgfCAwICB8IDEgIHwgbG9vcFxuICAgICAgICAgICAgLy8gMSAgfCAwICB8IDAgIHwgbG9vcFxuICAgICAgICAgICAgLy8gMCAgfCAxICB8IDEgIHwgbG9vcFxuICAgICAgICAgICAgLy8gMCAgfCAxICB8IDAgIHwgdGhyb3dcbiAgICAgICAgICAgIC8vIDAgIHwgMCAgfCAxICB8IHRocm93XG4gICAgICAgICAgICAvLyAwICB8IDAgIHwgMCAgfCBicmVha1xuICAgICAgICAgICAgLy8gVGhlIHBhdGhzIGFib3ZlIGRvbid0IGluY2x1ZGUgdGhlIHN0aWNreSBtb2RlIHNwZWNpYWwgY2FzZS4gVGhlIGxvb3AgZW5kcyBhZnRlciB0aGVcbiAgICAgICAgICAgIC8vIGZpcnN0IGNvbXBsZXRlZCBtYXRjaCBpZiBub3QgYGdsb2JhbGAuXG4gICAgICAgICAgICBpZiAobGVmdE1hdGNoIHx8IHJpZ2h0TWF0Y2gpIHtcbiAgICAgICAgICAgICAgICBkZWxpbVN0YXJ0ID0gKGxlZnRNYXRjaCB8fCByaWdodE1hdGNoKS5pbmRleDtcbiAgICAgICAgICAgICAgICBkZWxpbUVuZCA9IGRlbGltU3RhcnQgKyAobGVmdE1hdGNoIHx8IHJpZ2h0TWF0Y2gpWzBdLmxlbmd0aDtcbiAgICAgICAgICAgIH0gZWxzZSBpZiAoIW9wZW5Ub2tlbnMpIHtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChzdGlja3kgJiYgIW9wZW5Ub2tlbnMgJiYgZGVsaW1TdGFydCA+IGxhc3RPdXRlckVuZCkge1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGxlZnRNYXRjaCkge1xuICAgICAgICAgICAgICAgIGlmICghb3BlblRva2Vucykge1xuICAgICAgICAgICAgICAgICAgICBvdXRlclN0YXJ0ID0gZGVsaW1TdGFydDtcbiAgICAgICAgICAgICAgICAgICAgaW5uZXJTdGFydCA9IGRlbGltRW5kO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICArK29wZW5Ub2tlbnM7XG4gICAgICAgICAgICB9IGVsc2UgaWYgKHJpZ2h0TWF0Y2ggJiYgb3BlblRva2Vucykge1xuICAgICAgICAgICAgICAgIGlmICghIC0tb3BlblRva2Vucykge1xuICAgICAgICAgICAgICAgICAgICBpZiAodk4pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2TlswXSAmJiBvdXRlclN0YXJ0ID4gbGFzdE91dGVyRW5kKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0LnB1c2gocm93KHZOWzBdLCBzdHIuc2xpY2UobGFzdE91dGVyRW5kLCBvdXRlclN0YXJ0KSwgbGFzdE91dGVyRW5kLCBvdXRlclN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodk5bMV0pIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvdXRwdXQucHVzaChyb3codk5bMV0sIHN0ci5zbGljZShvdXRlclN0YXJ0LCBpbm5lclN0YXJ0KSwgb3V0ZXJTdGFydCwgaW5uZXJTdGFydCkpO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHZOWzJdKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb3V0cHV0LnB1c2gocm93KHZOWzJdLCBzdHIuc2xpY2UoaW5uZXJTdGFydCwgZGVsaW1TdGFydCksIGlubmVyU3RhcnQsIGRlbGltU3RhcnQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh2TlszXSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKHJvdyh2TlszXSwgc3RyLnNsaWNlKGRlbGltU3RhcnQsIGRlbGltRW5kKSwgZGVsaW1TdGFydCwgZGVsaW1FbmQpKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIG91dHB1dC5wdXNoKHN0ci5zbGljZShpbm5lclN0YXJ0LCBkZWxpbVN0YXJ0KSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgbGFzdE91dGVyRW5kID0gZGVsaW1FbmQ7XG4gICAgICAgICAgICAgICAgICAgIGlmICghZ2xvYmFsKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdVbmJhbGFuY2VkIGRlbGltaXRlciBmb3VuZCBpbiBzdHJpbmcnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIElmIHRoZSBkZWxpbWl0ZXIgbWF0Y2hlZCBhbiBlbXB0eSBzdHJpbmcsIGF2b2lkIGFuIGluZmluaXRlIGxvb3BcbiAgICAgICAgICAgIGlmIChkZWxpbVN0YXJ0ID09PSBkZWxpbUVuZCkge1xuICAgICAgICAgICAgICAgICsrZGVsaW1FbmQ7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoZ2xvYmFsICYmICFzdGlja3kgJiYgdk4gJiYgdk5bMF0gJiYgc3RyLmxlbmd0aCA+IGxhc3RPdXRlckVuZCkge1xuICAgICAgICAgICAgb3V0cHV0LnB1c2gocm93KHZOWzBdLCBzdHIuc2xpY2UobGFzdE91dGVyRW5kKSwgbGFzdE91dGVyRW5kLCBzdHIubGVuZ3RoKSk7XG4gICAgICAgIH1cblxuICAgICAgICByZXR1cm4gb3V0cHV0O1xuICAgIH07XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IGV4cG9ydHNbJ2RlZmF1bHQnXTsiLCIndXNlIHN0cmljdCc7XG5cbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwge1xuICAgIHZhbHVlOiB0cnVlXG59KTtcblxuLyohXG4gKiBYUmVnRXhwIFVuaWNvZGUgQmFzZSA0LjAuMFxuICogPHhyZWdleHAuY29tPlxuICogU3RldmVuIExldml0aGFuIChjKSAyMDA4LTIwMTcgTUlUIExpY2Vuc2VcbiAqL1xuXG5leHBvcnRzLmRlZmF1bHQgPSBmdW5jdGlvbiAoWFJlZ0V4cCkge1xuXG4gICAgLyoqXG4gICAgICogQWRkcyBiYXNlIHN1cHBvcnQgZm9yIFVuaWNvZGUgbWF0Y2hpbmc6XG4gICAgICogLSBBZGRzIHN5bnRheCBgXFxwey4ufWAgZm9yIG1hdGNoaW5nIFVuaWNvZGUgdG9rZW5zLiBUb2tlbnMgY2FuIGJlIGludmVydGVkIHVzaW5nIGBcXFB7Li59YCBvclxuICAgICAqICAgYFxccHteLi59YC4gVG9rZW4gbmFtZXMgaWdub3JlIGNhc2UsIHNwYWNlcywgaHlwaGVucywgYW5kIHVuZGVyc2NvcmVzLiBZb3UgY2FuIG9taXQgdGhlXG4gICAgICogICBicmFjZXMgZm9yIHRva2VuIG5hbWVzIHRoYXQgYXJlIGEgc2luZ2xlIGxldHRlciAoZS5nLiBgXFxwTGAgb3IgYFBMYCkuXG4gICAgICogLSBBZGRzIGZsYWcgQSAoYXN0cmFsKSwgd2hpY2ggZW5hYmxlcyAyMS1iaXQgVW5pY29kZSBzdXBwb3J0LlxuICAgICAqIC0gQWRkcyB0aGUgYFhSZWdFeHAuYWRkVW5pY29kZURhdGFgIG1ldGhvZCB1c2VkIGJ5IG90aGVyIGFkZG9ucyB0byBwcm92aWRlIGNoYXJhY3RlciBkYXRhLlxuICAgICAqXG4gICAgICogVW5pY29kZSBCYXNlIHJlbGllcyBvbiBleHRlcm5hbGx5IHByb3ZpZGVkIFVuaWNvZGUgY2hhcmFjdGVyIGRhdGEuIE9mZmljaWFsIGFkZG9ucyBhcmVcbiAgICAgKiBhdmFpbGFibGUgdG8gcHJvdmlkZSBkYXRhIGZvciBVbmljb2RlIGNhdGVnb3JpZXMsIHNjcmlwdHMsIGJsb2NrcywgYW5kIHByb3BlcnRpZXMuXG4gICAgICpcbiAgICAgKiBAcmVxdWlyZXMgWFJlZ0V4cFxuICAgICAqL1xuXG4gICAgLy8gPT0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLT09XG4gICAgLy8gUHJpdmF0ZSBzdHVmZlxuICAgIC8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuXG4gICAgLy8gU3RvcmFnZSBmb3IgVW5pY29kZSBkYXRhXG4gICAgdmFyIHVuaWNvZGUgPSB7fTtcblxuICAgIC8vIFJldXNlIHV0aWxzXG4gICAgdmFyIGRlYyA9IFhSZWdFeHAuX2RlYztcbiAgICB2YXIgaGV4ID0gWFJlZ0V4cC5faGV4O1xuICAgIHZhciBwYWQ0ID0gWFJlZ0V4cC5fcGFkNDtcblxuICAgIC8vIEdlbmVyYXRlcyBhIHRva2VuIGxvb2t1cCBuYW1lOiBsb3dlcmNhc2UsIHdpdGggaHlwaGVucywgc3BhY2VzLCBhbmQgdW5kZXJzY29yZXMgcmVtb3ZlZFxuICAgIGZ1bmN0aW9uIG5vcm1hbGl6ZShuYW1lKSB7XG4gICAgICAgIHJldHVybiBuYW1lLnJlcGxhY2UoL1stIF9dKy9nLCAnJykudG9Mb3dlckNhc2UoKTtcbiAgICB9XG5cbiAgICAvLyBHZXRzIHRoZSBkZWNpbWFsIGNvZGUgb2YgYSBsaXRlcmFsIGNvZGUgdW5pdCwgXFx4SEgsIFxcdUhISEgsIG9yIGEgYmFja3NsYXNoLWVzY2FwZWQgbGl0ZXJhbFxuICAgIGZ1bmN0aW9uIGNoYXJDb2RlKGNocikge1xuICAgICAgICB2YXIgZXNjID0gL15cXFxcW3h1XSguKykvLmV4ZWMoY2hyKTtcbiAgICAgICAgcmV0dXJuIGVzYyA/IGRlYyhlc2NbMV0pIDogY2hyLmNoYXJDb2RlQXQoY2hyWzBdID09PSAnXFxcXCcgPyAxIDogMCk7XG4gICAgfVxuXG4gICAgLy8gSW52ZXJ0cyBhIGxpc3Qgb2Ygb3JkZXJlZCBCTVAgY2hhcmFjdGVycyBhbmQgcmFuZ2VzXG4gICAgZnVuY3Rpb24gaW52ZXJ0Qm1wKHJhbmdlKSB7XG4gICAgICAgIHZhciBvdXRwdXQgPSAnJztcbiAgICAgICAgdmFyIGxhc3RFbmQgPSAtMTtcblxuICAgICAgICBYUmVnRXhwLmZvckVhY2gocmFuZ2UsIC8oXFxcXHguLnxcXFxcdS4uLi58XFxcXD9bXFxzXFxTXSkoPzotKFxcXFx4Li58XFxcXHUuLi4ufFxcXFw/W1xcc1xcU10pKT8vLCBmdW5jdGlvbiAobSkge1xuICAgICAgICAgICAgdmFyIHN0YXJ0ID0gY2hhckNvZGUobVsxXSk7XG4gICAgICAgICAgICBpZiAoc3RhcnQgPiBsYXN0RW5kICsgMSkge1xuICAgICAgICAgICAgICAgIG91dHB1dCArPSAnXFxcXHUnICsgcGFkNChoZXgobGFzdEVuZCArIDEpKTtcbiAgICAgICAgICAgICAgICBpZiAoc3RhcnQgPiBsYXN0RW5kICsgMikge1xuICAgICAgICAgICAgICAgICAgICBvdXRwdXQgKz0gJy1cXFxcdScgKyBwYWQ0KGhleChzdGFydCAtIDEpKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBsYXN0RW5kID0gY2hhckNvZGUobVsyXSB8fCBtWzFdKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgaWYgKGxhc3RFbmQgPCAweEZGRkYpIHtcbiAgICAgICAgICAgIG91dHB1dCArPSAnXFxcXHUnICsgcGFkNChoZXgobGFzdEVuZCArIDEpKTtcbiAgICAgICAgICAgIGlmIChsYXN0RW5kIDwgMHhGRkZFKSB7XG4gICAgICAgICAgICAgICAgb3V0cHV0ICs9ICctXFxcXHVGRkZGJztcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgfVxuXG4gICAgLy8gR2VuZXJhdGVzIGFuIGludmVydGVkIEJNUCByYW5nZSBvbiBmaXJzdCB1c2VcbiAgICBmdW5jdGlvbiBjYWNoZUludmVydGVkQm1wKHNsdWcpIHtcbiAgICAgICAgdmFyIHByb3AgPSAnYiEnO1xuICAgICAgICByZXR1cm4gdW5pY29kZVtzbHVnXVtwcm9wXSB8fCAodW5pY29kZVtzbHVnXVtwcm9wXSA9IGludmVydEJtcCh1bmljb2RlW3NsdWddLmJtcCkpO1xuICAgIH1cblxuICAgIC8vIENvbWJpbmVzIGFuZCBvcHRpb25hbGx5IG5lZ2F0ZXMgQk1QIGFuZCBhc3RyYWwgZGF0YVxuICAgIGZ1bmN0aW9uIGJ1aWxkQXN0cmFsKHNsdWcsIGlzTmVnYXRlZCkge1xuICAgICAgICB2YXIgaXRlbSA9IHVuaWNvZGVbc2x1Z107XG4gICAgICAgIHZhciBjb21iaW5lZCA9ICcnO1xuXG4gICAgICAgIGlmIChpdGVtLmJtcCAmJiAhaXRlbS5pc0JtcExhc3QpIHtcbiAgICAgICAgICAgIGNvbWJpbmVkID0gJ1snICsgaXRlbS5ibXAgKyAnXScgKyAoaXRlbS5hc3RyYWwgPyAnfCcgOiAnJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGl0ZW0uYXN0cmFsKSB7XG4gICAgICAgICAgICBjb21iaW5lZCArPSBpdGVtLmFzdHJhbDtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXRlbS5pc0JtcExhc3QgJiYgaXRlbS5ibXApIHtcbiAgICAgICAgICAgIGNvbWJpbmVkICs9IChpdGVtLmFzdHJhbCA/ICd8JyA6ICcnKSArICdbJyArIGl0ZW0uYm1wICsgJ10nO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gQXN0cmFsIFVuaWNvZGUgdG9rZW5zIGFsd2F5cyBtYXRjaCBhIGNvZGUgcG9pbnQsIG5ldmVyIGEgY29kZSB1bml0XG4gICAgICAgIHJldHVybiBpc05lZ2F0ZWQgPyAnKD86KD8hJyArIGNvbWJpbmVkICsgJykoPzpbXFx1RDgwMC1cXHVEQkZGXVtcXHVEQzAwLVxcdURGRkZdfFtcXDAtXFx1RkZGRl0pKScgOiAnKD86JyArIGNvbWJpbmVkICsgJyknO1xuICAgIH1cblxuICAgIC8vIEJ1aWxkcyBhIGNvbXBsZXRlIGFzdHJhbCBwYXR0ZXJuIG9uIGZpcnN0IHVzZVxuICAgIGZ1bmN0aW9uIGNhY2hlQXN0cmFsKHNsdWcsIGlzTmVnYXRlZCkge1xuICAgICAgICB2YXIgcHJvcCA9IGlzTmVnYXRlZCA/ICdhIScgOiAnYT0nO1xuICAgICAgICByZXR1cm4gdW5pY29kZVtzbHVnXVtwcm9wXSB8fCAodW5pY29kZVtzbHVnXVtwcm9wXSA9IGJ1aWxkQXN0cmFsKHNsdWcsIGlzTmVnYXRlZCkpO1xuICAgIH1cblxuICAgIC8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuICAgIC8vIENvcmUgZnVuY3Rpb25hbGl0eVxuICAgIC8vID09LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS09PVxuXG4gICAgLypcbiAgICAgKiBBZGQgYXN0cmFsIG1vZGUgKGZsYWcgQSkgYW5kIFVuaWNvZGUgdG9rZW4gc3ludGF4OiBgXFxwey4ufWAsIGBcXFB7Li59YCwgYFxccHteLi59YCwgYFxccENgLlxuICAgICAqL1xuICAgIFhSZWdFeHAuYWRkVG9rZW4oXG4gICAgLy8gVXNlIGAqYCBpbnN0ZWFkIG9mIGArYCB0byBhdm9pZCBjYXB0dXJpbmcgYF5gIGFzIHRoZSB0b2tlbiBuYW1lIGluIGBcXHB7Xn1gXG4gICAgL1xcXFwoW3BQXSkoPzp7KFxcXj8pKFtefV0qKX18KFtBLVphLXpdKSkvLCBmdW5jdGlvbiAobWF0Y2gsIHNjb3BlLCBmbGFncykge1xuICAgICAgICB2YXIgRVJSX0RPVUJMRV9ORUcgPSAnSW52YWxpZCBkb3VibGUgbmVnYXRpb24gJztcbiAgICAgICAgdmFyIEVSUl9VTktOT1dOX05BTUUgPSAnVW5rbm93biBVbmljb2RlIHRva2VuICc7XG4gICAgICAgIHZhciBFUlJfVU5LTk9XTl9SRUYgPSAnVW5pY29kZSB0b2tlbiBtaXNzaW5nIGRhdGEgJztcbiAgICAgICAgdmFyIEVSUl9BU1RSQUxfT05MWSA9ICdBc3RyYWwgbW9kZSByZXF1aXJlZCBmb3IgVW5pY29kZSB0b2tlbiAnO1xuICAgICAgICB2YXIgRVJSX0FTVFJBTF9JTl9DTEFTUyA9ICdBc3RyYWwgbW9kZSBkb2VzIG5vdCBzdXBwb3J0IFVuaWNvZGUgdG9rZW5zIHdpdGhpbiBjaGFyYWN0ZXIgY2xhc3Nlcyc7XG4gICAgICAgIC8vIE5lZ2F0ZWQgdmlhIFxcUHsuLn0gb3IgXFxwe14uLn1cbiAgICAgICAgdmFyIGlzTmVnYXRlZCA9IG1hdGNoWzFdID09PSAnUCcgfHwgISFtYXRjaFsyXTtcbiAgICAgICAgLy8gU3dpdGNoIGZyb20gQk1QICgwLUZGRkYpIHRvIGFzdHJhbCAoMC0xMEZGRkYpIG1vZGUgdmlhIGZsYWcgQVxuICAgICAgICB2YXIgaXNBc3RyYWxNb2RlID0gZmxhZ3MuaW5kZXhPZignQScpICE9PSAtMTtcbiAgICAgICAgLy8gVG9rZW4gbG9va3VwIG5hbWUuIENoZWNrIGBbNF1gIGZpcnN0IHRvIGF2b2lkIHBhc3NpbmcgYHVuZGVmaW5lZGAgdmlhIGBcXHB7fWBcbiAgICAgICAgdmFyIHNsdWcgPSBub3JtYWxpemUobWF0Y2hbNF0gfHwgbWF0Y2hbM10pO1xuICAgICAgICAvLyBUb2tlbiBkYXRhIG9iamVjdFxuICAgICAgICB2YXIgaXRlbSA9IHVuaWNvZGVbc2x1Z107XG5cbiAgICAgICAgaWYgKG1hdGNoWzFdID09PSAnUCcgJiYgbWF0Y2hbMl0pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihFUlJfRE9VQkxFX05FRyArIG1hdGNoWzBdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIXVuaWNvZGUuaGFzT3duUHJvcGVydHkoc2x1ZykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBTeW50YXhFcnJvcihFUlJfVU5LTk9XTl9OQU1FICsgbWF0Y2hbMF0pO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gU3dpdGNoIHRvIHRoZSBuZWdhdGVkIGZvcm0gb2YgdGhlIHJlZmVyZW5jZWQgVW5pY29kZSB0b2tlblxuICAgICAgICBpZiAoaXRlbS5pbnZlcnNlT2YpIHtcbiAgICAgICAgICAgIHNsdWcgPSBub3JtYWxpemUoaXRlbS5pbnZlcnNlT2YpO1xuICAgICAgICAgICAgaWYgKCF1bmljb2RlLmhhc093blByb3BlcnR5KHNsdWcpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKEVSUl9VTktOT1dOX1JFRiArIG1hdGNoWzBdICsgJyAtPiAnICsgaXRlbS5pbnZlcnNlT2YpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaXRlbSA9IHVuaWNvZGVbc2x1Z107XG4gICAgICAgICAgICBpc05lZ2F0ZWQgPSAhaXNOZWdhdGVkO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKCEoaXRlbS5ibXAgfHwgaXNBc3RyYWxNb2RlKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IFN5bnRheEVycm9yKEVSUl9BU1RSQUxfT05MWSArIG1hdGNoWzBdKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoaXNBc3RyYWxNb2RlKSB7XG4gICAgICAgICAgICBpZiAoc2NvcGUgPT09ICdjbGFzcycpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgU3ludGF4RXJyb3IoRVJSX0FTVFJBTF9JTl9DTEFTUyk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIHJldHVybiBjYWNoZUFzdHJhbChzbHVnLCBpc05lZ2F0ZWQpO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIHNjb3BlID09PSAnY2xhc3MnID8gaXNOZWdhdGVkID8gY2FjaGVJbnZlcnRlZEJtcChzbHVnKSA6IGl0ZW0uYm1wIDogKGlzTmVnYXRlZCA/ICdbXicgOiAnWycpICsgaXRlbS5ibXAgKyAnXSc7XG4gICAgfSwge1xuICAgICAgICBzY29wZTogJ2FsbCcsXG4gICAgICAgIG9wdGlvbmFsRmxhZ3M6ICdBJyxcbiAgICAgICAgbGVhZENoYXI6ICdcXFxcJ1xuICAgIH0pO1xuXG4gICAgLyoqXG4gICAgICogQWRkcyB0byB0aGUgbGlzdCBvZiBVbmljb2RlIHRva2VucyB0aGF0IFhSZWdFeHAgcmVnZXhlcyBjYW4gbWF0Y2ggdmlhIGBcXHBgIG9yIGBcXFBgLlxuICAgICAqXG4gICAgICogQG1lbWJlck9mIFhSZWdFeHBcbiAgICAgKiBAcGFyYW0ge0FycmF5fSBkYXRhIE9iamVjdHMgd2l0aCBuYW1lZCBjaGFyYWN0ZXIgcmFuZ2VzLiBFYWNoIG9iamVjdCBtYXkgaGF2ZSBwcm9wZXJ0aWVzXG4gICAgICogICBgbmFtZWAsIGBhbGlhc2AsIGBpc0JtcExhc3RgLCBgaW52ZXJzZU9mYCwgYGJtcGAsIGFuZCBgYXN0cmFsYC4gQWxsIGJ1dCBgbmFtZWAgYXJlXG4gICAgICogICBvcHRpb25hbCwgYWx0aG91Z2ggb25lIG9mIGBibXBgIG9yIGBhc3RyYWxgIGlzIHJlcXVpcmVkICh1bmxlc3MgYGludmVyc2VPZmAgaXMgc2V0KS4gSWZcbiAgICAgKiAgIGBhc3RyYWxgIGlzIGFic2VudCwgdGhlIGBibXBgIGRhdGEgaXMgdXNlZCBmb3IgQk1QIGFuZCBhc3RyYWwgbW9kZXMuIElmIGBibXBgIGlzIGFic2VudCxcbiAgICAgKiAgIHRoZSBuYW1lIGVycm9ycyBpbiBCTVAgbW9kZSBidXQgd29ya3MgaW4gYXN0cmFsIG1vZGUuIElmIGJvdGggYGJtcGAgYW5kIGBhc3RyYWxgIGFyZVxuICAgICAqICAgcHJvdmlkZWQsIHRoZSBgYm1wYCBkYXRhIG9ubHkgaXMgdXNlZCBpbiBCTVAgbW9kZSwgYW5kIHRoZSBjb21iaW5hdGlvbiBvZiBgYm1wYCBhbmRcbiAgICAgKiAgIGBhc3RyYWxgIGRhdGEgaXMgdXNlZCBpbiBhc3RyYWwgbW9kZS4gYGlzQm1wTGFzdGAgaXMgbmVlZGVkIHdoZW4gYSB0b2tlbiBtYXRjaGVzIG9ycGhhblxuICAgICAqICAgaGlnaCBzdXJyb2dhdGVzICphbmQqIHVzZXMgc3Vycm9nYXRlIHBhaXJzIHRvIG1hdGNoIGFzdHJhbCBjb2RlIHBvaW50cy4gVGhlIGBibXBgIGFuZFxuICAgICAqICAgYGFzdHJhbGAgZGF0YSBzaG91bGQgYmUgYSBjb21iaW5hdGlvbiBvZiBsaXRlcmFsIGNoYXJhY3RlcnMgYW5kIGBcXHhISGAgb3IgYFxcdUhISEhgIGVzY2FwZVxuICAgICAqICAgc2VxdWVuY2VzLCB3aXRoIGh5cGhlbnMgdG8gY3JlYXRlIHJhbmdlcy4gQW55IHJlZ2V4IG1ldGFjaGFyYWN0ZXJzIGluIHRoZSBkYXRhIHNob3VsZCBiZVxuICAgICAqICAgZXNjYXBlZCwgYXBhcnQgZnJvbSByYW5nZS1jcmVhdGluZyBoeXBoZW5zLiBUaGUgYGFzdHJhbGAgZGF0YSBjYW4gYWRkaXRpb25hbGx5IHVzZVxuICAgICAqICAgY2hhcmFjdGVyIGNsYXNzZXMgYW5kIGFsdGVybmF0aW9uLCBhbmQgc2hvdWxkIHVzZSBzdXJyb2dhdGUgcGFpcnMgdG8gcmVwcmVzZW50IGFzdHJhbCBjb2RlXG4gICAgICogICBwb2ludHMuIGBpbnZlcnNlT2ZgIGNhbiBiZSB1c2VkIHRvIGF2b2lkIGR1cGxpY2F0aW5nIGNoYXJhY3RlciBkYXRhIGlmIGEgVW5pY29kZSB0b2tlbiBpc1xuICAgICAqICAgZGVmaW5lZCBhcyB0aGUgZXhhY3QgaW52ZXJzZSBvZiBhbm90aGVyIHRva2VuLlxuICAgICAqIEBleGFtcGxlXG4gICAgICpcbiAgICAgKiAvLyBCYXNpYyB1c2VcbiAgICAgKiBYUmVnRXhwLmFkZFVuaWNvZGVEYXRhKFt7XG4gICAgICogICBuYW1lOiAnWERpZ2l0JyxcbiAgICAgKiAgIGFsaWFzOiAnSGV4YWRlY2ltYWwnLFxuICAgICAqICAgYm1wOiAnMC05QS1GYS1mJ1xuICAgICAqIH1dKTtcbiAgICAgKiBYUmVnRXhwKCdcXFxccHtYRGlnaXR9OlxcXFxwe0hleGFkZWNpbWFsfSsnKS50ZXN0KCcwOjNEJyk7IC8vIC0+IHRydWVcbiAgICAgKi9cbiAgICBYUmVnRXhwLmFkZFVuaWNvZGVEYXRhID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgdmFyIEVSUl9OT19OQU1FID0gJ1VuaWNvZGUgdG9rZW4gcmVxdWlyZXMgbmFtZSc7XG4gICAgICAgIHZhciBFUlJfTk9fREFUQSA9ICdVbmljb2RlIHRva2VuIGhhcyBubyBjaGFyYWN0ZXIgZGF0YSAnO1xuICAgICAgICB2YXIgaXRlbSA9IHZvaWQgMDtcblxuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyArK2kpIHtcbiAgICAgICAgICAgIGl0ZW0gPSBkYXRhW2ldO1xuICAgICAgICAgICAgaWYgKCFpdGVtLm5hbWUpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoRVJSX05PX05BTUUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKCEoaXRlbS5pbnZlcnNlT2YgfHwgaXRlbS5ibXAgfHwgaXRlbS5hc3RyYWwpKSB7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKEVSUl9OT19EQVRBICsgaXRlbS5uYW1lKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHVuaWNvZGVbbm9ybWFsaXplKGl0ZW0ubmFtZSldID0gaXRlbTtcbiAgICAgICAgICAgIGlmIChpdGVtLmFsaWFzKSB7XG4gICAgICAgICAgICAgICAgdW5pY29kZVtub3JtYWxpemUoaXRlbS5hbGlhcyldID0gaXRlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFJlc2V0IHRoZSBwYXR0ZXJuIGNhY2hlIHVzZWQgYnkgdGhlIGBYUmVnRXhwYCBjb25zdHJ1Y3Rvciwgc2luY2UgdGhlIHNhbWUgcGF0dGVybiBhbmRcbiAgICAgICAgLy8gZmxhZ3MgbWlnaHQgbm93IHByb2R1Y2UgZGlmZmVyZW50IHJlc3VsdHNcbiAgICAgICAgWFJlZ0V4cC5jYWNoZS5mbHVzaCgncGF0dGVybnMnKTtcbiAgICB9O1xuXG4gICAgLyoqXG4gICAgICogQGlnbm9yZVxuICAgICAqXG4gICAgICogUmV0dXJuIGEgcmVmZXJlbmNlIHRvIHRoZSBpbnRlcm5hbCBVbmljb2RlIGRlZmluaXRpb24gc3RydWN0dXJlIGZvciB0aGUgZ2l2ZW4gVW5pY29kZVxuICAgICAqIFByb3BlcnR5IGlmIHRoZSBnaXZlbiBuYW1lIGlzIGEgbGVnYWwgVW5pY29kZSBQcm9wZXJ0eSBmb3IgdXNlIGluIFhSZWdFeHAgYFxccGAgb3IgYFxcUGAgcmVnZXhcbiAgICAgKiBjb25zdHJ1Y3RzLlxuICAgICAqXG4gICAgICogQG1lbWJlck9mIFhSZWdFeHBcbiAgICAgKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBOYW1lIGJ5IHdoaWNoIHRoZSBVbmljb2RlIFByb3BlcnR5IG1heSBiZSByZWNvZ25pemVkIChjYXNlLWluc2Vuc2l0aXZlKSxcbiAgICAgKiAgIGUuZy4gYCdOJ2Agb3IgYCdOdW1iZXInYC4gVGhlIGdpdmVuIG5hbWUgaXMgbWF0Y2hlZCBhZ2FpbnN0IGFsbCByZWdpc3RlcmVkIFVuaWNvZGVcbiAgICAgKiAgIFByb3BlcnRpZXMgYW5kIFByb3BlcnR5IEFsaWFzZXMuXG4gICAgICogQHJldHVybnMge09iamVjdH0gUmVmZXJlbmNlIHRvIGRlZmluaXRpb24gc3RydWN0dXJlIHdoZW4gdGhlIG5hbWUgbWF0Y2hlcyBhIFVuaWNvZGUgUHJvcGVydHkuXG4gICAgICpcbiAgICAgKiBAbm90ZVxuICAgICAqIEZvciBtb3JlIGluZm8gb24gVW5pY29kZSBQcm9wZXJ0aWVzLCBzZWUgYWxzbyBodHRwOi8vdW5pY29kZS5vcmcvcmVwb3J0cy90cjE4LyNDYXRlZ29yaWVzLlxuICAgICAqXG4gICAgICogQG5vdGVcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyAqbm90KiBwYXJ0IG9mIHRoZSBvZmZpY2lhbGx5IGRvY3VtZW50ZWQgQVBJIGFuZCBtYXkgY2hhbmdlIG9yIGJlIHJlbW92ZWQgaW5cbiAgICAgKiB0aGUgZnV0dXJlLiBJdCBpcyBtZWFudCBmb3IgdXNlcmxhbmQgY29kZSB0aGF0IHdpc2hlcyB0byByZXVzZSB0aGUgKGxhcmdlKSBpbnRlcm5hbCBVbmljb2RlXG4gICAgICogc3RydWN0dXJlcyBzZXQgdXAgYnkgWFJlZ0V4cC5cbiAgICAgKi9cbiAgICBYUmVnRXhwLl9nZXRVbmljb2RlUHJvcGVydHkgPSBmdW5jdGlvbiAobmFtZSkge1xuICAgICAgICB2YXIgc2x1ZyA9IG5vcm1hbGl6ZShuYW1lKTtcbiAgICAgICAgcmV0dXJuIHVuaWNvZGVbc2x1Z107XG4gICAgfTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG4vKiFcbiAqIFhSZWdFeHAgVW5pY29kZSBCbG9ja3MgNC4wLjBcbiAqIDx4cmVnZXhwLmNvbT5cbiAqIFN0ZXZlbiBMZXZpdGhhbiAoYykgMjAxMC0yMDE3IE1JVCBMaWNlbnNlXG4gKiBVbmljb2RlIGRhdGEgYnkgTWF0aGlhcyBCeW5lbnMgPG1hdGhpYXNieW5lbnMuYmU+XG4gKi9cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKFhSZWdFeHApIHtcblxuICAgIC8qKlxuICAgICAqIEFkZHMgc3VwcG9ydCBmb3IgYWxsIFVuaWNvZGUgYmxvY2tzLiBCbG9jayBuYW1lcyB1c2UgdGhlIHByZWZpeCAnSW4nLiBFLmcuLFxuICAgICAqIGBcXHB7SW5CYXNpY0xhdGlufWAuIFRva2VuIG5hbWVzIGFyZSBjYXNlIGluc2Vuc2l0aXZlLCBhbmQgYW55IHNwYWNlcywgaHlwaGVucywgYW5kXG4gICAgICogdW5kZXJzY29yZXMgYXJlIGlnbm9yZWQuXG4gICAgICpcbiAgICAgKiBVc2VzIFVuaWNvZGUgOS4wLjAuXG4gICAgICpcbiAgICAgKiBAcmVxdWlyZXMgWFJlZ0V4cCwgVW5pY29kZSBCYXNlXG4gICAgICovXG5cbiAgICBpZiAoIVhSZWdFeHAuYWRkVW5pY29kZURhdGEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCdVbmljb2RlIEJhc2UgbXVzdCBiZSBsb2FkZWQgYmVmb3JlIFVuaWNvZGUgQmxvY2tzJyk7XG4gICAgfVxuXG4gICAgWFJlZ0V4cC5hZGRVbmljb2RlRGF0YShbe1xuICAgICAgICBuYW1lOiAnSW5BZGxhbScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0FbXFx1REQwMC1cXHVERDVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkFlZ2Vhbl9OdW1iZXJzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDAwLVxcdUREM0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQWhvbScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDVbXFx1REYwMC1cXHVERjNGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkFsY2hlbWljYWxfU3ltYm9scycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0RbXFx1REYwMC1cXHVERjdGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkFscGhhYmV0aWNfUHJlc2VudGF0aW9uX0Zvcm1zJyxcbiAgICAgICAgYm1wOiAnXFx1RkIwMC1cXHVGQjRGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQW5hdG9saWFuX0hpZXJvZ2x5cGhzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgxMVtcXHVEQzAwLVxcdURFN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQW5jaWVudF9HcmVla19NdXNpY2FsX05vdGF0aW9uJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgzNFtcXHVERTAwLVxcdURFNEZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQW5jaWVudF9HcmVla19OdW1iZXJzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDQwLVxcdUREOEZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQW5jaWVudF9TeW1ib2xzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDkwLVxcdUREQ0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQXJhYmljJyxcbiAgICAgICAgYm1wOiAnXFx1MDYwMC1cXHUwNkZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQXJhYmljX0V4dGVuZGVkX0EnLFxuICAgICAgICBibXA6ICdcXHUwOEEwLVxcdTA4RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5BcmFiaWNfTWF0aGVtYXRpY2FsX0FscGhhYmV0aWNfU3ltYm9scycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0JbXFx1REUwMC1cXHVERUZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkFyYWJpY19QcmVzZW50YXRpb25fRm9ybXNfQScsXG4gICAgICAgIGJtcDogJ1xcdUZCNTAtXFx1RkRGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkFyYWJpY19QcmVzZW50YXRpb25fRm9ybXNfQicsXG4gICAgICAgIGJtcDogJ1xcdUZFNzAtXFx1RkVGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkFyYWJpY19TdXBwbGVtZW50JyxcbiAgICAgICAgYm1wOiAnXFx1MDc1MC1cXHUwNzdGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQXJtZW5pYW4nLFxuICAgICAgICBibXA6ICdcXHUwNTMwLVxcdTA1OEYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5BcnJvd3MnLFxuICAgICAgICBibXA6ICdcXHUyMTkwLVxcdTIxRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5BdmVzdGFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVERjAwLVxcdURGM0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQmFsaW5lc2UnLFxuICAgICAgICBibXA6ICdcXHUxQjAwLVxcdTFCN0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5CYW11bScsXG4gICAgICAgIGJtcDogJ1xcdUE2QTAtXFx1QTZGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkJhbXVtX1N1cHBsZW1lbnQnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODFBW1xcdURDMDAtXFx1REUzRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5CYXNpY19MYXRpbicsXG4gICAgICAgIGJtcDogJ1xcMC1cXHg3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkJhc3NhX1ZhaCcsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MUFbXFx1REVEMC1cXHVERUZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkJhdGFrJyxcbiAgICAgICAgYm1wOiAnXFx1MUJDMC1cXHUxQkZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQmVuZ2FsaScsXG4gICAgICAgIGJtcDogJ1xcdTA5ODAtXFx1MDlGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkJoYWlrc3VraScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDdbXFx1REMwMC1cXHVEQzZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkJsb2NrX0VsZW1lbnRzJyxcbiAgICAgICAgYm1wOiAnXFx1MjU4MC1cXHUyNTlGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQm9wb21vZm8nLFxuICAgICAgICBibXA6ICdcXHUzMTAwLVxcdTMxMkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5Cb3BvbW9mb19FeHRlbmRlZCcsXG4gICAgICAgIGJtcDogJ1xcdTMxQTAtXFx1MzFCRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkJveF9EcmF3aW5nJyxcbiAgICAgICAgYm1wOiAnXFx1MjUwMC1cXHUyNTdGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQnJhaG1pJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVEQzAwLVxcdURDN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQnJhaWxsZV9QYXR0ZXJucycsXG4gICAgICAgIGJtcDogJ1xcdTI4MDAtXFx1MjhGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkJ1Z2luZXNlJyxcbiAgICAgICAgYm1wOiAnXFx1MUEwMC1cXHUxQTFGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQnVoaWQnLFxuICAgICAgICBibXA6ICdcXHUxNzQwLVxcdTE3NUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5CeXphbnRpbmVfTXVzaWNhbF9TeW1ib2xzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgzNFtcXHVEQzAwLVxcdURDRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ0pLX0NvbXBhdGliaWxpdHknLFxuICAgICAgICBibXA6ICdcXHUzMzAwLVxcdTMzRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5DSktfQ29tcGF0aWJpbGl0eV9Gb3JtcycsXG4gICAgICAgIGJtcDogJ1xcdUZFMzAtXFx1RkU0RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNKS19Db21wYXRpYmlsaXR5X0lkZW9ncmFwaHMnLFxuICAgICAgICBibXA6ICdcXHVGOTAwLVxcdUZBRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5DSktfQ29tcGF0aWJpbGl0eV9JZGVvZ3JhcGhzX1N1cHBsZW1lbnQnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODdFW1xcdURDMDAtXFx1REUxRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5DSktfUmFkaWNhbHNfU3VwcGxlbWVudCcsXG4gICAgICAgIGJtcDogJ1xcdTJFODAtXFx1MkVGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNKS19TdHJva2VzJyxcbiAgICAgICAgYm1wOiAnXFx1MzFDMC1cXHUzMUVGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ0pLX1N5bWJvbHNfYW5kX1B1bmN0dWF0aW9uJyxcbiAgICAgICAgYm1wOiAnXFx1MzAwMC1cXHUzMDNGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ0pLX1VuaWZpZWRfSWRlb2dyYXBocycsXG4gICAgICAgIGJtcDogJ1xcdTRFMDAtXFx1OUZGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNKS19VbmlmaWVkX0lkZW9ncmFwaHNfRXh0ZW5zaW9uX0EnLFxuICAgICAgICBibXA6ICdcXHUzNDAwLVxcdTREQkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5DSktfVW5pZmllZF9JZGVvZ3JhcGhzX0V4dGVuc2lvbl9CJyxcbiAgICAgICAgYXN0cmFsOiAnW1xcdUQ4NDAtXFx1RDg2OF1bXFx1REMwMC1cXHVERkZGXXxcXHVEODY5W1xcdURDMDAtXFx1REVERl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5DSktfVW5pZmllZF9JZGVvZ3JhcGhzX0V4dGVuc2lvbl9DJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDg2OVtcXHVERjAwLVxcdURGRkZdfFtcXHVEODZBLVxcdUQ4NkNdW1xcdURDMDAtXFx1REZGRl18XFx1RDg2RFtcXHVEQzAwLVxcdURGM0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ0pLX1VuaWZpZWRfSWRlb2dyYXBoc19FeHRlbnNpb25fRCcsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4NkRbXFx1REY0MC1cXHVERkZGXXxcXHVEODZFW1xcdURDMDAtXFx1REMxRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5DSktfVW5pZmllZF9JZGVvZ3JhcGhzX0V4dGVuc2lvbl9FJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDg2RVtcXHVEQzIwLVxcdURGRkZdfFtcXHVEODZGLVxcdUQ4NzJdW1xcdURDMDAtXFx1REZGRl18XFx1RDg3M1tcXHVEQzAwLVxcdURFQUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ2FyaWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERUEwLVxcdURFREZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ2F1Y2FzaWFuX0FsYmFuaWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMVtcXHVERDMwLVxcdURENkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ2hha21hJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVERDAwLVxcdURENEZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ2hhbScsXG4gICAgICAgIGJtcDogJ1xcdUFBMDAtXFx1QUE1RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNoZXJva2VlJyxcbiAgICAgICAgYm1wOiAnXFx1MTNBMC1cXHUxM0ZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ2hlcm9rZWVfU3VwcGxlbWVudCcsXG4gICAgICAgIGJtcDogJ1xcdUFCNzAtXFx1QUJCRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNvbWJpbmluZ19EaWFjcml0aWNhbF9NYXJrcycsXG4gICAgICAgIGJtcDogJ1xcdTAzMDAtXFx1MDM2RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNvbWJpbmluZ19EaWFjcml0aWNhbF9NYXJrc19FeHRlbmRlZCcsXG4gICAgICAgIGJtcDogJ1xcdTFBQjAtXFx1MUFGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNvbWJpbmluZ19EaWFjcml0aWNhbF9NYXJrc19TdXBwbGVtZW50JyxcbiAgICAgICAgYm1wOiAnXFx1MURDMC1cXHUxREZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ29tYmluaW5nX0RpYWNyaXRpY2FsX01hcmtzX2Zvcl9TeW1ib2xzJyxcbiAgICAgICAgYm1wOiAnXFx1MjBEMC1cXHUyMEZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ29tYmluaW5nX0hhbGZfTWFya3MnLFxuICAgICAgICBibXA6ICdcXHVGRTIwLVxcdUZFMkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5Db21tb25fSW5kaWNfTnVtYmVyX0Zvcm1zJyxcbiAgICAgICAgYm1wOiAnXFx1QTgzMC1cXHVBODNGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ29udHJvbF9QaWN0dXJlcycsXG4gICAgICAgIGJtcDogJ1xcdTI0MDAtXFx1MjQzRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNvcHRpYycsXG4gICAgICAgIGJtcDogJ1xcdTJDODAtXFx1MkNGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkNvcHRpY19FcGFjdF9OdW1iZXJzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERUUwLVxcdURFRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ291bnRpbmdfUm9kX051bWVyYWxzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgzNFtcXHVERjYwLVxcdURGN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ3VuZWlmb3JtJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwOFtcXHVEQzAwLVxcdURGRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ3VuZWlmb3JtX051bWJlcnNfYW5kX1B1bmN0dWF0aW9uJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwOVtcXHVEQzAwLVxcdURDN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ3VycmVuY3lfU3ltYm9scycsXG4gICAgICAgIGJtcDogJ1xcdTIwQTAtXFx1MjBDRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkN5cHJpb3RfU3lsbGFiYXJ5JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVEQzAwLVxcdURDM0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ3lyaWxsaWMnLFxuICAgICAgICBibXA6ICdcXHUwNDAwLVxcdTA0RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5DeXJpbGxpY19FeHRlbmRlZF9BJyxcbiAgICAgICAgYm1wOiAnXFx1MkRFMC1cXHUyREZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luQ3lyaWxsaWNfRXh0ZW5kZWRfQicsXG4gICAgICAgIGJtcDogJ1xcdUE2NDAtXFx1QTY5RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkN5cmlsbGljX0V4dGVuZGVkX0MnLFxuICAgICAgICBibXA6ICdcXHUxQzgwLVxcdTFDOEYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5DeXJpbGxpY19TdXBwbGVtZW50JyxcbiAgICAgICAgYm1wOiAnXFx1MDUwMC1cXHUwNTJGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luRGVzZXJldCcsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDFbXFx1REMwMC1cXHVEQzRGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkRldmFuYWdhcmknLFxuICAgICAgICBibXA6ICdcXHUwOTAwLVxcdTA5N0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5EZXZhbmFnYXJpX0V4dGVuZGVkJyxcbiAgICAgICAgYm1wOiAnXFx1QThFMC1cXHVBOEZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luRGluZ2JhdHMnLFxuICAgICAgICBibXA6ICdcXHUyNzAwLVxcdTI3QkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5Eb21pbm9fVGlsZXMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODNDW1xcdURDMzAtXFx1REM5Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5EdXBsb3lhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MkZbXFx1REMwMC1cXHVEQzlGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkVhcmx5X0R5bmFzdGljX0N1bmVpZm9ybScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDlbXFx1REM4MC1cXHVERDRGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkVneXB0aWFuX0hpZXJvZ2x5cGhzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwQ1tcXHVEQzAwLVxcdURGRkZdfFxcdUQ4MERbXFx1REMwMC1cXHVEQzJGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkVsYmFzYW4nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAxW1xcdUREMDAtXFx1REQyRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5FbW90aWNvbnMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODNEW1xcdURFMDAtXFx1REU0Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5FbmNsb3NlZF9BbHBoYW51bWVyaWNfU3VwcGxlbWVudCcsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0NbXFx1REQwMC1cXHVEREZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkVuY2xvc2VkX0FscGhhbnVtZXJpY3MnLFxuICAgICAgICBibXA6ICdcXHUyNDYwLVxcdTI0RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5FbmNsb3NlZF9DSktfTGV0dGVyc19hbmRfTW9udGhzJyxcbiAgICAgICAgYm1wOiAnXFx1MzIwMC1cXHUzMkZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luRW5jbG9zZWRfSWRlb2dyYXBoaWNfU3VwcGxlbWVudCcsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0NbXFx1REUwMC1cXHVERUZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkV0aGlvcGljJyxcbiAgICAgICAgYm1wOiAnXFx1MTIwMC1cXHUxMzdGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luRXRoaW9waWNfRXh0ZW5kZWQnLFxuICAgICAgICBibXA6ICdcXHUyRDgwLVxcdTJEREYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5FdGhpb3BpY19FeHRlbmRlZF9BJyxcbiAgICAgICAgYm1wOiAnXFx1QUIwMC1cXHVBQjJGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luRXRoaW9waWNfU3VwcGxlbWVudCcsXG4gICAgICAgIGJtcDogJ1xcdTEzODAtXFx1MTM5RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkdlbmVyYWxfUHVuY3R1YXRpb24nLFxuICAgICAgICBibXA6ICdcXHUyMDAwLVxcdTIwNkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5HZW9tZXRyaWNfU2hhcGVzJyxcbiAgICAgICAgYm1wOiAnXFx1MjVBMC1cXHUyNUZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luR2VvbWV0cmljX1NoYXBlc19FeHRlbmRlZCcsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0RbXFx1REY4MC1cXHVERkZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkdlb3JnaWFuJyxcbiAgICAgICAgYm1wOiAnXFx1MTBBMC1cXHUxMEZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luR2VvcmdpYW5fU3VwcGxlbWVudCcsXG4gICAgICAgIGJtcDogJ1xcdTJEMDAtXFx1MkQyRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkdsYWdvbGl0aWMnLFxuICAgICAgICBibXA6ICdcXHUyQzAwLVxcdTJDNUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5HbGFnb2xpdGljX1N1cHBsZW1lbnQnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODM4W1xcdURDMDAtXFx1REMyRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5Hb3RoaWMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdURGMzAtXFx1REY0Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5HcmFudGhhJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVERjAwLVxcdURGN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luR3JlZWtfRXh0ZW5kZWQnLFxuICAgICAgICBibXA6ICdcXHUxRjAwLVxcdTFGRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5HcmVla19hbmRfQ29wdGljJyxcbiAgICAgICAgYm1wOiAnXFx1MDM3MC1cXHUwM0ZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luR3VqYXJhdGknLFxuICAgICAgICBibXA6ICdcXHUwQTgwLVxcdTBBRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5HdXJtdWtoaScsXG4gICAgICAgIGJtcDogJ1xcdTBBMDAtXFx1MEE3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkhhbGZ3aWR0aF9hbmRfRnVsbHdpZHRoX0Zvcm1zJyxcbiAgICAgICAgYm1wOiAnXFx1RkYwMC1cXHVGRkVGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luSGFuZ3VsX0NvbXBhdGliaWxpdHlfSmFtbycsXG4gICAgICAgIGJtcDogJ1xcdTMxMzAtXFx1MzE4RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkhhbmd1bF9KYW1vJyxcbiAgICAgICAgYm1wOiAnXFx1MTEwMC1cXHUxMUZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luSGFuZ3VsX0phbW9fRXh0ZW5kZWRfQScsXG4gICAgICAgIGJtcDogJ1xcdUE5NjAtXFx1QTk3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkhhbmd1bF9KYW1vX0V4dGVuZGVkX0InLFxuICAgICAgICBibXA6ICdcXHVEN0IwLVxcdUQ3RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5IYW5ndWxfU3lsbGFibGVzJyxcbiAgICAgICAgYm1wOiAnXFx1QUMwMC1cXHVEN0FGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luSGFudW5vbycsXG4gICAgICAgIGJtcDogJ1xcdTE3MjAtXFx1MTczRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkhhdHJhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1RENFMC1cXHVEQ0ZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkhlYnJldycsXG4gICAgICAgIGJtcDogJ1xcdTA1OTAtXFx1MDVGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkhpZ2hfUHJpdmF0ZV9Vc2VfU3Vycm9nYXRlcycsXG4gICAgICAgIGJtcDogJ1xcdURCODAtXFx1REJGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkhpZ2hfU3Vycm9nYXRlcycsXG4gICAgICAgIGJtcDogJ1xcdUQ4MDAtXFx1REI3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkhpcmFnYW5hJyxcbiAgICAgICAgYm1wOiAnXFx1MzA0MC1cXHUzMDlGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luSVBBX0V4dGVuc2lvbnMnLFxuICAgICAgICBibXA6ICdcXHUwMjUwLVxcdTAyQUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5JZGVvZ3JhcGhpY19EZXNjcmlwdGlvbl9DaGFyYWN0ZXJzJyxcbiAgICAgICAgYm1wOiAnXFx1MkZGMC1cXHUyRkZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luSWRlb2dyYXBoaWNfU3ltYm9sc19hbmRfUHVuY3R1YXRpb24nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODFCW1xcdURGRTAtXFx1REZGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5JbXBlcmlhbF9BcmFtYWljJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVEQzQwLVxcdURDNUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luSW5zY3JpcHRpb25hbF9QYWhsYXZpJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVERjYwLVxcdURGN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luSW5zY3JpcHRpb25hbF9QYXJ0aGlhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REY0MC1cXHVERjVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkphdmFuZXNlJyxcbiAgICAgICAgYm1wOiAnXFx1QTk4MC1cXHVBOURGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luS2FpdGhpJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVEQzgwLVxcdURDQ0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luS2FuYV9TdXBwbGVtZW50JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgyQ1tcXHVEQzAwLVxcdURDRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luS2FuYnVuJyxcbiAgICAgICAgYm1wOiAnXFx1MzE5MC1cXHUzMTlGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luS2FuZ3hpX1JhZGljYWxzJyxcbiAgICAgICAgYm1wOiAnXFx1MkYwMC1cXHUyRkRGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luS2FubmFkYScsXG4gICAgICAgIGJtcDogJ1xcdTBDODAtXFx1MENGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkthdGFrYW5hJyxcbiAgICAgICAgYm1wOiAnXFx1MzBBMC1cXHUzMEZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luS2F0YWthbmFfUGhvbmV0aWNfRXh0ZW5zaW9ucycsXG4gICAgICAgIGJtcDogJ1xcdTMxRjAtXFx1MzFGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbktheWFoX0xpJyxcbiAgICAgICAgYm1wOiAnXFx1QTkwMC1cXHVBOTJGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luS2hhcm9zaHRoaScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REUwMC1cXHVERTVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbktobWVyJyxcbiAgICAgICAgYm1wOiAnXFx1MTc4MC1cXHUxN0ZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luS2htZXJfU3ltYm9scycsXG4gICAgICAgIGJtcDogJ1xcdTE5RTAtXFx1MTlGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbktob2praScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1REUwMC1cXHVERTRGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbktodWRhd2FkaScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1REVCMC1cXHVERUZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkxhbycsXG4gICAgICAgIGJtcDogJ1xcdTBFODAtXFx1MEVGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkxhdGluX0V4dGVuZGVkX0FkZGl0aW9uYWwnLFxuICAgICAgICBibXA6ICdcXHUxRTAwLVxcdTFFRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5MYXRpbl9FeHRlbmRlZF9BJyxcbiAgICAgICAgYm1wOiAnXFx1MDEwMC1cXHUwMTdGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTGF0aW5fRXh0ZW5kZWRfQicsXG4gICAgICAgIGJtcDogJ1xcdTAxODAtXFx1MDI0RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkxhdGluX0V4dGVuZGVkX0MnLFxuICAgICAgICBibXA6ICdcXHUyQzYwLVxcdTJDN0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5MYXRpbl9FeHRlbmRlZF9EJyxcbiAgICAgICAgYm1wOiAnXFx1QTcyMC1cXHVBN0ZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTGF0aW5fRXh0ZW5kZWRfRScsXG4gICAgICAgIGJtcDogJ1xcdUFCMzAtXFx1QUI2RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkxhdGluXzFfU3VwcGxlbWVudCcsXG4gICAgICAgIGJtcDogJ1xceDgwLVxceEZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTGVwY2hhJyxcbiAgICAgICAgYm1wOiAnXFx1MUMwMC1cXHUxQzRGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTGV0dGVybGlrZV9TeW1ib2xzJyxcbiAgICAgICAgYm1wOiAnXFx1MjEwMC1cXHUyMTRGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTGltYnUnLFxuICAgICAgICBibXA6ICdcXHUxOTAwLVxcdTE5NEYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5MaW5lYXJfQScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDFbXFx1REUwMC1cXHVERjdGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkxpbmVhcl9CX0lkZW9ncmFtcycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REM4MC1cXHVEQ0ZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkxpbmVhcl9CX1N5bGxhYmFyeScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REMwMC1cXHVEQzdGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkxpc3UnLFxuICAgICAgICBibXA6ICdcXHVBNEQwLVxcdUE0RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5Mb3dfU3Vycm9nYXRlcycsXG4gICAgICAgIGJtcDogJ1xcdURDMDAtXFx1REZGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkx5Y2lhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REU4MC1cXHVERTlGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbkx5ZGlhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REQyMC1cXHVERDNGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1haGFqYW5pJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVERDUwLVxcdUREN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTWFoam9uZ19UaWxlcycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0NbXFx1REMwMC1cXHVEQzJGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1hbGF5YWxhbScsXG4gICAgICAgIGJtcDogJ1xcdTBEMDAtXFx1MEQ3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1hbmRhaWMnLFxuICAgICAgICBibXA6ICdcXHUwODQwLVxcdTA4NUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5NYW5pY2hhZWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVERUMwLVxcdURFRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTWFyY2hlbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDdbXFx1REM3MC1cXHVEQ0JGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1hdGhlbWF0aWNhbF9BbHBoYW51bWVyaWNfU3ltYm9scycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MzVbXFx1REMwMC1cXHVERkZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1hdGhlbWF0aWNhbF9PcGVyYXRvcnMnLFxuICAgICAgICBibXA6ICdcXHUyMjAwLVxcdTIyRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5NZWV0ZWlfTWF5ZWsnLFxuICAgICAgICBibXA6ICdcXHVBQkMwLVxcdUFCRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5NZWV0ZWlfTWF5ZWtfRXh0ZW5zaW9ucycsXG4gICAgICAgIGJtcDogJ1xcdUFBRTAtXFx1QUFGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1lbmRlX0tpa2FrdWknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODNBW1xcdURDMDAtXFx1RENERl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5NZXJvaXRpY19DdXJzaXZlJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVEREEwLVxcdURERkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTWVyb2l0aWNfSGllcm9nbHlwaHMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAyW1xcdUREODAtXFx1REQ5Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5NaWFvJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgxQltcXHVERjAwLVxcdURGOUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTWlzY2VsbGFuZW91c19NYXRoZW1hdGljYWxfU3ltYm9sc19BJyxcbiAgICAgICAgYm1wOiAnXFx1MjdDMC1cXHUyN0VGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTWlzY2VsbGFuZW91c19NYXRoZW1hdGljYWxfU3ltYm9sc19CJyxcbiAgICAgICAgYm1wOiAnXFx1Mjk4MC1cXHUyOUZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTWlzY2VsbGFuZW91c19TeW1ib2xzJyxcbiAgICAgICAgYm1wOiAnXFx1MjYwMC1cXHUyNkZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTWlzY2VsbGFuZW91c19TeW1ib2xzX2FuZF9BcnJvd3MnLFxuICAgICAgICBibXA6ICdcXHUyQjAwLVxcdTJCRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5NaXNjZWxsYW5lb3VzX1N5bWJvbHNfYW5kX1BpY3RvZ3JhcGhzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgzQ1tcXHVERjAwLVxcdURGRkZdfFxcdUQ4M0RbXFx1REMwMC1cXHVEREZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1pc2NlbGxhbmVvdXNfVGVjaG5pY2FsJyxcbiAgICAgICAgYm1wOiAnXFx1MjMwMC1cXHUyM0ZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTW9kaScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDVbXFx1REUwMC1cXHVERTVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1vZGlmaWVyX1RvbmVfTGV0dGVycycsXG4gICAgICAgIGJtcDogJ1xcdUE3MDAtXFx1QTcxRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1vbmdvbGlhbicsXG4gICAgICAgIGJtcDogJ1xcdTE4MDAtXFx1MThBRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk1vbmdvbGlhbl9TdXBwbGVtZW50JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNVtcXHVERTYwLVxcdURFN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTXJvJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgxQVtcXHVERTQwLVxcdURFNkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luTXVsdGFuaScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1REU4MC1cXHVERUFGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk11c2ljYWxfU3ltYm9scycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MzRbXFx1REQwMC1cXHVEREZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk15YW5tYXInLFxuICAgICAgICBibXA6ICdcXHUxMDAwLVxcdTEwOUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5NeWFubWFyX0V4dGVuZGVkX0EnLFxuICAgICAgICBibXA6ICdcXHVBQTYwLVxcdUFBN0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5NeWFubWFyX0V4dGVuZGVkX0InLFxuICAgICAgICBibXA6ICdcXHVBOUUwLVxcdUE5RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5OS28nLFxuICAgICAgICBibXA6ICdcXHUwN0MwLVxcdTA3RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5OYWJhdGFlYW4nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAyW1xcdURDODAtXFx1RENBRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5OZXdfVGFpX0x1ZScsXG4gICAgICAgIGJtcDogJ1xcdTE5ODAtXFx1MTlERidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk5ld2EnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA1W1xcdURDMDAtXFx1REM3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5OdW1iZXJfRm9ybXMnLFxuICAgICAgICBibXA6ICdcXHUyMTUwLVxcdTIxOEYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5PZ2hhbScsXG4gICAgICAgIGJtcDogJ1xcdTE2ODAtXFx1MTY5RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk9sX0NoaWtpJyxcbiAgICAgICAgYm1wOiAnXFx1MUM1MC1cXHUxQzdGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luT2xkX0h1bmdhcmlhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDNbXFx1REM4MC1cXHVEQ0ZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk9sZF9JdGFsaWMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdURGMDAtXFx1REYyRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5PbGRfTm9ydGhfQXJhYmlhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REU4MC1cXHVERTlGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk9sZF9QZXJtaWMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdURGNTAtXFx1REY3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5PbGRfUGVyc2lhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REZBMC1cXHVERkRGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk9sZF9Tb3V0aF9BcmFiaWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVERTYwLVxcdURFN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luT2xkX1R1cmtpYycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDNbXFx1REMwMC1cXHVEQzRGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbk9wdGljYWxfQ2hhcmFjdGVyX1JlY29nbml0aW9uJyxcbiAgICAgICAgYm1wOiAnXFx1MjQ0MC1cXHUyNDVGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luT3JpeWEnLFxuICAgICAgICBibXA6ICdcXHUwQjAwLVxcdTBCN0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5Pcm5hbWVudGFsX0RpbmdiYXRzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgzRFtcXHVERTUwLVxcdURFN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luT3NhZ2UnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAxW1xcdURDQjAtXFx1RENGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5Pc21hbnlhJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMVtcXHVEQzgwLVxcdURDQUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luUGFoYXdoX0htb25nJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgxQVtcXHVERjAwLVxcdURGOEZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luUGFsbXlyZW5lJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVEQzYwLVxcdURDN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luUGF1X0Npbl9IYXUnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA2W1xcdURFQzAtXFx1REVGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5QaGFnc19wYScsXG4gICAgICAgIGJtcDogJ1xcdUE4NDAtXFx1QTg3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblBoYWlzdG9zX0Rpc2MnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdURERDAtXFx1RERGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5QaG9lbmljaWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVERDAwLVxcdUREMUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luUGhvbmV0aWNfRXh0ZW5zaW9ucycsXG4gICAgICAgIGJtcDogJ1xcdTFEMDAtXFx1MUQ3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblBob25ldGljX0V4dGVuc2lvbnNfU3VwcGxlbWVudCcsXG4gICAgICAgIGJtcDogJ1xcdTFEODAtXFx1MURCRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblBsYXlpbmdfQ2FyZHMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODNDW1xcdURDQTAtXFx1RENGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5Qcml2YXRlX1VzZV9BcmVhJyxcbiAgICAgICAgYm1wOiAnXFx1RTAwMC1cXHVGOEZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luUHNhbHRlcl9QYWhsYXZpJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVERjgwLVxcdURGQUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luUmVqYW5nJyxcbiAgICAgICAgYm1wOiAnXFx1QTkzMC1cXHVBOTVGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luUnVtaV9OdW1lcmFsX1N5bWJvbHMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAzW1xcdURFNjAtXFx1REU3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5SdW5pYycsXG4gICAgICAgIGJtcDogJ1xcdTE2QTAtXFx1MTZGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblNhbWFyaXRhbicsXG4gICAgICAgIGJtcDogJ1xcdTA4MDAtXFx1MDgzRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblNhdXJhc2h0cmEnLFxuICAgICAgICBibXA6ICdcXHVBODgwLVxcdUE4REYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5TaGFyYWRhJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVERDgwLVxcdUREREZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luU2hhdmlhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDFbXFx1REM1MC1cXHVEQzdGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblNob3J0aGFuZF9Gb3JtYXRfQ29udHJvbHMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODJGW1xcdURDQTAtXFx1RENBRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5TaWRkaGFtJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNVtcXHVERDgwLVxcdURERkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luU2luaGFsYScsXG4gICAgICAgIGJtcDogJ1xcdTBEODAtXFx1MERGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblNpbmhhbGFfQXJjaGFpY19OdW1iZXJzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVEREUwLVxcdURERkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luU21hbGxfRm9ybV9WYXJpYW50cycsXG4gICAgICAgIGJtcDogJ1xcdUZFNTAtXFx1RkU2RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblNvcmFfU29tcGVuZycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1RENEMC1cXHVEQ0ZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblNwYWNpbmdfTW9kaWZpZXJfTGV0dGVycycsXG4gICAgICAgIGJtcDogJ1xcdTAyQjAtXFx1MDJGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblNwZWNpYWxzJyxcbiAgICAgICAgYm1wOiAnXFx1RkZGMC1cXHVGRkZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luU3VuZGFuZXNlJyxcbiAgICAgICAgYm1wOiAnXFx1MUI4MC1cXHUxQkJGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luU3VuZGFuZXNlX1N1cHBsZW1lbnQnLFxuICAgICAgICBibXA6ICdcXHUxQ0MwLVxcdTFDQ0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5TdXBlcnNjcmlwdHNfYW5kX1N1YnNjcmlwdHMnLFxuICAgICAgICBibXA6ICdcXHUyMDcwLVxcdTIwOUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5TdXBwbGVtZW50YWxfQXJyb3dzX0EnLFxuICAgICAgICBibXA6ICdcXHUyN0YwLVxcdTI3RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5TdXBwbGVtZW50YWxfQXJyb3dzX0InLFxuICAgICAgICBibXA6ICdcXHUyOTAwLVxcdTI5N0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5TdXBwbGVtZW50YWxfQXJyb3dzX0MnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODNFW1xcdURDMDAtXFx1RENGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5TdXBwbGVtZW50YWxfTWF0aGVtYXRpY2FsX09wZXJhdG9ycycsXG4gICAgICAgIGJtcDogJ1xcdTJBMDAtXFx1MkFGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblN1cHBsZW1lbnRhbF9QdW5jdHVhdGlvbicsXG4gICAgICAgIGJtcDogJ1xcdTJFMDAtXFx1MkU3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblN1cHBsZW1lbnRhbF9TeW1ib2xzX2FuZF9QaWN0b2dyYXBocycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0VbXFx1REQwMC1cXHVEREZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblN1cHBsZW1lbnRhcnlfUHJpdmF0ZV9Vc2VfQXJlYV9BJyxcbiAgICAgICAgYXN0cmFsOiAnW1xcdURCODAtXFx1REJCRl1bXFx1REMwMC1cXHVERkZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblN1cHBsZW1lbnRhcnlfUHJpdmF0ZV9Vc2VfQXJlYV9CJyxcbiAgICAgICAgYXN0cmFsOiAnW1xcdURCQzAtXFx1REJGRl1bXFx1REMwMC1cXHVERkZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblN1dHRvbl9TaWduV3JpdGluZycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MzZbXFx1REMwMC1cXHVERUFGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblN5bG90aV9OYWdyaScsXG4gICAgICAgIGJtcDogJ1xcdUE4MDAtXFx1QTgyRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblN5cmlhYycsXG4gICAgICAgIGJtcDogJ1xcdTA3MDAtXFx1MDc0RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblRhZ2Fsb2cnLFxuICAgICAgICBibXA6ICdcXHUxNzAwLVxcdTE3MUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5UYWdiYW53YScsXG4gICAgICAgIGJtcDogJ1xcdTE3NjAtXFx1MTc3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblRhZ3MnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEQjQwW1xcdURDMDAtXFx1REM3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5UYWlfTGUnLFxuICAgICAgICBibXA6ICdcXHUxOTUwLVxcdTE5N0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5UYWlfVGhhbScsXG4gICAgICAgIGJtcDogJ1xcdTFBMjAtXFx1MUFBRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblRhaV9WaWV0JyxcbiAgICAgICAgYm1wOiAnXFx1QUE4MC1cXHVBQURGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luVGFpX1h1YW5fSmluZ19TeW1ib2xzJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgzNFtcXHVERjAwLVxcdURGNUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luVGFrcmknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA1W1xcdURFODAtXFx1REVDRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5UYW1pbCcsXG4gICAgICAgIGJtcDogJ1xcdTBCODAtXFx1MEJGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblRhbmd1dCcsXG4gICAgICAgIGFzdHJhbDogJ1tcXHVEODFDLVxcdUQ4MjFdW1xcdURDMDAtXFx1REZGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5UYW5ndXRfQ29tcG9uZW50cycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MjJbXFx1REMwMC1cXHVERUZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblRlbHVndScsXG4gICAgICAgIGJtcDogJ1xcdTBDMDAtXFx1MEM3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblRoYWFuYScsXG4gICAgICAgIGJtcDogJ1xcdTA3ODAtXFx1MDdCRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblRoYWknLFxuICAgICAgICBibXA6ICdcXHUwRTAwLVxcdTBFN0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5UaWJldGFuJyxcbiAgICAgICAgYm1wOiAnXFx1MEYwMC1cXHUwRkZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luVGlmaW5hZ2gnLFxuICAgICAgICBibXA6ICdcXHUyRDMwLVxcdTJEN0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5UaXJodXRhJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNVtcXHVEQzgwLVxcdURDREZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luVHJhbnNwb3J0X2FuZF9NYXBfU3ltYm9scycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0RbXFx1REU4MC1cXHVERUZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblVnYXJpdGljJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERjgwLVxcdURGOUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luVW5pZmllZF9DYW5hZGlhbl9BYm9yaWdpbmFsX1N5bGxhYmljcycsXG4gICAgICAgIGJtcDogJ1xcdTE0MDAtXFx1MTY3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblVuaWZpZWRfQ2FuYWRpYW5fQWJvcmlnaW5hbF9TeWxsYWJpY3NfRXh0ZW5kZWQnLFxuICAgICAgICBibXA6ICdcXHUxOEIwLVxcdTE4RkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5WYWknLFxuICAgICAgICBibXA6ICdcXHVBNTAwLVxcdUE2M0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5WYXJpYXRpb25fU2VsZWN0b3JzJyxcbiAgICAgICAgYm1wOiAnXFx1RkUwMC1cXHVGRTBGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luVmFyaWF0aW9uX1NlbGVjdG9yc19TdXBwbGVtZW50JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1REI0MFtcXHVERDAwLVxcdURERUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luVmVkaWNfRXh0ZW5zaW9ucycsXG4gICAgICAgIGJtcDogJ1xcdTFDRDAtXFx1MUNGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJblZlcnRpY2FsX0Zvcm1zJyxcbiAgICAgICAgYm1wOiAnXFx1RkUxMC1cXHVGRTFGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luV2FyYW5nX0NpdGknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA2W1xcdURDQTAtXFx1RENGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5ZaV9SYWRpY2FscycsXG4gICAgICAgIGJtcDogJ1xcdUE0OTAtXFx1QTRDRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbllpX1N5bGxhYmxlcycsXG4gICAgICAgIGJtcDogJ1xcdUEwMDAtXFx1QTQ4RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbllpamluZ19IZXhhZ3JhbV9TeW1ib2xzJyxcbiAgICAgICAgYm1wOiAnXFx1NERDMC1cXHU0REZGJ1xuICAgIH1dKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG4vKiFcbiAqIFhSZWdFeHAgVW5pY29kZSBDYXRlZ29yaWVzIDQuMC4wXG4gKiA8eHJlZ2V4cC5jb20+XG4gKiBTdGV2ZW4gTGV2aXRoYW4gKGMpIDIwMTAtMjAxNyBNSVQgTGljZW5zZVxuICogVW5pY29kZSBkYXRhIGJ5IE1hdGhpYXMgQnluZW5zIDxtYXRoaWFzYnluZW5zLmJlPlxuICovXG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChYUmVnRXhwKSB7XG5cbiAgICAvKipcbiAgICAgKiBBZGRzIHN1cHBvcnQgZm9yIFVuaWNvZGUncyBnZW5lcmFsIGNhdGVnb3JpZXMuIEUuZy4sIGBcXHB7THV9YCBvciBgXFxwe1VwcGVyY2FzZSBMZXR0ZXJ9YC4gU2VlXG4gICAgICogY2F0ZWdvcnkgZGVzY3JpcHRpb25zIGluIFVBWCAjNDQgPGh0dHA6Ly91bmljb2RlLm9yZy9yZXBvcnRzL3RyNDQvI0dDX1ZhbHVlc19UYWJsZT4uIFRva2VuXG4gICAgICogbmFtZXMgYXJlIGNhc2UgaW5zZW5zaXRpdmUsIGFuZCBhbnkgc3BhY2VzLCBoeXBoZW5zLCBhbmQgdW5kZXJzY29yZXMgYXJlIGlnbm9yZWQuXG4gICAgICpcbiAgICAgKiBVc2VzIFVuaWNvZGUgOS4wLjAuXG4gICAgICpcbiAgICAgKiBAcmVxdWlyZXMgWFJlZ0V4cCwgVW5pY29kZSBCYXNlXG4gICAgICovXG5cbiAgICBpZiAoIVhSZWdFeHAuYWRkVW5pY29kZURhdGEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCdVbmljb2RlIEJhc2UgbXVzdCBiZSBsb2FkZWQgYmVmb3JlIFVuaWNvZGUgQ2F0ZWdvcmllcycpO1xuICAgIH1cblxuICAgIFhSZWdFeHAuYWRkVW5pY29kZURhdGEoW3tcbiAgICAgICAgbmFtZTogJ0MnLFxuICAgICAgICBhbGlhczogJ090aGVyJyxcbiAgICAgICAgaXNCbXBMYXN0OiB0cnVlLFxuICAgICAgICBibXA6ICdcXDAtXFx4MUZcXHg3Ri1cXHg5RlxceEFEXFx1MDM3OFxcdTAzNzlcXHUwMzgwLVxcdTAzODNcXHUwMzhCXFx1MDM4RFxcdTAzQTJcXHUwNTMwXFx1MDU1N1xcdTA1NThcXHUwNTYwXFx1MDU4OFxcdTA1OEJcXHUwNThDXFx1MDU5MFxcdTA1QzgtXFx1MDVDRlxcdTA1RUItXFx1MDVFRlxcdTA1RjUtXFx1MDYwNVxcdTA2MUNcXHUwNjFEXFx1MDZERFxcdTA3MEVcXHUwNzBGXFx1MDc0QlxcdTA3NENcXHUwN0IyLVxcdTA3QkZcXHUwN0ZCLVxcdTA3RkZcXHUwODJFXFx1MDgyRlxcdTA4M0ZcXHUwODVDXFx1MDg1RFxcdTA4NUYtXFx1MDg5RlxcdTA4QjVcXHUwOEJFLVxcdTA4RDNcXHUwOEUyXFx1MDk4NFxcdTA5OERcXHUwOThFXFx1MDk5MVxcdTA5OTJcXHUwOUE5XFx1MDlCMVxcdTA5QjMtXFx1MDlCNVxcdTA5QkFcXHUwOUJCXFx1MDlDNVxcdTA5QzZcXHUwOUM5XFx1MDlDQVxcdTA5Q0YtXFx1MDlENlxcdTA5RDgtXFx1MDlEQlxcdTA5REVcXHUwOUU0XFx1MDlFNVxcdTA5RkMtXFx1MEEwMFxcdTBBMDRcXHUwQTBCLVxcdTBBMEVcXHUwQTExXFx1MEExMlxcdTBBMjlcXHUwQTMxXFx1MEEzNFxcdTBBMzdcXHUwQTNBXFx1MEEzQlxcdTBBM0RcXHUwQTQzLVxcdTBBNDZcXHUwQTQ5XFx1MEE0QVxcdTBBNEUtXFx1MEE1MFxcdTBBNTItXFx1MEE1OFxcdTBBNURcXHUwQTVGLVxcdTBBNjVcXHUwQTc2LVxcdTBBODBcXHUwQTg0XFx1MEE4RVxcdTBBOTJcXHUwQUE5XFx1MEFCMVxcdTBBQjRcXHUwQUJBXFx1MEFCQlxcdTBBQzZcXHUwQUNBXFx1MEFDRVxcdTBBQ0ZcXHUwQUQxLVxcdTBBREZcXHUwQUU0XFx1MEFFNVxcdTBBRjItXFx1MEFGOFxcdTBBRkEtXFx1MEIwMFxcdTBCMDRcXHUwQjBEXFx1MEIwRVxcdTBCMTFcXHUwQjEyXFx1MEIyOVxcdTBCMzFcXHUwQjM0XFx1MEIzQVxcdTBCM0JcXHUwQjQ1XFx1MEI0NlxcdTBCNDlcXHUwQjRBXFx1MEI0RS1cXHUwQjU1XFx1MEI1OC1cXHUwQjVCXFx1MEI1RVxcdTBCNjRcXHUwQjY1XFx1MEI3OC1cXHUwQjgxXFx1MEI4NFxcdTBCOEItXFx1MEI4RFxcdTBCOTFcXHUwQjk2LVxcdTBCOThcXHUwQjlCXFx1MEI5RFxcdTBCQTAtXFx1MEJBMlxcdTBCQTUtXFx1MEJBN1xcdTBCQUItXFx1MEJBRFxcdTBCQkEtXFx1MEJCRFxcdTBCQzMtXFx1MEJDNVxcdTBCQzlcXHUwQkNFXFx1MEJDRlxcdTBCRDEtXFx1MEJENlxcdTBCRDgtXFx1MEJFNVxcdTBCRkItXFx1MEJGRlxcdTBDMDRcXHUwQzBEXFx1MEMxMVxcdTBDMjlcXHUwQzNBLVxcdTBDM0NcXHUwQzQ1XFx1MEM0OVxcdTBDNEUtXFx1MEM1NFxcdTBDNTdcXHUwQzVCLVxcdTBDNUZcXHUwQzY0XFx1MEM2NVxcdTBDNzAtXFx1MEM3N1xcdTBDODRcXHUwQzhEXFx1MEM5MVxcdTBDQTlcXHUwQ0I0XFx1MENCQVxcdTBDQkJcXHUwQ0M1XFx1MENDOVxcdTBDQ0UtXFx1MENENFxcdTBDRDctXFx1MENERFxcdTBDREZcXHUwQ0U0XFx1MENFNVxcdTBDRjBcXHUwQ0YzLVxcdTBEMDBcXHUwRDA0XFx1MEQwRFxcdTBEMTFcXHUwRDNCXFx1MEQzQ1xcdTBENDVcXHUwRDQ5XFx1MEQ1MC1cXHUwRDUzXFx1MEQ2NFxcdTBENjVcXHUwRDgwXFx1MEQ4MVxcdTBEODRcXHUwRDk3LVxcdTBEOTlcXHUwREIyXFx1MERCQ1xcdTBEQkVcXHUwREJGXFx1MERDNy1cXHUwREM5XFx1MERDQi1cXHUwRENFXFx1MERENVxcdTBERDdcXHUwREUwLVxcdTBERTVcXHUwREYwXFx1MERGMVxcdTBERjUtXFx1MEUwMFxcdTBFM0ItXFx1MEUzRVxcdTBFNUMtXFx1MEU4MFxcdTBFODNcXHUwRTg1XFx1MEU4NlxcdTBFODlcXHUwRThCXFx1MEU4Q1xcdTBFOEUtXFx1MEU5M1xcdTBFOThcXHUwRUEwXFx1MEVBNFxcdTBFQTZcXHUwRUE4XFx1MEVBOVxcdTBFQUNcXHUwRUJBXFx1MEVCRVxcdTBFQkZcXHUwRUM1XFx1MEVDN1xcdTBFQ0VcXHUwRUNGXFx1MEVEQVxcdTBFREJcXHUwRUUwLVxcdTBFRkZcXHUwRjQ4XFx1MEY2RC1cXHUwRjcwXFx1MEY5OFxcdTBGQkRcXHUwRkNEXFx1MEZEQi1cXHUwRkZGXFx1MTBDNlxcdTEwQzgtXFx1MTBDQ1xcdTEwQ0VcXHUxMENGXFx1MTI0OVxcdTEyNEVcXHUxMjRGXFx1MTI1N1xcdTEyNTlcXHUxMjVFXFx1MTI1RlxcdTEyODlcXHUxMjhFXFx1MTI4RlxcdTEyQjFcXHUxMkI2XFx1MTJCN1xcdTEyQkZcXHUxMkMxXFx1MTJDNlxcdTEyQzdcXHUxMkQ3XFx1MTMxMVxcdTEzMTZcXHUxMzE3XFx1MTM1QlxcdTEzNUNcXHUxMzdELVxcdTEzN0ZcXHUxMzlBLVxcdTEzOUZcXHUxM0Y2XFx1MTNGN1xcdTEzRkVcXHUxM0ZGXFx1MTY5RC1cXHUxNjlGXFx1MTZGOS1cXHUxNkZGXFx1MTcwRFxcdTE3MTUtXFx1MTcxRlxcdTE3MzctXFx1MTczRlxcdTE3NTQtXFx1MTc1RlxcdTE3NkRcXHUxNzcxXFx1MTc3NC1cXHUxNzdGXFx1MTdERVxcdTE3REZcXHUxN0VBLVxcdTE3RUZcXHUxN0ZBLVxcdTE3RkZcXHUxODBFXFx1MTgwRlxcdTE4MUEtXFx1MTgxRlxcdTE4NzgtXFx1MTg3RlxcdTE4QUItXFx1MThBRlxcdTE4RjYtXFx1MThGRlxcdTE5MUZcXHUxOTJDLVxcdTE5MkZcXHUxOTNDLVxcdTE5M0ZcXHUxOTQxLVxcdTE5NDNcXHUxOTZFXFx1MTk2RlxcdTE5NzUtXFx1MTk3RlxcdTE5QUMtXFx1MTlBRlxcdTE5Q0EtXFx1MTlDRlxcdTE5REItXFx1MTlERFxcdTFBMUNcXHUxQTFEXFx1MUE1RlxcdTFBN0RcXHUxQTdFXFx1MUE4QS1cXHUxQThGXFx1MUE5QS1cXHUxQTlGXFx1MUFBRVxcdTFBQUZcXHUxQUJGLVxcdTFBRkZcXHUxQjRDLVxcdTFCNEZcXHUxQjdELVxcdTFCN0ZcXHUxQkY0LVxcdTFCRkJcXHUxQzM4LVxcdTFDM0FcXHUxQzRBLVxcdTFDNENcXHUxQzg5LVxcdTFDQkZcXHUxQ0M4LVxcdTFDQ0ZcXHUxQ0Y3XFx1MUNGQS1cXHUxQ0ZGXFx1MURGNi1cXHUxREZBXFx1MUYxNlxcdTFGMTdcXHUxRjFFXFx1MUYxRlxcdTFGNDZcXHUxRjQ3XFx1MUY0RVxcdTFGNEZcXHUxRjU4XFx1MUY1QVxcdTFGNUNcXHUxRjVFXFx1MUY3RVxcdTFGN0ZcXHUxRkI1XFx1MUZDNVxcdTFGRDRcXHUxRkQ1XFx1MUZEQ1xcdTFGRjBcXHUxRkYxXFx1MUZGNVxcdTFGRkZcXHUyMDBCLVxcdTIwMEZcXHUyMDJBLVxcdTIwMkVcXHUyMDYwLVxcdTIwNkZcXHUyMDcyXFx1MjA3M1xcdTIwOEZcXHUyMDlELVxcdTIwOUZcXHUyMEJGLVxcdTIwQ0ZcXHUyMEYxLVxcdTIwRkZcXHUyMThDLVxcdTIxOEZcXHUyM0ZGXFx1MjQyNy1cXHUyNDNGXFx1MjQ0Qi1cXHUyNDVGXFx1MkI3NFxcdTJCNzVcXHUyQjk2XFx1MkI5N1xcdTJCQkEtXFx1MkJCQ1xcdTJCQzlcXHUyQkQyLVxcdTJCRUJcXHUyQkYwLVxcdTJCRkZcXHUyQzJGXFx1MkM1RlxcdTJDRjQtXFx1MkNGOFxcdTJEMjZcXHUyRDI4LVxcdTJEMkNcXHUyRDJFXFx1MkQyRlxcdTJENjgtXFx1MkQ2RVxcdTJENzEtXFx1MkQ3RVxcdTJEOTctXFx1MkQ5RlxcdTJEQTdcXHUyREFGXFx1MkRCN1xcdTJEQkZcXHUyREM3XFx1MkRDRlxcdTJERDdcXHUyRERGXFx1MkU0NS1cXHUyRTdGXFx1MkU5QVxcdTJFRjQtXFx1MkVGRlxcdTJGRDYtXFx1MkZFRlxcdTJGRkMtXFx1MkZGRlxcdTMwNDBcXHUzMDk3XFx1MzA5OFxcdTMxMDAtXFx1MzEwNFxcdTMxMkUtXFx1MzEzMFxcdTMxOEZcXHUzMUJCLVxcdTMxQkZcXHUzMUU0LVxcdTMxRUZcXHUzMjFGXFx1MzJGRlxcdTREQjYtXFx1NERCRlxcdTlGRDYtXFx1OUZGRlxcdUE0OEQtXFx1QTQ4RlxcdUE0QzctXFx1QTRDRlxcdUE2MkMtXFx1QTYzRlxcdUE2RjgtXFx1QTZGRlxcdUE3QUZcXHVBN0I4LVxcdUE3RjZcXHVBODJDLVxcdUE4MkZcXHVBODNBLVxcdUE4M0ZcXHVBODc4LVxcdUE4N0ZcXHVBOEM2LVxcdUE4Q0RcXHVBOERBLVxcdUE4REZcXHVBOEZFXFx1QThGRlxcdUE5NTQtXFx1QTk1RVxcdUE5N0QtXFx1QTk3RlxcdUE5Q0VcXHVBOURBLVxcdUE5RERcXHVBOUZGXFx1QUEzNy1cXHVBQTNGXFx1QUE0RVxcdUFBNEZcXHVBQTVBXFx1QUE1QlxcdUFBQzMtXFx1QUFEQVxcdUFBRjctXFx1QUIwMFxcdUFCMDdcXHVBQjA4XFx1QUIwRlxcdUFCMTBcXHVBQjE3LVxcdUFCMUZcXHVBQjI3XFx1QUIyRlxcdUFCNjYtXFx1QUI2RlxcdUFCRUVcXHVBQkVGXFx1QUJGQS1cXHVBQkZGXFx1RDdBNC1cXHVEN0FGXFx1RDdDNy1cXHVEN0NBXFx1RDdGQy1cXHVGOEZGXFx1RkE2RVxcdUZBNkZcXHVGQURBLVxcdUZBRkZcXHVGQjA3LVxcdUZCMTJcXHVGQjE4LVxcdUZCMUNcXHVGQjM3XFx1RkIzRFxcdUZCM0ZcXHVGQjQyXFx1RkI0NVxcdUZCQzItXFx1RkJEMlxcdUZENDAtXFx1RkQ0RlxcdUZEOTBcXHVGRDkxXFx1RkRDOC1cXHVGREVGXFx1RkRGRVxcdUZERkZcXHVGRTFBLVxcdUZFMUZcXHVGRTUzXFx1RkU2N1xcdUZFNkMtXFx1RkU2RlxcdUZFNzVcXHVGRUZELVxcdUZGMDBcXHVGRkJGLVxcdUZGQzFcXHVGRkM4XFx1RkZDOVxcdUZGRDBcXHVGRkQxXFx1RkZEOFxcdUZGRDlcXHVGRkRELVxcdUZGREZcXHVGRkU3XFx1RkZFRi1cXHVGRkZCXFx1RkZGRVxcdUZGRkYnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdURDMENcXHVEQzI3XFx1REMzQlxcdURDM0VcXHVEQzRFXFx1REM0RlxcdURDNUUtXFx1REM3RlxcdURDRkItXFx1RENGRlxcdUREMDMtXFx1REQwNlxcdUREMzQtXFx1REQzNlxcdUREOEZcXHVERDlDLVxcdUREOUZcXHVEREExLVxcdUREQ0ZcXHVEREZFLVxcdURFN0ZcXHVERTlELVxcdURFOUZcXHVERUQxLVxcdURFREZcXHVERUZDLVxcdURFRkZcXHVERjI0LVxcdURGMkZcXHVERjRCLVxcdURGNEZcXHVERjdCLVxcdURGN0ZcXHVERjlFXFx1REZDNC1cXHVERkM3XFx1REZENi1cXHVERkZGXXxcXHVEODAxW1xcdURDOUVcXHVEQzlGXFx1RENBQS1cXHVEQ0FGXFx1RENENC1cXHVEQ0Q3XFx1RENGQy1cXHVEQ0ZGXFx1REQyOC1cXHVERDJGXFx1REQ2NC1cXHVERDZFXFx1REQ3MC1cXHVEREZGXFx1REYzNy1cXHVERjNGXFx1REY1Ni1cXHVERjVGXFx1REY2OC1cXHVERkZGXXxcXHVEODAyW1xcdURDMDZcXHVEQzA3XFx1REMwOVxcdURDMzZcXHVEQzM5LVxcdURDM0JcXHVEQzNEXFx1REMzRVxcdURDNTZcXHVEQzlGLVxcdURDQTZcXHVEQ0IwLVxcdURDREZcXHVEQ0YzXFx1RENGNi1cXHVEQ0ZBXFx1REQxQy1cXHVERDFFXFx1REQzQS1cXHVERDNFXFx1REQ0MC1cXHVERDdGXFx1RERCOC1cXHVEREJCXFx1REREMFxcdURERDFcXHVERTA0XFx1REUwNy1cXHVERTBCXFx1REUxNFxcdURFMThcXHVERTM0LVxcdURFMzdcXHVERTNCLVxcdURFM0VcXHVERTQ4LVxcdURFNEZcXHVERTU5LVxcdURFNUZcXHVERUEwLVxcdURFQkZcXHVERUU3LVxcdURFRUFcXHVERUY3LVxcdURFRkZcXHVERjM2LVxcdURGMzhcXHVERjU2XFx1REY1N1xcdURGNzMtXFx1REY3N1xcdURGOTItXFx1REY5OFxcdURGOUQtXFx1REZBOFxcdURGQjAtXFx1REZGRl18XFx1RDgwM1tcXHVEQzQ5LVxcdURDN0ZcXHVEQ0IzLVxcdURDQkZcXHVEQ0YzLVxcdURDRjlcXHVERDAwLVxcdURFNUZcXHVERTdGLVxcdURGRkZdfFxcdUQ4MDRbXFx1REM0RS1cXHVEQzUxXFx1REM3MC1cXHVEQzdFXFx1RENCRFxcdURDQzItXFx1RENDRlxcdURDRTktXFx1RENFRlxcdURDRkEtXFx1RENGRlxcdUREMzVcXHVERDQ0LVxcdURENEZcXHVERDc3LVxcdUREN0ZcXHVERENFXFx1RERDRlxcdURERTBcXHVEREY1LVxcdURERkZcXHVERTEyXFx1REUzRi1cXHVERTdGXFx1REU4N1xcdURFODlcXHVERThFXFx1REU5RVxcdURFQUEtXFx1REVBRlxcdURFRUItXFx1REVFRlxcdURFRkEtXFx1REVGRlxcdURGMDRcXHVERjBEXFx1REYwRVxcdURGMTFcXHVERjEyXFx1REYyOVxcdURGMzFcXHVERjM0XFx1REYzQVxcdURGM0JcXHVERjQ1XFx1REY0NlxcdURGNDlcXHVERjRBXFx1REY0RVxcdURGNEZcXHVERjUxLVxcdURGNTZcXHVERjU4LVxcdURGNUNcXHVERjY0XFx1REY2NVxcdURGNkQtXFx1REY2RlxcdURGNzUtXFx1REZGRl18XFx1RDgwNVtcXHVEQzVBXFx1REM1Q1xcdURDNUUtXFx1REM3RlxcdURDQzgtXFx1RENDRlxcdURDREEtXFx1REQ3RlxcdUREQjZcXHVEREI3XFx1RERERS1cXHVEREZGXFx1REU0NS1cXHVERTRGXFx1REU1QS1cXHVERTVGXFx1REU2RC1cXHVERTdGXFx1REVCOC1cXHVERUJGXFx1REVDQS1cXHVERUZGXFx1REYxQS1cXHVERjFDXFx1REYyQy1cXHVERjJGXFx1REY0MC1cXHVERkZGXXxcXHVEODA2W1xcdURDMDAtXFx1REM5RlxcdURDRjMtXFx1RENGRVxcdUREMDAtXFx1REVCRlxcdURFRjktXFx1REZGRl18XFx1RDgwN1tcXHVEQzA5XFx1REMzN1xcdURDNDYtXFx1REM0RlxcdURDNkQtXFx1REM2RlxcdURDOTBcXHVEQzkxXFx1RENBOFxcdURDQjctXFx1REZGRl18XFx1RDgwOFtcXHVERjlBLVxcdURGRkZdfFxcdUQ4MDlbXFx1REM2RlxcdURDNzUtXFx1REM3RlxcdURENDQtXFx1REZGRl18W1xcdUQ4MEFcXHVEODBCXFx1RDgwRS1cXHVEODEwXFx1RDgxMi1cXHVEODE5XFx1RDgyMy1cXHVEODJCXFx1RDgyRFxcdUQ4MkVcXHVEODMwLVxcdUQ4MzNcXHVEODM3XFx1RDgzOVxcdUQ4M0ZcXHVEODc0LVxcdUQ4N0RcXHVEODdGLVxcdURCM0ZcXHVEQjQxLVxcdURCRkZdW1xcdURDMDAtXFx1REZGRl18XFx1RDgwRFtcXHVEQzJGLVxcdURGRkZdfFxcdUQ4MTFbXFx1REU0Ny1cXHVERkZGXXxcXHVEODFBW1xcdURFMzktXFx1REUzRlxcdURFNUZcXHVERTZBLVxcdURFNkRcXHVERTcwLVxcdURFQ0ZcXHVERUVFXFx1REVFRlxcdURFRjYtXFx1REVGRlxcdURGNDYtXFx1REY0RlxcdURGNUFcXHVERjYyXFx1REY3OC1cXHVERjdDXFx1REY5MC1cXHVERkZGXXxcXHVEODFCW1xcdURDMDAtXFx1REVGRlxcdURGNDUtXFx1REY0RlxcdURGN0YtXFx1REY4RVxcdURGQTAtXFx1REZERlxcdURGRTEtXFx1REZGRl18XFx1RDgyMVtcXHVERkVELVxcdURGRkZdfFxcdUQ4MjJbXFx1REVGMy1cXHVERkZGXXxcXHVEODJDW1xcdURDMDItXFx1REZGRl18XFx1RDgyRltcXHVEQzZCLVxcdURDNkZcXHVEQzdELVxcdURDN0ZcXHVEQzg5LVxcdURDOEZcXHVEQzlBXFx1REM5QlxcdURDQTAtXFx1REZGRl18XFx1RDgzNFtcXHVEQ0Y2LVxcdURDRkZcXHVERDI3XFx1REQyOFxcdURENzMtXFx1REQ3QVxcdURERTktXFx1RERGRlxcdURFNDYtXFx1REVGRlxcdURGNTctXFx1REY1RlxcdURGNzItXFx1REZGRl18XFx1RDgzNVtcXHVEQzU1XFx1REM5RFxcdURDQTBcXHVEQ0ExXFx1RENBM1xcdURDQTRcXHVEQ0E3XFx1RENBOFxcdURDQURcXHVEQ0JBXFx1RENCQ1xcdURDQzRcXHVERDA2XFx1REQwQlxcdUREMENcXHVERDE1XFx1REQxRFxcdUREM0FcXHVERDNGXFx1REQ0NVxcdURENDctXFx1REQ0OVxcdURENTFcXHVERUE2XFx1REVBN1xcdURGQ0NcXHVERkNEXXxcXHVEODM2W1xcdURFOEMtXFx1REU5QVxcdURFQTBcXHVERUIwLVxcdURGRkZdfFxcdUQ4MzhbXFx1REMwN1xcdURDMTlcXHVEQzFBXFx1REMyMlxcdURDMjVcXHVEQzJCLVxcdURGRkZdfFxcdUQ4M0FbXFx1RENDNVxcdURDQzZcXHVEQ0Q3LVxcdURDRkZcXHVERDRCLVxcdURENEZcXHVERDVBLVxcdURENURcXHVERDYwLVxcdURGRkZdfFxcdUQ4M0JbXFx1REMwMC1cXHVEREZGXFx1REUwNFxcdURFMjBcXHVERTIzXFx1REUyNVxcdURFMjZcXHVERTI4XFx1REUzM1xcdURFMzhcXHVERTNBXFx1REUzQy1cXHVERTQxXFx1REU0My1cXHVERTQ2XFx1REU0OFxcdURFNEFcXHVERTRDXFx1REU1MFxcdURFNTNcXHVERTU1XFx1REU1NlxcdURFNThcXHVERTVBXFx1REU1Q1xcdURFNUVcXHVERTYwXFx1REU2M1xcdURFNjVcXHVERTY2XFx1REU2QlxcdURFNzNcXHVERTc4XFx1REU3RFxcdURFN0ZcXHVERThBXFx1REU5Qy1cXHVERUEwXFx1REVBNFxcdURFQUFcXHVERUJDLVxcdURFRUZcXHVERUYyLVxcdURGRkZdfFxcdUQ4M0NbXFx1REMyQy1cXHVEQzJGXFx1REM5NC1cXHVEQzlGXFx1RENBRlxcdURDQjBcXHVEQ0MwXFx1RENEMFxcdURDRjYtXFx1RENGRlxcdUREMEQtXFx1REQwRlxcdUREMkZcXHVERDZDLVxcdURENkZcXHVEREFELVxcdURERTVcXHVERTAzLVxcdURFMEZcXHVERTNDLVxcdURFM0ZcXHVERTQ5LVxcdURFNEZcXHVERTUyLVxcdURFRkZdfFxcdUQ4M0RbXFx1REVEMy1cXHVERURGXFx1REVFRC1cXHVERUVGXFx1REVGNy1cXHVERUZGXFx1REY3NC1cXHVERjdGXFx1REZENS1cXHVERkZGXXxcXHVEODNFW1xcdURDMEMtXFx1REMwRlxcdURDNDgtXFx1REM0RlxcdURDNUEtXFx1REM1RlxcdURDODgtXFx1REM4RlxcdURDQUUtXFx1REQwRlxcdUREMUZcXHVERDI4LVxcdUREMkZcXHVERDMxXFx1REQzMlxcdUREM0ZcXHVERDRDLVxcdURENEZcXHVERDVGLVxcdUREN0ZcXHVERDkyLVxcdUREQkZcXHVEREMxLVxcdURGRkZdfFxcdUQ4NjlbXFx1REVENy1cXHVERUZGXXxcXHVEODZEW1xcdURGMzUtXFx1REYzRl18XFx1RDg2RVtcXHVEQzFFXFx1REMxRl18XFx1RDg3M1tcXHVERUEyLVxcdURGRkZdfFxcdUQ4N0VbXFx1REUxRS1cXHVERkZGXXxcXHVEQjQwW1xcdURDMDAtXFx1RENGRlxcdURERjAtXFx1REZGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQ2MnLFxuICAgICAgICBhbGlhczogJ0NvbnRyb2wnLFxuICAgICAgICBibXA6ICdcXDAtXFx4MUZcXHg3Ri1cXHg5RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDZicsXG4gICAgICAgIGFsaWFzOiAnRm9ybWF0JyxcbiAgICAgICAgYm1wOiAnXFx4QURcXHUwNjAwLVxcdTA2MDVcXHUwNjFDXFx1MDZERFxcdTA3MEZcXHUwOEUyXFx1MTgwRVxcdTIwMEItXFx1MjAwRlxcdTIwMkEtXFx1MjAyRVxcdTIwNjAtXFx1MjA2NFxcdTIwNjYtXFx1MjA2RlxcdUZFRkZcXHVGRkY5LVxcdUZGRkInLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA0XFx1RENCRHxcXHVEODJGW1xcdURDQTAtXFx1RENBM118XFx1RDgzNFtcXHVERDczLVxcdUREN0FdfFxcdURCNDBbXFx1REMwMVxcdURDMjAtXFx1REM3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQ24nLFxuICAgICAgICBhbGlhczogJ1VuYXNzaWduZWQnLFxuICAgICAgICBibXA6ICdcXHUwMzc4XFx1MDM3OVxcdTAzODAtXFx1MDM4M1xcdTAzOEJcXHUwMzhEXFx1MDNBMlxcdTA1MzBcXHUwNTU3XFx1MDU1OFxcdTA1NjBcXHUwNTg4XFx1MDU4QlxcdTA1OENcXHUwNTkwXFx1MDVDOC1cXHUwNUNGXFx1MDVFQi1cXHUwNUVGXFx1MDVGNS1cXHUwNUZGXFx1MDYxRFxcdTA3MEVcXHUwNzRCXFx1MDc0Q1xcdTA3QjItXFx1MDdCRlxcdTA3RkItXFx1MDdGRlxcdTA4MkVcXHUwODJGXFx1MDgzRlxcdTA4NUNcXHUwODVEXFx1MDg1Ri1cXHUwODlGXFx1MDhCNVxcdTA4QkUtXFx1MDhEM1xcdTA5ODRcXHUwOThEXFx1MDk4RVxcdTA5OTFcXHUwOTkyXFx1MDlBOVxcdTA5QjFcXHUwOUIzLVxcdTA5QjVcXHUwOUJBXFx1MDlCQlxcdTA5QzVcXHUwOUM2XFx1MDlDOVxcdTA5Q0FcXHUwOUNGLVxcdTA5RDZcXHUwOUQ4LVxcdTA5REJcXHUwOURFXFx1MDlFNFxcdTA5RTVcXHUwOUZDLVxcdTBBMDBcXHUwQTA0XFx1MEEwQi1cXHUwQTBFXFx1MEExMVxcdTBBMTJcXHUwQTI5XFx1MEEzMVxcdTBBMzRcXHUwQTM3XFx1MEEzQVxcdTBBM0JcXHUwQTNEXFx1MEE0My1cXHUwQTQ2XFx1MEE0OVxcdTBBNEFcXHUwQTRFLVxcdTBBNTBcXHUwQTUyLVxcdTBBNThcXHUwQTVEXFx1MEE1Ri1cXHUwQTY1XFx1MEE3Ni1cXHUwQTgwXFx1MEE4NFxcdTBBOEVcXHUwQTkyXFx1MEFBOVxcdTBBQjFcXHUwQUI0XFx1MEFCQVxcdTBBQkJcXHUwQUM2XFx1MEFDQVxcdTBBQ0VcXHUwQUNGXFx1MEFEMS1cXHUwQURGXFx1MEFFNFxcdTBBRTVcXHUwQUYyLVxcdTBBRjhcXHUwQUZBLVxcdTBCMDBcXHUwQjA0XFx1MEIwRFxcdTBCMEVcXHUwQjExXFx1MEIxMlxcdTBCMjlcXHUwQjMxXFx1MEIzNFxcdTBCM0FcXHUwQjNCXFx1MEI0NVxcdTBCNDZcXHUwQjQ5XFx1MEI0QVxcdTBCNEUtXFx1MEI1NVxcdTBCNTgtXFx1MEI1QlxcdTBCNUVcXHUwQjY0XFx1MEI2NVxcdTBCNzgtXFx1MEI4MVxcdTBCODRcXHUwQjhCLVxcdTBCOERcXHUwQjkxXFx1MEI5Ni1cXHUwQjk4XFx1MEI5QlxcdTBCOURcXHUwQkEwLVxcdTBCQTJcXHUwQkE1LVxcdTBCQTdcXHUwQkFCLVxcdTBCQURcXHUwQkJBLVxcdTBCQkRcXHUwQkMzLVxcdTBCQzVcXHUwQkM5XFx1MEJDRVxcdTBCQ0ZcXHUwQkQxLVxcdTBCRDZcXHUwQkQ4LVxcdTBCRTVcXHUwQkZCLVxcdTBCRkZcXHUwQzA0XFx1MEMwRFxcdTBDMTFcXHUwQzI5XFx1MEMzQS1cXHUwQzNDXFx1MEM0NVxcdTBDNDlcXHUwQzRFLVxcdTBDNTRcXHUwQzU3XFx1MEM1Qi1cXHUwQzVGXFx1MEM2NFxcdTBDNjVcXHUwQzcwLVxcdTBDNzdcXHUwQzg0XFx1MEM4RFxcdTBDOTFcXHUwQ0E5XFx1MENCNFxcdTBDQkFcXHUwQ0JCXFx1MENDNVxcdTBDQzlcXHUwQ0NFLVxcdTBDRDRcXHUwQ0Q3LVxcdTBDRERcXHUwQ0RGXFx1MENFNFxcdTBDRTVcXHUwQ0YwXFx1MENGMy1cXHUwRDAwXFx1MEQwNFxcdTBEMERcXHUwRDExXFx1MEQzQlxcdTBEM0NcXHUwRDQ1XFx1MEQ0OVxcdTBENTAtXFx1MEQ1M1xcdTBENjRcXHUwRDY1XFx1MEQ4MFxcdTBEODFcXHUwRDg0XFx1MEQ5Ny1cXHUwRDk5XFx1MERCMlxcdTBEQkNcXHUwREJFXFx1MERCRlxcdTBEQzctXFx1MERDOVxcdTBEQ0ItXFx1MERDRVxcdTBERDVcXHUwREQ3XFx1MERFMC1cXHUwREU1XFx1MERGMFxcdTBERjFcXHUwREY1LVxcdTBFMDBcXHUwRTNCLVxcdTBFM0VcXHUwRTVDLVxcdTBFODBcXHUwRTgzXFx1MEU4NVxcdTBFODZcXHUwRTg5XFx1MEU4QlxcdTBFOENcXHUwRThFLVxcdTBFOTNcXHUwRTk4XFx1MEVBMFxcdTBFQTRcXHUwRUE2XFx1MEVBOFxcdTBFQTlcXHUwRUFDXFx1MEVCQVxcdTBFQkVcXHUwRUJGXFx1MEVDNVxcdTBFQzdcXHUwRUNFXFx1MEVDRlxcdTBFREFcXHUwRURCXFx1MEVFMC1cXHUwRUZGXFx1MEY0OFxcdTBGNkQtXFx1MEY3MFxcdTBGOThcXHUwRkJEXFx1MEZDRFxcdTBGREItXFx1MEZGRlxcdTEwQzZcXHUxMEM4LVxcdTEwQ0NcXHUxMENFXFx1MTBDRlxcdTEyNDlcXHUxMjRFXFx1MTI0RlxcdTEyNTdcXHUxMjU5XFx1MTI1RVxcdTEyNUZcXHUxMjg5XFx1MTI4RVxcdTEyOEZcXHUxMkIxXFx1MTJCNlxcdTEyQjdcXHUxMkJGXFx1MTJDMVxcdTEyQzZcXHUxMkM3XFx1MTJEN1xcdTEzMTFcXHUxMzE2XFx1MTMxN1xcdTEzNUJcXHUxMzVDXFx1MTM3RC1cXHUxMzdGXFx1MTM5QS1cXHUxMzlGXFx1MTNGNlxcdTEzRjdcXHUxM0ZFXFx1MTNGRlxcdTE2OUQtXFx1MTY5RlxcdTE2RjktXFx1MTZGRlxcdTE3MERcXHUxNzE1LVxcdTE3MUZcXHUxNzM3LVxcdTE3M0ZcXHUxNzU0LVxcdTE3NUZcXHUxNzZEXFx1MTc3MVxcdTE3NzQtXFx1MTc3RlxcdTE3REVcXHUxN0RGXFx1MTdFQS1cXHUxN0VGXFx1MTdGQS1cXHUxN0ZGXFx1MTgwRlxcdTE4MUEtXFx1MTgxRlxcdTE4NzgtXFx1MTg3RlxcdTE4QUItXFx1MThBRlxcdTE4RjYtXFx1MThGRlxcdTE5MUZcXHUxOTJDLVxcdTE5MkZcXHUxOTNDLVxcdTE5M0ZcXHUxOTQxLVxcdTE5NDNcXHUxOTZFXFx1MTk2RlxcdTE5NzUtXFx1MTk3RlxcdTE5QUMtXFx1MTlBRlxcdTE5Q0EtXFx1MTlDRlxcdTE5REItXFx1MTlERFxcdTFBMUNcXHUxQTFEXFx1MUE1RlxcdTFBN0RcXHUxQTdFXFx1MUE4QS1cXHUxQThGXFx1MUE5QS1cXHUxQTlGXFx1MUFBRVxcdTFBQUZcXHUxQUJGLVxcdTFBRkZcXHUxQjRDLVxcdTFCNEZcXHUxQjdELVxcdTFCN0ZcXHUxQkY0LVxcdTFCRkJcXHUxQzM4LVxcdTFDM0FcXHUxQzRBLVxcdTFDNENcXHUxQzg5LVxcdTFDQkZcXHUxQ0M4LVxcdTFDQ0ZcXHUxQ0Y3XFx1MUNGQS1cXHUxQ0ZGXFx1MURGNi1cXHUxREZBXFx1MUYxNlxcdTFGMTdcXHUxRjFFXFx1MUYxRlxcdTFGNDZcXHUxRjQ3XFx1MUY0RVxcdTFGNEZcXHUxRjU4XFx1MUY1QVxcdTFGNUNcXHUxRjVFXFx1MUY3RVxcdTFGN0ZcXHUxRkI1XFx1MUZDNVxcdTFGRDRcXHUxRkQ1XFx1MUZEQ1xcdTFGRjBcXHUxRkYxXFx1MUZGNVxcdTFGRkZcXHUyMDY1XFx1MjA3MlxcdTIwNzNcXHUyMDhGXFx1MjA5RC1cXHUyMDlGXFx1MjBCRi1cXHUyMENGXFx1MjBGMS1cXHUyMEZGXFx1MjE4Qy1cXHUyMThGXFx1MjNGRlxcdTI0MjctXFx1MjQzRlxcdTI0NEItXFx1MjQ1RlxcdTJCNzRcXHUyQjc1XFx1MkI5NlxcdTJCOTdcXHUyQkJBLVxcdTJCQkNcXHUyQkM5XFx1MkJEMi1cXHUyQkVCXFx1MkJGMC1cXHUyQkZGXFx1MkMyRlxcdTJDNUZcXHUyQ0Y0LVxcdTJDRjhcXHUyRDI2XFx1MkQyOC1cXHUyRDJDXFx1MkQyRVxcdTJEMkZcXHUyRDY4LVxcdTJENkVcXHUyRDcxLVxcdTJEN0VcXHUyRDk3LVxcdTJEOUZcXHUyREE3XFx1MkRBRlxcdTJEQjdcXHUyREJGXFx1MkRDN1xcdTJEQ0ZcXHUyREQ3XFx1MkRERlxcdTJFNDUtXFx1MkU3RlxcdTJFOUFcXHUyRUY0LVxcdTJFRkZcXHUyRkQ2LVxcdTJGRUZcXHUyRkZDLVxcdTJGRkZcXHUzMDQwXFx1MzA5N1xcdTMwOThcXHUzMTAwLVxcdTMxMDRcXHUzMTJFLVxcdTMxMzBcXHUzMThGXFx1MzFCQi1cXHUzMUJGXFx1MzFFNC1cXHUzMUVGXFx1MzIxRlxcdTMyRkZcXHU0REI2LVxcdTREQkZcXHU5RkQ2LVxcdTlGRkZcXHVBNDhELVxcdUE0OEZcXHVBNEM3LVxcdUE0Q0ZcXHVBNjJDLVxcdUE2M0ZcXHVBNkY4LVxcdUE2RkZcXHVBN0FGXFx1QTdCOC1cXHVBN0Y2XFx1QTgyQy1cXHVBODJGXFx1QTgzQS1cXHVBODNGXFx1QTg3OC1cXHVBODdGXFx1QThDNi1cXHVBOENEXFx1QThEQS1cXHVBOERGXFx1QThGRVxcdUE4RkZcXHVBOTU0LVxcdUE5NUVcXHVBOTdELVxcdUE5N0ZcXHVBOUNFXFx1QTlEQS1cXHVBOUREXFx1QTlGRlxcdUFBMzctXFx1QUEzRlxcdUFBNEVcXHVBQTRGXFx1QUE1QVxcdUFBNUJcXHVBQUMzLVxcdUFBREFcXHVBQUY3LVxcdUFCMDBcXHVBQjA3XFx1QUIwOFxcdUFCMEZcXHVBQjEwXFx1QUIxNy1cXHVBQjFGXFx1QUIyN1xcdUFCMkZcXHVBQjY2LVxcdUFCNkZcXHVBQkVFXFx1QUJFRlxcdUFCRkEtXFx1QUJGRlxcdUQ3QTQtXFx1RDdBRlxcdUQ3QzctXFx1RDdDQVxcdUQ3RkMtXFx1RDdGRlxcdUZBNkVcXHVGQTZGXFx1RkFEQS1cXHVGQUZGXFx1RkIwNy1cXHVGQjEyXFx1RkIxOC1cXHVGQjFDXFx1RkIzN1xcdUZCM0RcXHVGQjNGXFx1RkI0MlxcdUZCNDVcXHVGQkMyLVxcdUZCRDJcXHVGRDQwLVxcdUZENEZcXHVGRDkwXFx1RkQ5MVxcdUZEQzgtXFx1RkRFRlxcdUZERkVcXHVGREZGXFx1RkUxQS1cXHVGRTFGXFx1RkU1M1xcdUZFNjdcXHVGRTZDLVxcdUZFNkZcXHVGRTc1XFx1RkVGRFxcdUZFRkVcXHVGRjAwXFx1RkZCRi1cXHVGRkMxXFx1RkZDOFxcdUZGQzlcXHVGRkQwXFx1RkZEMVxcdUZGRDhcXHVGRkQ5XFx1RkZERC1cXHVGRkRGXFx1RkZFN1xcdUZGRUYtXFx1RkZGOFxcdUZGRkVcXHVGRkZGJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVEQzBDXFx1REMyN1xcdURDM0JcXHVEQzNFXFx1REM0RVxcdURDNEZcXHVEQzVFLVxcdURDN0ZcXHVEQ0ZCLVxcdURDRkZcXHVERDAzLVxcdUREMDZcXHVERDM0LVxcdUREMzZcXHVERDhGXFx1REQ5Qy1cXHVERDlGXFx1RERBMS1cXHVERENGXFx1RERGRS1cXHVERTdGXFx1REU5RC1cXHVERTlGXFx1REVEMS1cXHVERURGXFx1REVGQy1cXHVERUZGXFx1REYyNC1cXHVERjJGXFx1REY0Qi1cXHVERjRGXFx1REY3Qi1cXHVERjdGXFx1REY5RVxcdURGQzQtXFx1REZDN1xcdURGRDYtXFx1REZGRl18XFx1RDgwMVtcXHVEQzlFXFx1REM5RlxcdURDQUEtXFx1RENBRlxcdURDRDQtXFx1RENEN1xcdURDRkMtXFx1RENGRlxcdUREMjgtXFx1REQyRlxcdURENjQtXFx1REQ2RVxcdURENzAtXFx1RERGRlxcdURGMzctXFx1REYzRlxcdURGNTYtXFx1REY1RlxcdURGNjgtXFx1REZGRl18XFx1RDgwMltcXHVEQzA2XFx1REMwN1xcdURDMDlcXHVEQzM2XFx1REMzOS1cXHVEQzNCXFx1REMzRFxcdURDM0VcXHVEQzU2XFx1REM5Ri1cXHVEQ0E2XFx1RENCMC1cXHVEQ0RGXFx1RENGM1xcdURDRjYtXFx1RENGQVxcdUREMUMtXFx1REQxRVxcdUREM0EtXFx1REQzRVxcdURENDAtXFx1REQ3RlxcdUREQjgtXFx1RERCQlxcdURERDBcXHVEREQxXFx1REUwNFxcdURFMDctXFx1REUwQlxcdURFMTRcXHVERTE4XFx1REUzNC1cXHVERTM3XFx1REUzQi1cXHVERTNFXFx1REU0OC1cXHVERTRGXFx1REU1OS1cXHVERTVGXFx1REVBMC1cXHVERUJGXFx1REVFNy1cXHVERUVBXFx1REVGNy1cXHVERUZGXFx1REYzNi1cXHVERjM4XFx1REY1NlxcdURGNTdcXHVERjczLVxcdURGNzdcXHVERjkyLVxcdURGOThcXHVERjlELVxcdURGQThcXHVERkIwLVxcdURGRkZdfFxcdUQ4MDNbXFx1REM0OS1cXHVEQzdGXFx1RENCMy1cXHVEQ0JGXFx1RENGMy1cXHVEQ0Y5XFx1REQwMC1cXHVERTVGXFx1REU3Ri1cXHVERkZGXXxcXHVEODA0W1xcdURDNEUtXFx1REM1MVxcdURDNzAtXFx1REM3RVxcdURDQzItXFx1RENDRlxcdURDRTktXFx1RENFRlxcdURDRkEtXFx1RENGRlxcdUREMzVcXHVERDQ0LVxcdURENEZcXHVERDc3LVxcdUREN0ZcXHVERENFXFx1RERDRlxcdURERTBcXHVEREY1LVxcdURERkZcXHVERTEyXFx1REUzRi1cXHVERTdGXFx1REU4N1xcdURFODlcXHVERThFXFx1REU5RVxcdURFQUEtXFx1REVBRlxcdURFRUItXFx1REVFRlxcdURFRkEtXFx1REVGRlxcdURGMDRcXHVERjBEXFx1REYwRVxcdURGMTFcXHVERjEyXFx1REYyOVxcdURGMzFcXHVERjM0XFx1REYzQVxcdURGM0JcXHVERjQ1XFx1REY0NlxcdURGNDlcXHVERjRBXFx1REY0RVxcdURGNEZcXHVERjUxLVxcdURGNTZcXHVERjU4LVxcdURGNUNcXHVERjY0XFx1REY2NVxcdURGNkQtXFx1REY2RlxcdURGNzUtXFx1REZGRl18XFx1RDgwNVtcXHVEQzVBXFx1REM1Q1xcdURDNUUtXFx1REM3RlxcdURDQzgtXFx1RENDRlxcdURDREEtXFx1REQ3RlxcdUREQjZcXHVEREI3XFx1RERERS1cXHVEREZGXFx1REU0NS1cXHVERTRGXFx1REU1QS1cXHVERTVGXFx1REU2RC1cXHVERTdGXFx1REVCOC1cXHVERUJGXFx1REVDQS1cXHVERUZGXFx1REYxQS1cXHVERjFDXFx1REYyQy1cXHVERjJGXFx1REY0MC1cXHVERkZGXXxcXHVEODA2W1xcdURDMDAtXFx1REM5RlxcdURDRjMtXFx1RENGRVxcdUREMDAtXFx1REVCRlxcdURFRjktXFx1REZGRl18XFx1RDgwN1tcXHVEQzA5XFx1REMzN1xcdURDNDYtXFx1REM0RlxcdURDNkQtXFx1REM2RlxcdURDOTBcXHVEQzkxXFx1RENBOFxcdURDQjctXFx1REZGRl18XFx1RDgwOFtcXHVERjlBLVxcdURGRkZdfFxcdUQ4MDlbXFx1REM2RlxcdURDNzUtXFx1REM3RlxcdURENDQtXFx1REZGRl18W1xcdUQ4MEFcXHVEODBCXFx1RDgwRS1cXHVEODEwXFx1RDgxMi1cXHVEODE5XFx1RDgyMy1cXHVEODJCXFx1RDgyRFxcdUQ4MkVcXHVEODMwLVxcdUQ4MzNcXHVEODM3XFx1RDgzOVxcdUQ4M0ZcXHVEODc0LVxcdUQ4N0RcXHVEODdGLVxcdURCM0ZcXHVEQjQxLVxcdURCN0ZdW1xcdURDMDAtXFx1REZGRl18XFx1RDgwRFtcXHVEQzJGLVxcdURGRkZdfFxcdUQ4MTFbXFx1REU0Ny1cXHVERkZGXXxcXHVEODFBW1xcdURFMzktXFx1REUzRlxcdURFNUZcXHVERTZBLVxcdURFNkRcXHVERTcwLVxcdURFQ0ZcXHVERUVFXFx1REVFRlxcdURFRjYtXFx1REVGRlxcdURGNDYtXFx1REY0RlxcdURGNUFcXHVERjYyXFx1REY3OC1cXHVERjdDXFx1REY5MC1cXHVERkZGXXxcXHVEODFCW1xcdURDMDAtXFx1REVGRlxcdURGNDUtXFx1REY0RlxcdURGN0YtXFx1REY4RVxcdURGQTAtXFx1REZERlxcdURGRTEtXFx1REZGRl18XFx1RDgyMVtcXHVERkVELVxcdURGRkZdfFxcdUQ4MjJbXFx1REVGMy1cXHVERkZGXXxcXHVEODJDW1xcdURDMDItXFx1REZGRl18XFx1RDgyRltcXHVEQzZCLVxcdURDNkZcXHVEQzdELVxcdURDN0ZcXHVEQzg5LVxcdURDOEZcXHVEQzlBXFx1REM5QlxcdURDQTQtXFx1REZGRl18XFx1RDgzNFtcXHVEQ0Y2LVxcdURDRkZcXHVERDI3XFx1REQyOFxcdURERTktXFx1RERGRlxcdURFNDYtXFx1REVGRlxcdURGNTctXFx1REY1RlxcdURGNzItXFx1REZGRl18XFx1RDgzNVtcXHVEQzU1XFx1REM5RFxcdURDQTBcXHVEQ0ExXFx1RENBM1xcdURDQTRcXHVEQ0E3XFx1RENBOFxcdURDQURcXHVEQ0JBXFx1RENCQ1xcdURDQzRcXHVERDA2XFx1REQwQlxcdUREMENcXHVERDE1XFx1REQxRFxcdUREM0FcXHVERDNGXFx1REQ0NVxcdURENDctXFx1REQ0OVxcdURENTFcXHVERUE2XFx1REVBN1xcdURGQ0NcXHVERkNEXXxcXHVEODM2W1xcdURFOEMtXFx1REU5QVxcdURFQTBcXHVERUIwLVxcdURGRkZdfFxcdUQ4MzhbXFx1REMwN1xcdURDMTlcXHVEQzFBXFx1REMyMlxcdURDMjVcXHVEQzJCLVxcdURGRkZdfFxcdUQ4M0FbXFx1RENDNVxcdURDQzZcXHVEQ0Q3LVxcdURDRkZcXHVERDRCLVxcdURENEZcXHVERDVBLVxcdURENURcXHVERDYwLVxcdURGRkZdfFxcdUQ4M0JbXFx1REMwMC1cXHVEREZGXFx1REUwNFxcdURFMjBcXHVERTIzXFx1REUyNVxcdURFMjZcXHVERTI4XFx1REUzM1xcdURFMzhcXHVERTNBXFx1REUzQy1cXHVERTQxXFx1REU0My1cXHVERTQ2XFx1REU0OFxcdURFNEFcXHVERTRDXFx1REU1MFxcdURFNTNcXHVERTU1XFx1REU1NlxcdURFNThcXHVERTVBXFx1REU1Q1xcdURFNUVcXHVERTYwXFx1REU2M1xcdURFNjVcXHVERTY2XFx1REU2QlxcdURFNzNcXHVERTc4XFx1REU3RFxcdURFN0ZcXHVERThBXFx1REU5Qy1cXHVERUEwXFx1REVBNFxcdURFQUFcXHVERUJDLVxcdURFRUZcXHVERUYyLVxcdURGRkZdfFxcdUQ4M0NbXFx1REMyQy1cXHVEQzJGXFx1REM5NC1cXHVEQzlGXFx1RENBRlxcdURDQjBcXHVEQ0MwXFx1RENEMFxcdURDRjYtXFx1RENGRlxcdUREMEQtXFx1REQwRlxcdUREMkZcXHVERDZDLVxcdURENkZcXHVEREFELVxcdURERTVcXHVERTAzLVxcdURFMEZcXHVERTNDLVxcdURFM0ZcXHVERTQ5LVxcdURFNEZcXHVERTUyLVxcdURFRkZdfFxcdUQ4M0RbXFx1REVEMy1cXHVERURGXFx1REVFRC1cXHVERUVGXFx1REVGNy1cXHVERUZGXFx1REY3NC1cXHVERjdGXFx1REZENS1cXHVERkZGXXxcXHVEODNFW1xcdURDMEMtXFx1REMwRlxcdURDNDgtXFx1REM0RlxcdURDNUEtXFx1REM1RlxcdURDODgtXFx1REM4RlxcdURDQUUtXFx1REQwRlxcdUREMUZcXHVERDI4LVxcdUREMkZcXHVERDMxXFx1REQzMlxcdUREM0ZcXHVERDRDLVxcdURENEZcXHVERDVGLVxcdUREN0ZcXHVERDkyLVxcdUREQkZcXHVEREMxLVxcdURGRkZdfFxcdUQ4NjlbXFx1REVENy1cXHVERUZGXXxcXHVEODZEW1xcdURGMzUtXFx1REYzRl18XFx1RDg2RVtcXHVEQzFFXFx1REMxRl18XFx1RDg3M1tcXHVERUEyLVxcdURGRkZdfFxcdUQ4N0VbXFx1REUxRS1cXHVERkZGXXxcXHVEQjQwW1xcdURDMDBcXHVEQzAyLVxcdURDMUZcXHVEQzgwLVxcdURDRkZcXHVEREYwLVxcdURGRkZdfFtcXHVEQkJGXFx1REJGRl1bXFx1REZGRVxcdURGRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NvJyxcbiAgICAgICAgYWxpYXM6ICdQcml2YXRlX1VzZScsXG4gICAgICAgIGJtcDogJ1xcdUUwMDAtXFx1RjhGRicsXG4gICAgICAgIGFzdHJhbDogJ1tcXHVEQjgwLVxcdURCQkVcXHVEQkMwLVxcdURCRkVdW1xcdURDMDAtXFx1REZGRl18W1xcdURCQkZcXHVEQkZGXVtcXHVEQzAwLVxcdURGRkRdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NzJyxcbiAgICAgICAgYWxpYXM6ICdTdXJyb2dhdGUnLFxuICAgICAgICBibXA6ICdcXHVEODAwLVxcdURGRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTCcsXG4gICAgICAgIGFsaWFzOiAnTGV0dGVyJyxcbiAgICAgICAgYm1wOiAnQS1aYS16XFx4QUFcXHhCNVxceEJBXFx4QzAtXFx4RDZcXHhEOC1cXHhGNlxceEY4LVxcdTAyQzFcXHUwMkM2LVxcdTAyRDFcXHUwMkUwLVxcdTAyRTRcXHUwMkVDXFx1MDJFRVxcdTAzNzAtXFx1MDM3NFxcdTAzNzZcXHUwMzc3XFx1MDM3QS1cXHUwMzdEXFx1MDM3RlxcdTAzODZcXHUwMzg4LVxcdTAzOEFcXHUwMzhDXFx1MDM4RS1cXHUwM0ExXFx1MDNBMy1cXHUwM0Y1XFx1MDNGNy1cXHUwNDgxXFx1MDQ4QS1cXHUwNTJGXFx1MDUzMS1cXHUwNTU2XFx1MDU1OVxcdTA1NjEtXFx1MDU4N1xcdTA1RDAtXFx1MDVFQVxcdTA1RjAtXFx1MDVGMlxcdTA2MjAtXFx1MDY0QVxcdTA2NkVcXHUwNjZGXFx1MDY3MS1cXHUwNkQzXFx1MDZENVxcdTA2RTVcXHUwNkU2XFx1MDZFRVxcdTA2RUZcXHUwNkZBLVxcdTA2RkNcXHUwNkZGXFx1MDcxMFxcdTA3MTItXFx1MDcyRlxcdTA3NEQtXFx1MDdBNVxcdTA3QjFcXHUwN0NBLVxcdTA3RUFcXHUwN0Y0XFx1MDdGNVxcdTA3RkFcXHUwODAwLVxcdTA4MTVcXHUwODFBXFx1MDgyNFxcdTA4MjhcXHUwODQwLVxcdTA4NThcXHUwOEEwLVxcdTA4QjRcXHUwOEI2LVxcdTA4QkRcXHUwOTA0LVxcdTA5MzlcXHUwOTNEXFx1MDk1MFxcdTA5NTgtXFx1MDk2MVxcdTA5NzEtXFx1MDk4MFxcdTA5ODUtXFx1MDk4Q1xcdTA5OEZcXHUwOTkwXFx1MDk5My1cXHUwOUE4XFx1MDlBQS1cXHUwOUIwXFx1MDlCMlxcdTA5QjYtXFx1MDlCOVxcdTA5QkRcXHUwOUNFXFx1MDlEQ1xcdTA5RERcXHUwOURGLVxcdTA5RTFcXHUwOUYwXFx1MDlGMVxcdTBBMDUtXFx1MEEwQVxcdTBBMEZcXHUwQTEwXFx1MEExMy1cXHUwQTI4XFx1MEEyQS1cXHUwQTMwXFx1MEEzMlxcdTBBMzNcXHUwQTM1XFx1MEEzNlxcdTBBMzhcXHUwQTM5XFx1MEE1OS1cXHUwQTVDXFx1MEE1RVxcdTBBNzItXFx1MEE3NFxcdTBBODUtXFx1MEE4RFxcdTBBOEYtXFx1MEE5MVxcdTBBOTMtXFx1MEFBOFxcdTBBQUEtXFx1MEFCMFxcdTBBQjJcXHUwQUIzXFx1MEFCNS1cXHUwQUI5XFx1MEFCRFxcdTBBRDBcXHUwQUUwXFx1MEFFMVxcdTBBRjlcXHUwQjA1LVxcdTBCMENcXHUwQjBGXFx1MEIxMFxcdTBCMTMtXFx1MEIyOFxcdTBCMkEtXFx1MEIzMFxcdTBCMzJcXHUwQjMzXFx1MEIzNS1cXHUwQjM5XFx1MEIzRFxcdTBCNUNcXHUwQjVEXFx1MEI1Ri1cXHUwQjYxXFx1MEI3MVxcdTBCODNcXHUwQjg1LVxcdTBCOEFcXHUwQjhFLVxcdTBCOTBcXHUwQjkyLVxcdTBCOTVcXHUwQjk5XFx1MEI5QVxcdTBCOUNcXHUwQjlFXFx1MEI5RlxcdTBCQTNcXHUwQkE0XFx1MEJBOC1cXHUwQkFBXFx1MEJBRS1cXHUwQkI5XFx1MEJEMFxcdTBDMDUtXFx1MEMwQ1xcdTBDMEUtXFx1MEMxMFxcdTBDMTItXFx1MEMyOFxcdTBDMkEtXFx1MEMzOVxcdTBDM0RcXHUwQzU4LVxcdTBDNUFcXHUwQzYwXFx1MEM2MVxcdTBDODBcXHUwQzg1LVxcdTBDOENcXHUwQzhFLVxcdTBDOTBcXHUwQzkyLVxcdTBDQThcXHUwQ0FBLVxcdTBDQjNcXHUwQ0I1LVxcdTBDQjlcXHUwQ0JEXFx1MENERVxcdTBDRTBcXHUwQ0UxXFx1MENGMVxcdTBDRjJcXHUwRDA1LVxcdTBEMENcXHUwRDBFLVxcdTBEMTBcXHUwRDEyLVxcdTBEM0FcXHUwRDNEXFx1MEQ0RVxcdTBENTQtXFx1MEQ1NlxcdTBENUYtXFx1MEQ2MVxcdTBEN0EtXFx1MEQ3RlxcdTBEODUtXFx1MEQ5NlxcdTBEOUEtXFx1MERCMVxcdTBEQjMtXFx1MERCQlxcdTBEQkRcXHUwREMwLVxcdTBEQzZcXHUwRTAxLVxcdTBFMzBcXHUwRTMyXFx1MEUzM1xcdTBFNDAtXFx1MEU0NlxcdTBFODFcXHUwRTgyXFx1MEU4NFxcdTBFODdcXHUwRTg4XFx1MEU4QVxcdTBFOERcXHUwRTk0LVxcdTBFOTdcXHUwRTk5LVxcdTBFOUZcXHUwRUExLVxcdTBFQTNcXHUwRUE1XFx1MEVBN1xcdTBFQUFcXHUwRUFCXFx1MEVBRC1cXHUwRUIwXFx1MEVCMlxcdTBFQjNcXHUwRUJEXFx1MEVDMC1cXHUwRUM0XFx1MEVDNlxcdTBFREMtXFx1MEVERlxcdTBGMDBcXHUwRjQwLVxcdTBGNDdcXHUwRjQ5LVxcdTBGNkNcXHUwRjg4LVxcdTBGOENcXHUxMDAwLVxcdTEwMkFcXHUxMDNGXFx1MTA1MC1cXHUxMDU1XFx1MTA1QS1cXHUxMDVEXFx1MTA2MVxcdTEwNjVcXHUxMDY2XFx1MTA2RS1cXHUxMDcwXFx1MTA3NS1cXHUxMDgxXFx1MTA4RVxcdTEwQTAtXFx1MTBDNVxcdTEwQzdcXHUxMENEXFx1MTBEMC1cXHUxMEZBXFx1MTBGQy1cXHUxMjQ4XFx1MTI0QS1cXHUxMjREXFx1MTI1MC1cXHUxMjU2XFx1MTI1OFxcdTEyNUEtXFx1MTI1RFxcdTEyNjAtXFx1MTI4OFxcdTEyOEEtXFx1MTI4RFxcdTEyOTAtXFx1MTJCMFxcdTEyQjItXFx1MTJCNVxcdTEyQjgtXFx1MTJCRVxcdTEyQzBcXHUxMkMyLVxcdTEyQzVcXHUxMkM4LVxcdTEyRDZcXHUxMkQ4LVxcdTEzMTBcXHUxMzEyLVxcdTEzMTVcXHUxMzE4LVxcdTEzNUFcXHUxMzgwLVxcdTEzOEZcXHUxM0EwLVxcdTEzRjVcXHUxM0Y4LVxcdTEzRkRcXHUxNDAxLVxcdTE2NkNcXHUxNjZGLVxcdTE2N0ZcXHUxNjgxLVxcdTE2OUFcXHUxNkEwLVxcdTE2RUFcXHUxNkYxLVxcdTE2RjhcXHUxNzAwLVxcdTE3MENcXHUxNzBFLVxcdTE3MTFcXHUxNzIwLVxcdTE3MzFcXHUxNzQwLVxcdTE3NTFcXHUxNzYwLVxcdTE3NkNcXHUxNzZFLVxcdTE3NzBcXHUxNzgwLVxcdTE3QjNcXHUxN0Q3XFx1MTdEQ1xcdTE4MjAtXFx1MTg3N1xcdTE4ODAtXFx1MTg4NFxcdTE4ODctXFx1MThBOFxcdTE4QUFcXHUxOEIwLVxcdTE4RjVcXHUxOTAwLVxcdTE5MUVcXHUxOTUwLVxcdTE5NkRcXHUxOTcwLVxcdTE5NzRcXHUxOTgwLVxcdTE5QUJcXHUxOUIwLVxcdTE5QzlcXHUxQTAwLVxcdTFBMTZcXHUxQTIwLVxcdTFBNTRcXHUxQUE3XFx1MUIwNS1cXHUxQjMzXFx1MUI0NS1cXHUxQjRCXFx1MUI4My1cXHUxQkEwXFx1MUJBRVxcdTFCQUZcXHUxQkJBLVxcdTFCRTVcXHUxQzAwLVxcdTFDMjNcXHUxQzRELVxcdTFDNEZcXHUxQzVBLVxcdTFDN0RcXHUxQzgwLVxcdTFDODhcXHUxQ0U5LVxcdTFDRUNcXHUxQ0VFLVxcdTFDRjFcXHUxQ0Y1XFx1MUNGNlxcdTFEMDAtXFx1MURCRlxcdTFFMDAtXFx1MUYxNVxcdTFGMTgtXFx1MUYxRFxcdTFGMjAtXFx1MUY0NVxcdTFGNDgtXFx1MUY0RFxcdTFGNTAtXFx1MUY1N1xcdTFGNTlcXHUxRjVCXFx1MUY1RFxcdTFGNUYtXFx1MUY3RFxcdTFGODAtXFx1MUZCNFxcdTFGQjYtXFx1MUZCQ1xcdTFGQkVcXHUxRkMyLVxcdTFGQzRcXHUxRkM2LVxcdTFGQ0NcXHUxRkQwLVxcdTFGRDNcXHUxRkQ2LVxcdTFGREJcXHUxRkUwLVxcdTFGRUNcXHUxRkYyLVxcdTFGRjRcXHUxRkY2LVxcdTFGRkNcXHUyMDcxXFx1MjA3RlxcdTIwOTAtXFx1MjA5Q1xcdTIxMDJcXHUyMTA3XFx1MjEwQS1cXHUyMTEzXFx1MjExNVxcdTIxMTktXFx1MjExRFxcdTIxMjRcXHUyMTI2XFx1MjEyOFxcdTIxMkEtXFx1MjEyRFxcdTIxMkYtXFx1MjEzOVxcdTIxM0MtXFx1MjEzRlxcdTIxNDUtXFx1MjE0OVxcdTIxNEVcXHUyMTgzXFx1MjE4NFxcdTJDMDAtXFx1MkMyRVxcdTJDMzAtXFx1MkM1RVxcdTJDNjAtXFx1MkNFNFxcdTJDRUItXFx1MkNFRVxcdTJDRjJcXHUyQ0YzXFx1MkQwMC1cXHUyRDI1XFx1MkQyN1xcdTJEMkRcXHUyRDMwLVxcdTJENjdcXHUyRDZGXFx1MkQ4MC1cXHUyRDk2XFx1MkRBMC1cXHUyREE2XFx1MkRBOC1cXHUyREFFXFx1MkRCMC1cXHUyREI2XFx1MkRCOC1cXHUyREJFXFx1MkRDMC1cXHUyREM2XFx1MkRDOC1cXHUyRENFXFx1MkREMC1cXHUyREQ2XFx1MkREOC1cXHUyRERFXFx1MkUyRlxcdTMwMDVcXHUzMDA2XFx1MzAzMS1cXHUzMDM1XFx1MzAzQlxcdTMwM0NcXHUzMDQxLVxcdTMwOTZcXHUzMDlELVxcdTMwOUZcXHUzMEExLVxcdTMwRkFcXHUzMEZDLVxcdTMwRkZcXHUzMTA1LVxcdTMxMkRcXHUzMTMxLVxcdTMxOEVcXHUzMUEwLVxcdTMxQkFcXHUzMUYwLVxcdTMxRkZcXHUzNDAwLVxcdTREQjVcXHU0RTAwLVxcdTlGRDVcXHVBMDAwLVxcdUE0OENcXHVBNEQwLVxcdUE0RkRcXHVBNTAwLVxcdUE2MENcXHVBNjEwLVxcdUE2MUZcXHVBNjJBXFx1QTYyQlxcdUE2NDAtXFx1QTY2RVxcdUE2N0YtXFx1QTY5RFxcdUE2QTAtXFx1QTZFNVxcdUE3MTctXFx1QTcxRlxcdUE3MjItXFx1QTc4OFxcdUE3OEItXFx1QTdBRVxcdUE3QjAtXFx1QTdCN1xcdUE3RjctXFx1QTgwMVxcdUE4MDMtXFx1QTgwNVxcdUE4MDctXFx1QTgwQVxcdUE4MEMtXFx1QTgyMlxcdUE4NDAtXFx1QTg3M1xcdUE4ODItXFx1QThCM1xcdUE4RjItXFx1QThGN1xcdUE4RkJcXHVBOEZEXFx1QTkwQS1cXHVBOTI1XFx1QTkzMC1cXHVBOTQ2XFx1QTk2MC1cXHVBOTdDXFx1QTk4NC1cXHVBOUIyXFx1QTlDRlxcdUE5RTAtXFx1QTlFNFxcdUE5RTYtXFx1QTlFRlxcdUE5RkEtXFx1QTlGRVxcdUFBMDAtXFx1QUEyOFxcdUFBNDAtXFx1QUE0MlxcdUFBNDQtXFx1QUE0QlxcdUFBNjAtXFx1QUE3NlxcdUFBN0FcXHVBQTdFLVxcdUFBQUZcXHVBQUIxXFx1QUFCNVxcdUFBQjZcXHVBQUI5LVxcdUFBQkRcXHVBQUMwXFx1QUFDMlxcdUFBREItXFx1QUFERFxcdUFBRTAtXFx1QUFFQVxcdUFBRjItXFx1QUFGNFxcdUFCMDEtXFx1QUIwNlxcdUFCMDktXFx1QUIwRVxcdUFCMTEtXFx1QUIxNlxcdUFCMjAtXFx1QUIyNlxcdUFCMjgtXFx1QUIyRVxcdUFCMzAtXFx1QUI1QVxcdUFCNUMtXFx1QUI2NVxcdUFCNzAtXFx1QUJFMlxcdUFDMDAtXFx1RDdBM1xcdUQ3QjAtXFx1RDdDNlxcdUQ3Q0ItXFx1RDdGQlxcdUY5MDAtXFx1RkE2RFxcdUZBNzAtXFx1RkFEOVxcdUZCMDAtXFx1RkIwNlxcdUZCMTMtXFx1RkIxN1xcdUZCMURcXHVGQjFGLVxcdUZCMjhcXHVGQjJBLVxcdUZCMzZcXHVGQjM4LVxcdUZCM0NcXHVGQjNFXFx1RkI0MFxcdUZCNDFcXHVGQjQzXFx1RkI0NFxcdUZCNDYtXFx1RkJCMVxcdUZCRDMtXFx1RkQzRFxcdUZENTAtXFx1RkQ4RlxcdUZEOTItXFx1RkRDN1xcdUZERjAtXFx1RkRGQlxcdUZFNzAtXFx1RkU3NFxcdUZFNzYtXFx1RkVGQ1xcdUZGMjEtXFx1RkYzQVxcdUZGNDEtXFx1RkY1QVxcdUZGNjYtXFx1RkZCRVxcdUZGQzItXFx1RkZDN1xcdUZGQ0EtXFx1RkZDRlxcdUZGRDItXFx1RkZEN1xcdUZGREEtXFx1RkZEQycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REMwMC1cXHVEQzBCXFx1REMwRC1cXHVEQzI2XFx1REMyOC1cXHVEQzNBXFx1REMzQ1xcdURDM0RcXHVEQzNGLVxcdURDNERcXHVEQzUwLVxcdURDNURcXHVEQzgwLVxcdURDRkFcXHVERTgwLVxcdURFOUNcXHVERUEwLVxcdURFRDBcXHVERjAwLVxcdURGMUZcXHVERjMwLVxcdURGNDBcXHVERjQyLVxcdURGNDlcXHVERjUwLVxcdURGNzVcXHVERjgwLVxcdURGOURcXHVERkEwLVxcdURGQzNcXHVERkM4LVxcdURGQ0ZdfFxcdUQ4MDFbXFx1REMwMC1cXHVEQzlEXFx1RENCMC1cXHVEQ0QzXFx1RENEOC1cXHVEQ0ZCXFx1REQwMC1cXHVERDI3XFx1REQzMC1cXHVERDYzXFx1REUwMC1cXHVERjM2XFx1REY0MC1cXHVERjU1XFx1REY2MC1cXHVERjY3XXxcXHVEODAyW1xcdURDMDAtXFx1REMwNVxcdURDMDhcXHVEQzBBLVxcdURDMzVcXHVEQzM3XFx1REMzOFxcdURDM0NcXHVEQzNGLVxcdURDNTVcXHVEQzYwLVxcdURDNzZcXHVEQzgwLVxcdURDOUVcXHVEQ0UwLVxcdURDRjJcXHVEQ0Y0XFx1RENGNVxcdUREMDAtXFx1REQxNVxcdUREMjAtXFx1REQzOVxcdUREODAtXFx1RERCN1xcdUREQkVcXHVEREJGXFx1REUwMFxcdURFMTAtXFx1REUxM1xcdURFMTUtXFx1REUxN1xcdURFMTktXFx1REUzM1xcdURFNjAtXFx1REU3Q1xcdURFODAtXFx1REU5Q1xcdURFQzAtXFx1REVDN1xcdURFQzktXFx1REVFNFxcdURGMDAtXFx1REYzNVxcdURGNDAtXFx1REY1NVxcdURGNjAtXFx1REY3MlxcdURGODAtXFx1REY5MV18XFx1RDgwM1tcXHVEQzAwLVxcdURDNDhcXHVEQzgwLVxcdURDQjJcXHVEQ0MwLVxcdURDRjJdfFxcdUQ4MDRbXFx1REMwMy1cXHVEQzM3XFx1REM4My1cXHVEQ0FGXFx1RENEMC1cXHVEQ0U4XFx1REQwMy1cXHVERDI2XFx1REQ1MC1cXHVERDcyXFx1REQ3NlxcdUREODMtXFx1RERCMlxcdUREQzEtXFx1RERDNFxcdUREREFcXHVERERDXFx1REUwMC1cXHVERTExXFx1REUxMy1cXHVERTJCXFx1REU4MC1cXHVERTg2XFx1REU4OFxcdURFOEEtXFx1REU4RFxcdURFOEYtXFx1REU5RFxcdURFOUYtXFx1REVBOFxcdURFQjAtXFx1REVERVxcdURGMDUtXFx1REYwQ1xcdURGMEZcXHVERjEwXFx1REYxMy1cXHVERjI4XFx1REYyQS1cXHVERjMwXFx1REYzMlxcdURGMzNcXHVERjM1LVxcdURGMzlcXHVERjNEXFx1REY1MFxcdURGNUQtXFx1REY2MV18XFx1RDgwNVtcXHVEQzAwLVxcdURDMzRcXHVEQzQ3LVxcdURDNEFcXHVEQzgwLVxcdURDQUZcXHVEQ0M0XFx1RENDNVxcdURDQzdcXHVERDgwLVxcdUREQUVcXHVEREQ4LVxcdUREREJcXHVERTAwLVxcdURFMkZcXHVERTQ0XFx1REU4MC1cXHVERUFBXFx1REYwMC1cXHVERjE5XXxcXHVEODA2W1xcdURDQTAtXFx1RENERlxcdURDRkZcXHVERUMwLVxcdURFRjhdfFxcdUQ4MDdbXFx1REMwMC1cXHVEQzA4XFx1REMwQS1cXHVEQzJFXFx1REM0MFxcdURDNzItXFx1REM4Rl18XFx1RDgwOFtcXHVEQzAwLVxcdURGOTldfFxcdUQ4MDlbXFx1REM4MC1cXHVERDQzXXxbXFx1RDgwQ1xcdUQ4MUMtXFx1RDgyMFxcdUQ4NDAtXFx1RDg2OFxcdUQ4NkEtXFx1RDg2Q1xcdUQ4NkYtXFx1RDg3Ml1bXFx1REMwMC1cXHVERkZGXXxcXHVEODBEW1xcdURDMDAtXFx1REMyRV18XFx1RDgxMVtcXHVEQzAwLVxcdURFNDZdfFxcdUQ4MUFbXFx1REMwMC1cXHVERTM4XFx1REU0MC1cXHVERTVFXFx1REVEMC1cXHVERUVEXFx1REYwMC1cXHVERjJGXFx1REY0MC1cXHVERjQzXFx1REY2My1cXHVERjc3XFx1REY3RC1cXHVERjhGXXxcXHVEODFCW1xcdURGMDAtXFx1REY0NFxcdURGNTBcXHVERjkzLVxcdURGOUZcXHVERkUwXXxcXHVEODIxW1xcdURDMDAtXFx1REZFQ118XFx1RDgyMltcXHVEQzAwLVxcdURFRjJdfFxcdUQ4MkNbXFx1REMwMFxcdURDMDFdfFxcdUQ4MkZbXFx1REMwMC1cXHVEQzZBXFx1REM3MC1cXHVEQzdDXFx1REM4MC1cXHVEQzg4XFx1REM5MC1cXHVEQzk5XXxcXHVEODM1W1xcdURDMDAtXFx1REM1NFxcdURDNTYtXFx1REM5Q1xcdURDOUVcXHVEQzlGXFx1RENBMlxcdURDQTVcXHVEQ0E2XFx1RENBOS1cXHVEQ0FDXFx1RENBRS1cXHVEQ0I5XFx1RENCQlxcdURDQkQtXFx1RENDM1xcdURDQzUtXFx1REQwNVxcdUREMDctXFx1REQwQVxcdUREMEQtXFx1REQxNFxcdUREMTYtXFx1REQxQ1xcdUREMUUtXFx1REQzOVxcdUREM0ItXFx1REQzRVxcdURENDAtXFx1REQ0NFxcdURENDZcXHVERDRBLVxcdURENTBcXHVERDUyLVxcdURFQTVcXHVERUE4LVxcdURFQzBcXHVERUMyLVxcdURFREFcXHVERURDLVxcdURFRkFcXHVERUZDLVxcdURGMTRcXHVERjE2LVxcdURGMzRcXHVERjM2LVxcdURGNEVcXHVERjUwLVxcdURGNkVcXHVERjcwLVxcdURGODhcXHVERjhBLVxcdURGQThcXHVERkFBLVxcdURGQzJcXHVERkM0LVxcdURGQ0JdfFxcdUQ4M0FbXFx1REMwMC1cXHVEQ0M0XFx1REQwMC1cXHVERDQzXXxcXHVEODNCW1xcdURFMDAtXFx1REUwM1xcdURFMDUtXFx1REUxRlxcdURFMjFcXHVERTIyXFx1REUyNFxcdURFMjdcXHVERTI5LVxcdURFMzJcXHVERTM0LVxcdURFMzdcXHVERTM5XFx1REUzQlxcdURFNDJcXHVERTQ3XFx1REU0OVxcdURFNEJcXHVERTRELVxcdURFNEZcXHVERTUxXFx1REU1MlxcdURFNTRcXHVERTU3XFx1REU1OVxcdURFNUJcXHVERTVEXFx1REU1RlxcdURFNjFcXHVERTYyXFx1REU2NFxcdURFNjctXFx1REU2QVxcdURFNkMtXFx1REU3MlxcdURFNzQtXFx1REU3N1xcdURFNzktXFx1REU3Q1xcdURFN0VcXHVERTgwLVxcdURFODlcXHVERThCLVxcdURFOUJcXHVERUExLVxcdURFQTNcXHVERUE1LVxcdURFQTlcXHVERUFCLVxcdURFQkJdfFxcdUQ4NjlbXFx1REMwMC1cXHVERUQ2XFx1REYwMC1cXHVERkZGXXxcXHVEODZEW1xcdURDMDAtXFx1REYzNFxcdURGNDAtXFx1REZGRl18XFx1RDg2RVtcXHVEQzAwLVxcdURDMURcXHVEQzIwLVxcdURGRkZdfFxcdUQ4NzNbXFx1REMwMC1cXHVERUExXXxcXHVEODdFW1xcdURDMDAtXFx1REUxRF0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTGwnLFxuICAgICAgICBhbGlhczogJ0xvd2VyY2FzZV9MZXR0ZXInLFxuICAgICAgICBibXA6ICdhLXpcXHhCNVxceERGLVxceEY2XFx4RjgtXFx4RkZcXHUwMTAxXFx1MDEwM1xcdTAxMDVcXHUwMTA3XFx1MDEwOVxcdTAxMEJcXHUwMTBEXFx1MDEwRlxcdTAxMTFcXHUwMTEzXFx1MDExNVxcdTAxMTdcXHUwMTE5XFx1MDExQlxcdTAxMURcXHUwMTFGXFx1MDEyMVxcdTAxMjNcXHUwMTI1XFx1MDEyN1xcdTAxMjlcXHUwMTJCXFx1MDEyRFxcdTAxMkZcXHUwMTMxXFx1MDEzM1xcdTAxMzVcXHUwMTM3XFx1MDEzOFxcdTAxM0FcXHUwMTNDXFx1MDEzRVxcdTAxNDBcXHUwMTQyXFx1MDE0NFxcdTAxNDZcXHUwMTQ4XFx1MDE0OVxcdTAxNEJcXHUwMTREXFx1MDE0RlxcdTAxNTFcXHUwMTUzXFx1MDE1NVxcdTAxNTdcXHUwMTU5XFx1MDE1QlxcdTAxNURcXHUwMTVGXFx1MDE2MVxcdTAxNjNcXHUwMTY1XFx1MDE2N1xcdTAxNjlcXHUwMTZCXFx1MDE2RFxcdTAxNkZcXHUwMTcxXFx1MDE3M1xcdTAxNzVcXHUwMTc3XFx1MDE3QVxcdTAxN0NcXHUwMTdFLVxcdTAxODBcXHUwMTgzXFx1MDE4NVxcdTAxODhcXHUwMThDXFx1MDE4RFxcdTAxOTJcXHUwMTk1XFx1MDE5OS1cXHUwMTlCXFx1MDE5RVxcdTAxQTFcXHUwMUEzXFx1MDFBNVxcdTAxQThcXHUwMUFBXFx1MDFBQlxcdTAxQURcXHUwMUIwXFx1MDFCNFxcdTAxQjZcXHUwMUI5XFx1MDFCQVxcdTAxQkQtXFx1MDFCRlxcdTAxQzZcXHUwMUM5XFx1MDFDQ1xcdTAxQ0VcXHUwMUQwXFx1MDFEMlxcdTAxRDRcXHUwMUQ2XFx1MDFEOFxcdTAxREFcXHUwMURDXFx1MDFERFxcdTAxREZcXHUwMUUxXFx1MDFFM1xcdTAxRTVcXHUwMUU3XFx1MDFFOVxcdTAxRUJcXHUwMUVEXFx1MDFFRlxcdTAxRjBcXHUwMUYzXFx1MDFGNVxcdTAxRjlcXHUwMUZCXFx1MDFGRFxcdTAxRkZcXHUwMjAxXFx1MDIwM1xcdTAyMDVcXHUwMjA3XFx1MDIwOVxcdTAyMEJcXHUwMjBEXFx1MDIwRlxcdTAyMTFcXHUwMjEzXFx1MDIxNVxcdTAyMTdcXHUwMjE5XFx1MDIxQlxcdTAyMURcXHUwMjFGXFx1MDIyMVxcdTAyMjNcXHUwMjI1XFx1MDIyN1xcdTAyMjlcXHUwMjJCXFx1MDIyRFxcdTAyMkZcXHUwMjMxXFx1MDIzMy1cXHUwMjM5XFx1MDIzQ1xcdTAyM0ZcXHUwMjQwXFx1MDI0MlxcdTAyNDdcXHUwMjQ5XFx1MDI0QlxcdTAyNERcXHUwMjRGLVxcdTAyOTNcXHUwMjk1LVxcdTAyQUZcXHUwMzcxXFx1MDM3M1xcdTAzNzdcXHUwMzdCLVxcdTAzN0RcXHUwMzkwXFx1MDNBQy1cXHUwM0NFXFx1MDNEMFxcdTAzRDFcXHUwM0Q1LVxcdTAzRDdcXHUwM0Q5XFx1MDNEQlxcdTAzRERcXHUwM0RGXFx1MDNFMVxcdTAzRTNcXHUwM0U1XFx1MDNFN1xcdTAzRTlcXHUwM0VCXFx1MDNFRFxcdTAzRUYtXFx1MDNGM1xcdTAzRjVcXHUwM0Y4XFx1MDNGQlxcdTAzRkNcXHUwNDMwLVxcdTA0NUZcXHUwNDYxXFx1MDQ2M1xcdTA0NjVcXHUwNDY3XFx1MDQ2OVxcdTA0NkJcXHUwNDZEXFx1MDQ2RlxcdTA0NzFcXHUwNDczXFx1MDQ3NVxcdTA0NzdcXHUwNDc5XFx1MDQ3QlxcdTA0N0RcXHUwNDdGXFx1MDQ4MVxcdTA0OEJcXHUwNDhEXFx1MDQ4RlxcdTA0OTFcXHUwNDkzXFx1MDQ5NVxcdTA0OTdcXHUwNDk5XFx1MDQ5QlxcdTA0OURcXHUwNDlGXFx1MDRBMVxcdTA0QTNcXHUwNEE1XFx1MDRBN1xcdTA0QTlcXHUwNEFCXFx1MDRBRFxcdTA0QUZcXHUwNEIxXFx1MDRCM1xcdTA0QjVcXHUwNEI3XFx1MDRCOVxcdTA0QkJcXHUwNEJEXFx1MDRCRlxcdTA0QzJcXHUwNEM0XFx1MDRDNlxcdTA0QzhcXHUwNENBXFx1MDRDQ1xcdTA0Q0VcXHUwNENGXFx1MDREMVxcdTA0RDNcXHUwNEQ1XFx1MDREN1xcdTA0RDlcXHUwNERCXFx1MDRERFxcdTA0REZcXHUwNEUxXFx1MDRFM1xcdTA0RTVcXHUwNEU3XFx1MDRFOVxcdTA0RUJcXHUwNEVEXFx1MDRFRlxcdTA0RjFcXHUwNEYzXFx1MDRGNVxcdTA0RjdcXHUwNEY5XFx1MDRGQlxcdTA0RkRcXHUwNEZGXFx1MDUwMVxcdTA1MDNcXHUwNTA1XFx1MDUwN1xcdTA1MDlcXHUwNTBCXFx1MDUwRFxcdTA1MEZcXHUwNTExXFx1MDUxM1xcdTA1MTVcXHUwNTE3XFx1MDUxOVxcdTA1MUJcXHUwNTFEXFx1MDUxRlxcdTA1MjFcXHUwNTIzXFx1MDUyNVxcdTA1MjdcXHUwNTI5XFx1MDUyQlxcdTA1MkRcXHUwNTJGXFx1MDU2MS1cXHUwNTg3XFx1MTNGOC1cXHUxM0ZEXFx1MUM4MC1cXHUxQzg4XFx1MUQwMC1cXHUxRDJCXFx1MUQ2Qi1cXHUxRDc3XFx1MUQ3OS1cXHUxRDlBXFx1MUUwMVxcdTFFMDNcXHUxRTA1XFx1MUUwN1xcdTFFMDlcXHUxRTBCXFx1MUUwRFxcdTFFMEZcXHUxRTExXFx1MUUxM1xcdTFFMTVcXHUxRTE3XFx1MUUxOVxcdTFFMUJcXHUxRTFEXFx1MUUxRlxcdTFFMjFcXHUxRTIzXFx1MUUyNVxcdTFFMjdcXHUxRTI5XFx1MUUyQlxcdTFFMkRcXHUxRTJGXFx1MUUzMVxcdTFFMzNcXHUxRTM1XFx1MUUzN1xcdTFFMzlcXHUxRTNCXFx1MUUzRFxcdTFFM0ZcXHUxRTQxXFx1MUU0M1xcdTFFNDVcXHUxRTQ3XFx1MUU0OVxcdTFFNEJcXHUxRTREXFx1MUU0RlxcdTFFNTFcXHUxRTUzXFx1MUU1NVxcdTFFNTdcXHUxRTU5XFx1MUU1QlxcdTFFNURcXHUxRTVGXFx1MUU2MVxcdTFFNjNcXHUxRTY1XFx1MUU2N1xcdTFFNjlcXHUxRTZCXFx1MUU2RFxcdTFFNkZcXHUxRTcxXFx1MUU3M1xcdTFFNzVcXHUxRTc3XFx1MUU3OVxcdTFFN0JcXHUxRTdEXFx1MUU3RlxcdTFFODFcXHUxRTgzXFx1MUU4NVxcdTFFODdcXHUxRTg5XFx1MUU4QlxcdTFFOERcXHUxRThGXFx1MUU5MVxcdTFFOTNcXHUxRTk1LVxcdTFFOURcXHUxRTlGXFx1MUVBMVxcdTFFQTNcXHUxRUE1XFx1MUVBN1xcdTFFQTlcXHUxRUFCXFx1MUVBRFxcdTFFQUZcXHUxRUIxXFx1MUVCM1xcdTFFQjVcXHUxRUI3XFx1MUVCOVxcdTFFQkJcXHUxRUJEXFx1MUVCRlxcdTFFQzFcXHUxRUMzXFx1MUVDNVxcdTFFQzdcXHUxRUM5XFx1MUVDQlxcdTFFQ0RcXHUxRUNGXFx1MUVEMVxcdTFFRDNcXHUxRUQ1XFx1MUVEN1xcdTFFRDlcXHUxRURCXFx1MUVERFxcdTFFREZcXHUxRUUxXFx1MUVFM1xcdTFFRTVcXHUxRUU3XFx1MUVFOVxcdTFFRUJcXHUxRUVEXFx1MUVFRlxcdTFFRjFcXHUxRUYzXFx1MUVGNVxcdTFFRjdcXHUxRUY5XFx1MUVGQlxcdTFFRkRcXHUxRUZGLVxcdTFGMDdcXHUxRjEwLVxcdTFGMTVcXHUxRjIwLVxcdTFGMjdcXHUxRjMwLVxcdTFGMzdcXHUxRjQwLVxcdTFGNDVcXHUxRjUwLVxcdTFGNTdcXHUxRjYwLVxcdTFGNjdcXHUxRjcwLVxcdTFGN0RcXHUxRjgwLVxcdTFGODdcXHUxRjkwLVxcdTFGOTdcXHUxRkEwLVxcdTFGQTdcXHUxRkIwLVxcdTFGQjRcXHUxRkI2XFx1MUZCN1xcdTFGQkVcXHUxRkMyLVxcdTFGQzRcXHUxRkM2XFx1MUZDN1xcdTFGRDAtXFx1MUZEM1xcdTFGRDZcXHUxRkQ3XFx1MUZFMC1cXHUxRkU3XFx1MUZGMi1cXHUxRkY0XFx1MUZGNlxcdTFGRjdcXHUyMTBBXFx1MjEwRVxcdTIxMEZcXHUyMTEzXFx1MjEyRlxcdTIxMzRcXHUyMTM5XFx1MjEzQ1xcdTIxM0RcXHUyMTQ2LVxcdTIxNDlcXHUyMTRFXFx1MjE4NFxcdTJDMzAtXFx1MkM1RVxcdTJDNjFcXHUyQzY1XFx1MkM2NlxcdTJDNjhcXHUyQzZBXFx1MkM2Q1xcdTJDNzFcXHUyQzczXFx1MkM3NFxcdTJDNzYtXFx1MkM3QlxcdTJDODFcXHUyQzgzXFx1MkM4NVxcdTJDODdcXHUyQzg5XFx1MkM4QlxcdTJDOERcXHUyQzhGXFx1MkM5MVxcdTJDOTNcXHUyQzk1XFx1MkM5N1xcdTJDOTlcXHUyQzlCXFx1MkM5RFxcdTJDOUZcXHUyQ0ExXFx1MkNBM1xcdTJDQTVcXHUyQ0E3XFx1MkNBOVxcdTJDQUJcXHUyQ0FEXFx1MkNBRlxcdTJDQjFcXHUyQ0IzXFx1MkNCNVxcdTJDQjdcXHUyQ0I5XFx1MkNCQlxcdTJDQkRcXHUyQ0JGXFx1MkNDMVxcdTJDQzNcXHUyQ0M1XFx1MkNDN1xcdTJDQzlcXHUyQ0NCXFx1MkNDRFxcdTJDQ0ZcXHUyQ0QxXFx1MkNEM1xcdTJDRDVcXHUyQ0Q3XFx1MkNEOVxcdTJDREJcXHUyQ0REXFx1MkNERlxcdTJDRTFcXHUyQ0UzXFx1MkNFNFxcdTJDRUNcXHUyQ0VFXFx1MkNGM1xcdTJEMDAtXFx1MkQyNVxcdTJEMjdcXHUyRDJEXFx1QTY0MVxcdUE2NDNcXHVBNjQ1XFx1QTY0N1xcdUE2NDlcXHVBNjRCXFx1QTY0RFxcdUE2NEZcXHVBNjUxXFx1QTY1M1xcdUE2NTVcXHVBNjU3XFx1QTY1OVxcdUE2NUJcXHVBNjVEXFx1QTY1RlxcdUE2NjFcXHVBNjYzXFx1QTY2NVxcdUE2NjdcXHVBNjY5XFx1QTY2QlxcdUE2NkRcXHVBNjgxXFx1QTY4M1xcdUE2ODVcXHVBNjg3XFx1QTY4OVxcdUE2OEJcXHVBNjhEXFx1QTY4RlxcdUE2OTFcXHVBNjkzXFx1QTY5NVxcdUE2OTdcXHVBNjk5XFx1QTY5QlxcdUE3MjNcXHVBNzI1XFx1QTcyN1xcdUE3MjlcXHVBNzJCXFx1QTcyRFxcdUE3MkYtXFx1QTczMVxcdUE3MzNcXHVBNzM1XFx1QTczN1xcdUE3MzlcXHVBNzNCXFx1QTczRFxcdUE3M0ZcXHVBNzQxXFx1QTc0M1xcdUE3NDVcXHVBNzQ3XFx1QTc0OVxcdUE3NEJcXHVBNzREXFx1QTc0RlxcdUE3NTFcXHVBNzUzXFx1QTc1NVxcdUE3NTdcXHVBNzU5XFx1QTc1QlxcdUE3NURcXHVBNzVGXFx1QTc2MVxcdUE3NjNcXHVBNzY1XFx1QTc2N1xcdUE3NjlcXHVBNzZCXFx1QTc2RFxcdUE3NkZcXHVBNzcxLVxcdUE3NzhcXHVBNzdBXFx1QTc3Q1xcdUE3N0ZcXHVBNzgxXFx1QTc4M1xcdUE3ODVcXHVBNzg3XFx1QTc4Q1xcdUE3OEVcXHVBNzkxXFx1QTc5My1cXHVBNzk1XFx1QTc5N1xcdUE3OTlcXHVBNzlCXFx1QTc5RFxcdUE3OUZcXHVBN0ExXFx1QTdBM1xcdUE3QTVcXHVBN0E3XFx1QTdBOVxcdUE3QjVcXHVBN0I3XFx1QTdGQVxcdUFCMzAtXFx1QUI1QVxcdUFCNjAtXFx1QUI2NVxcdUFCNzAtXFx1QUJCRlxcdUZCMDAtXFx1RkIwNlxcdUZCMTMtXFx1RkIxN1xcdUZGNDEtXFx1RkY1QScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDFbXFx1REMyOC1cXHVEQzRGXFx1RENEOC1cXHVEQ0ZCXXxcXHVEODAzW1xcdURDQzAtXFx1RENGMl18XFx1RDgwNltcXHVEQ0MwLVxcdURDREZdfFxcdUQ4MzVbXFx1REMxQS1cXHVEQzMzXFx1REM0RS1cXHVEQzU0XFx1REM1Ni1cXHVEQzY3XFx1REM4Mi1cXHVEQzlCXFx1RENCNi1cXHVEQ0I5XFx1RENCQlxcdURDQkQtXFx1RENDM1xcdURDQzUtXFx1RENDRlxcdURDRUEtXFx1REQwM1xcdUREMUUtXFx1REQzN1xcdURENTItXFx1REQ2QlxcdUREODYtXFx1REQ5RlxcdUREQkEtXFx1REREM1xcdURERUUtXFx1REUwN1xcdURFMjItXFx1REUzQlxcdURFNTYtXFx1REU2RlxcdURFOEEtXFx1REVBNVxcdURFQzItXFx1REVEQVxcdURFREMtXFx1REVFMVxcdURFRkMtXFx1REYxNFxcdURGMTYtXFx1REYxQlxcdURGMzYtXFx1REY0RVxcdURGNTAtXFx1REY1NVxcdURGNzAtXFx1REY4OFxcdURGOEEtXFx1REY4RlxcdURGQUEtXFx1REZDMlxcdURGQzQtXFx1REZDOVxcdURGQ0JdfFxcdUQ4M0FbXFx1REQyMi1cXHVERDQzXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMbScsXG4gICAgICAgIGFsaWFzOiAnTW9kaWZpZXJfTGV0dGVyJyxcbiAgICAgICAgYm1wOiAnXFx1MDJCMC1cXHUwMkMxXFx1MDJDNi1cXHUwMkQxXFx1MDJFMC1cXHUwMkU0XFx1MDJFQ1xcdTAyRUVcXHUwMzc0XFx1MDM3QVxcdTA1NTlcXHUwNjQwXFx1MDZFNVxcdTA2RTZcXHUwN0Y0XFx1MDdGNVxcdTA3RkFcXHUwODFBXFx1MDgyNFxcdTA4MjhcXHUwOTcxXFx1MEU0NlxcdTBFQzZcXHUxMEZDXFx1MTdEN1xcdTE4NDNcXHUxQUE3XFx1MUM3OC1cXHUxQzdEXFx1MUQyQy1cXHUxRDZBXFx1MUQ3OFxcdTFEOUItXFx1MURCRlxcdTIwNzFcXHUyMDdGXFx1MjA5MC1cXHUyMDlDXFx1MkM3Q1xcdTJDN0RcXHUyRDZGXFx1MkUyRlxcdTMwMDVcXHUzMDMxLVxcdTMwMzVcXHUzMDNCXFx1MzA5RFxcdTMwOUVcXHUzMEZDLVxcdTMwRkVcXHVBMDE1XFx1QTRGOC1cXHVBNEZEXFx1QTYwQ1xcdUE2N0ZcXHVBNjlDXFx1QTY5RFxcdUE3MTctXFx1QTcxRlxcdUE3NzBcXHVBNzg4XFx1QTdGOFxcdUE3RjlcXHVBOUNGXFx1QTlFNlxcdUFBNzBcXHVBQUREXFx1QUFGM1xcdUFBRjRcXHVBQjVDLVxcdUFCNUZcXHVGRjcwXFx1RkY5RVxcdUZGOUYnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODFBW1xcdURGNDAtXFx1REY0M118XFx1RDgxQltcXHVERjkzLVxcdURGOUZcXHVERkUwXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMbycsXG4gICAgICAgIGFsaWFzOiAnT3RoZXJfTGV0dGVyJyxcbiAgICAgICAgYm1wOiAnXFx4QUFcXHhCQVxcdTAxQkJcXHUwMUMwLVxcdTAxQzNcXHUwMjk0XFx1MDVEMC1cXHUwNUVBXFx1MDVGMC1cXHUwNUYyXFx1MDYyMC1cXHUwNjNGXFx1MDY0MS1cXHUwNjRBXFx1MDY2RVxcdTA2NkZcXHUwNjcxLVxcdTA2RDNcXHUwNkQ1XFx1MDZFRVxcdTA2RUZcXHUwNkZBLVxcdTA2RkNcXHUwNkZGXFx1MDcxMFxcdTA3MTItXFx1MDcyRlxcdTA3NEQtXFx1MDdBNVxcdTA3QjFcXHUwN0NBLVxcdTA3RUFcXHUwODAwLVxcdTA4MTVcXHUwODQwLVxcdTA4NThcXHUwOEEwLVxcdTA4QjRcXHUwOEI2LVxcdTA4QkRcXHUwOTA0LVxcdTA5MzlcXHUwOTNEXFx1MDk1MFxcdTA5NTgtXFx1MDk2MVxcdTA5NzItXFx1MDk4MFxcdTA5ODUtXFx1MDk4Q1xcdTA5OEZcXHUwOTkwXFx1MDk5My1cXHUwOUE4XFx1MDlBQS1cXHUwOUIwXFx1MDlCMlxcdTA5QjYtXFx1MDlCOVxcdTA5QkRcXHUwOUNFXFx1MDlEQ1xcdTA5RERcXHUwOURGLVxcdTA5RTFcXHUwOUYwXFx1MDlGMVxcdTBBMDUtXFx1MEEwQVxcdTBBMEZcXHUwQTEwXFx1MEExMy1cXHUwQTI4XFx1MEEyQS1cXHUwQTMwXFx1MEEzMlxcdTBBMzNcXHUwQTM1XFx1MEEzNlxcdTBBMzhcXHUwQTM5XFx1MEE1OS1cXHUwQTVDXFx1MEE1RVxcdTBBNzItXFx1MEE3NFxcdTBBODUtXFx1MEE4RFxcdTBBOEYtXFx1MEE5MVxcdTBBOTMtXFx1MEFBOFxcdTBBQUEtXFx1MEFCMFxcdTBBQjJcXHUwQUIzXFx1MEFCNS1cXHUwQUI5XFx1MEFCRFxcdTBBRDBcXHUwQUUwXFx1MEFFMVxcdTBBRjlcXHUwQjA1LVxcdTBCMENcXHUwQjBGXFx1MEIxMFxcdTBCMTMtXFx1MEIyOFxcdTBCMkEtXFx1MEIzMFxcdTBCMzJcXHUwQjMzXFx1MEIzNS1cXHUwQjM5XFx1MEIzRFxcdTBCNUNcXHUwQjVEXFx1MEI1Ri1cXHUwQjYxXFx1MEI3MVxcdTBCODNcXHUwQjg1LVxcdTBCOEFcXHUwQjhFLVxcdTBCOTBcXHUwQjkyLVxcdTBCOTVcXHUwQjk5XFx1MEI5QVxcdTBCOUNcXHUwQjlFXFx1MEI5RlxcdTBCQTNcXHUwQkE0XFx1MEJBOC1cXHUwQkFBXFx1MEJBRS1cXHUwQkI5XFx1MEJEMFxcdTBDMDUtXFx1MEMwQ1xcdTBDMEUtXFx1MEMxMFxcdTBDMTItXFx1MEMyOFxcdTBDMkEtXFx1MEMzOVxcdTBDM0RcXHUwQzU4LVxcdTBDNUFcXHUwQzYwXFx1MEM2MVxcdTBDODBcXHUwQzg1LVxcdTBDOENcXHUwQzhFLVxcdTBDOTBcXHUwQzkyLVxcdTBDQThcXHUwQ0FBLVxcdTBDQjNcXHUwQ0I1LVxcdTBDQjlcXHUwQ0JEXFx1MENERVxcdTBDRTBcXHUwQ0UxXFx1MENGMVxcdTBDRjJcXHUwRDA1LVxcdTBEMENcXHUwRDBFLVxcdTBEMTBcXHUwRDEyLVxcdTBEM0FcXHUwRDNEXFx1MEQ0RVxcdTBENTQtXFx1MEQ1NlxcdTBENUYtXFx1MEQ2MVxcdTBEN0EtXFx1MEQ3RlxcdTBEODUtXFx1MEQ5NlxcdTBEOUEtXFx1MERCMVxcdTBEQjMtXFx1MERCQlxcdTBEQkRcXHUwREMwLVxcdTBEQzZcXHUwRTAxLVxcdTBFMzBcXHUwRTMyXFx1MEUzM1xcdTBFNDAtXFx1MEU0NVxcdTBFODFcXHUwRTgyXFx1MEU4NFxcdTBFODdcXHUwRTg4XFx1MEU4QVxcdTBFOERcXHUwRTk0LVxcdTBFOTdcXHUwRTk5LVxcdTBFOUZcXHUwRUExLVxcdTBFQTNcXHUwRUE1XFx1MEVBN1xcdTBFQUFcXHUwRUFCXFx1MEVBRC1cXHUwRUIwXFx1MEVCMlxcdTBFQjNcXHUwRUJEXFx1MEVDMC1cXHUwRUM0XFx1MEVEQy1cXHUwRURGXFx1MEYwMFxcdTBGNDAtXFx1MEY0N1xcdTBGNDktXFx1MEY2Q1xcdTBGODgtXFx1MEY4Q1xcdTEwMDAtXFx1MTAyQVxcdTEwM0ZcXHUxMDUwLVxcdTEwNTVcXHUxMDVBLVxcdTEwNURcXHUxMDYxXFx1MTA2NVxcdTEwNjZcXHUxMDZFLVxcdTEwNzBcXHUxMDc1LVxcdTEwODFcXHUxMDhFXFx1MTBEMC1cXHUxMEZBXFx1MTBGRC1cXHUxMjQ4XFx1MTI0QS1cXHUxMjREXFx1MTI1MC1cXHUxMjU2XFx1MTI1OFxcdTEyNUEtXFx1MTI1RFxcdTEyNjAtXFx1MTI4OFxcdTEyOEEtXFx1MTI4RFxcdTEyOTAtXFx1MTJCMFxcdTEyQjItXFx1MTJCNVxcdTEyQjgtXFx1MTJCRVxcdTEyQzBcXHUxMkMyLVxcdTEyQzVcXHUxMkM4LVxcdTEyRDZcXHUxMkQ4LVxcdTEzMTBcXHUxMzEyLVxcdTEzMTVcXHUxMzE4LVxcdTEzNUFcXHUxMzgwLVxcdTEzOEZcXHUxNDAxLVxcdTE2NkNcXHUxNjZGLVxcdTE2N0ZcXHUxNjgxLVxcdTE2OUFcXHUxNkEwLVxcdTE2RUFcXHUxNkYxLVxcdTE2RjhcXHUxNzAwLVxcdTE3MENcXHUxNzBFLVxcdTE3MTFcXHUxNzIwLVxcdTE3MzFcXHUxNzQwLVxcdTE3NTFcXHUxNzYwLVxcdTE3NkNcXHUxNzZFLVxcdTE3NzBcXHUxNzgwLVxcdTE3QjNcXHUxN0RDXFx1MTgyMC1cXHUxODQyXFx1MTg0NC1cXHUxODc3XFx1MTg4MC1cXHUxODg0XFx1MTg4Ny1cXHUxOEE4XFx1MThBQVxcdTE4QjAtXFx1MThGNVxcdTE5MDAtXFx1MTkxRVxcdTE5NTAtXFx1MTk2RFxcdTE5NzAtXFx1MTk3NFxcdTE5ODAtXFx1MTlBQlxcdTE5QjAtXFx1MTlDOVxcdTFBMDAtXFx1MUExNlxcdTFBMjAtXFx1MUE1NFxcdTFCMDUtXFx1MUIzM1xcdTFCNDUtXFx1MUI0QlxcdTFCODMtXFx1MUJBMFxcdTFCQUVcXHUxQkFGXFx1MUJCQS1cXHUxQkU1XFx1MUMwMC1cXHUxQzIzXFx1MUM0RC1cXHUxQzRGXFx1MUM1QS1cXHUxQzc3XFx1MUNFOS1cXHUxQ0VDXFx1MUNFRS1cXHUxQ0YxXFx1MUNGNVxcdTFDRjZcXHUyMTM1LVxcdTIxMzhcXHUyRDMwLVxcdTJENjdcXHUyRDgwLVxcdTJEOTZcXHUyREEwLVxcdTJEQTZcXHUyREE4LVxcdTJEQUVcXHUyREIwLVxcdTJEQjZcXHUyREI4LVxcdTJEQkVcXHUyREMwLVxcdTJEQzZcXHUyREM4LVxcdTJEQ0VcXHUyREQwLVxcdTJERDZcXHUyREQ4LVxcdTJEREVcXHUzMDA2XFx1MzAzQ1xcdTMwNDEtXFx1MzA5NlxcdTMwOUZcXHUzMEExLVxcdTMwRkFcXHUzMEZGXFx1MzEwNS1cXHUzMTJEXFx1MzEzMS1cXHUzMThFXFx1MzFBMC1cXHUzMUJBXFx1MzFGMC1cXHUzMUZGXFx1MzQwMC1cXHU0REI1XFx1NEUwMC1cXHU5RkQ1XFx1QTAwMC1cXHVBMDE0XFx1QTAxNi1cXHVBNDhDXFx1QTREMC1cXHVBNEY3XFx1QTUwMC1cXHVBNjBCXFx1QTYxMC1cXHVBNjFGXFx1QTYyQVxcdUE2MkJcXHVBNjZFXFx1QTZBMC1cXHVBNkU1XFx1QTc4RlxcdUE3RjdcXHVBN0ZCLVxcdUE4MDFcXHVBODAzLVxcdUE4MDVcXHVBODA3LVxcdUE4MEFcXHVBODBDLVxcdUE4MjJcXHVBODQwLVxcdUE4NzNcXHVBODgyLVxcdUE4QjNcXHVBOEYyLVxcdUE4RjdcXHVBOEZCXFx1QThGRFxcdUE5MEEtXFx1QTkyNVxcdUE5MzAtXFx1QTk0NlxcdUE5NjAtXFx1QTk3Q1xcdUE5ODQtXFx1QTlCMlxcdUE5RTAtXFx1QTlFNFxcdUE5RTctXFx1QTlFRlxcdUE5RkEtXFx1QTlGRVxcdUFBMDAtXFx1QUEyOFxcdUFBNDAtXFx1QUE0MlxcdUFBNDQtXFx1QUE0QlxcdUFBNjAtXFx1QUE2RlxcdUFBNzEtXFx1QUE3NlxcdUFBN0FcXHVBQTdFLVxcdUFBQUZcXHVBQUIxXFx1QUFCNVxcdUFBQjZcXHVBQUI5LVxcdUFBQkRcXHVBQUMwXFx1QUFDMlxcdUFBREJcXHVBQURDXFx1QUFFMC1cXHVBQUVBXFx1QUFGMlxcdUFCMDEtXFx1QUIwNlxcdUFCMDktXFx1QUIwRVxcdUFCMTEtXFx1QUIxNlxcdUFCMjAtXFx1QUIyNlxcdUFCMjgtXFx1QUIyRVxcdUFCQzAtXFx1QUJFMlxcdUFDMDAtXFx1RDdBM1xcdUQ3QjAtXFx1RDdDNlxcdUQ3Q0ItXFx1RDdGQlxcdUY5MDAtXFx1RkE2RFxcdUZBNzAtXFx1RkFEOVxcdUZCMURcXHVGQjFGLVxcdUZCMjhcXHVGQjJBLVxcdUZCMzZcXHVGQjM4LVxcdUZCM0NcXHVGQjNFXFx1RkI0MFxcdUZCNDFcXHVGQjQzXFx1RkI0NFxcdUZCNDYtXFx1RkJCMVxcdUZCRDMtXFx1RkQzRFxcdUZENTAtXFx1RkQ4RlxcdUZEOTItXFx1RkRDN1xcdUZERjAtXFx1RkRGQlxcdUZFNzAtXFx1RkU3NFxcdUZFNzYtXFx1RkVGQ1xcdUZGNjYtXFx1RkY2RlxcdUZGNzEtXFx1RkY5RFxcdUZGQTAtXFx1RkZCRVxcdUZGQzItXFx1RkZDN1xcdUZGQ0EtXFx1RkZDRlxcdUZGRDItXFx1RkZEN1xcdUZGREEtXFx1RkZEQycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REMwMC1cXHVEQzBCXFx1REMwRC1cXHVEQzI2XFx1REMyOC1cXHVEQzNBXFx1REMzQ1xcdURDM0RcXHVEQzNGLVxcdURDNERcXHVEQzUwLVxcdURDNURcXHVEQzgwLVxcdURDRkFcXHVERTgwLVxcdURFOUNcXHVERUEwLVxcdURFRDBcXHVERjAwLVxcdURGMUZcXHVERjMwLVxcdURGNDBcXHVERjQyLVxcdURGNDlcXHVERjUwLVxcdURGNzVcXHVERjgwLVxcdURGOURcXHVERkEwLVxcdURGQzNcXHVERkM4LVxcdURGQ0ZdfFxcdUQ4MDFbXFx1REM1MC1cXHVEQzlEXFx1REQwMC1cXHVERDI3XFx1REQzMC1cXHVERDYzXFx1REUwMC1cXHVERjM2XFx1REY0MC1cXHVERjU1XFx1REY2MC1cXHVERjY3XXxcXHVEODAyW1xcdURDMDAtXFx1REMwNVxcdURDMDhcXHVEQzBBLVxcdURDMzVcXHVEQzM3XFx1REMzOFxcdURDM0NcXHVEQzNGLVxcdURDNTVcXHVEQzYwLVxcdURDNzZcXHVEQzgwLVxcdURDOUVcXHVEQ0UwLVxcdURDRjJcXHVEQ0Y0XFx1RENGNVxcdUREMDAtXFx1REQxNVxcdUREMjAtXFx1REQzOVxcdUREODAtXFx1RERCN1xcdUREQkVcXHVEREJGXFx1REUwMFxcdURFMTAtXFx1REUxM1xcdURFMTUtXFx1REUxN1xcdURFMTktXFx1REUzM1xcdURFNjAtXFx1REU3Q1xcdURFODAtXFx1REU5Q1xcdURFQzAtXFx1REVDN1xcdURFQzktXFx1REVFNFxcdURGMDAtXFx1REYzNVxcdURGNDAtXFx1REY1NVxcdURGNjAtXFx1REY3MlxcdURGODAtXFx1REY5MV18XFx1RDgwM1tcXHVEQzAwLVxcdURDNDhdfFxcdUQ4MDRbXFx1REMwMy1cXHVEQzM3XFx1REM4My1cXHVEQ0FGXFx1RENEMC1cXHVEQ0U4XFx1REQwMy1cXHVERDI2XFx1REQ1MC1cXHVERDcyXFx1REQ3NlxcdUREODMtXFx1RERCMlxcdUREQzEtXFx1RERDNFxcdUREREFcXHVERERDXFx1REUwMC1cXHVERTExXFx1REUxMy1cXHVERTJCXFx1REU4MC1cXHVERTg2XFx1REU4OFxcdURFOEEtXFx1REU4RFxcdURFOEYtXFx1REU5RFxcdURFOUYtXFx1REVBOFxcdURFQjAtXFx1REVERVxcdURGMDUtXFx1REYwQ1xcdURGMEZcXHVERjEwXFx1REYxMy1cXHVERjI4XFx1REYyQS1cXHVERjMwXFx1REYzMlxcdURGMzNcXHVERjM1LVxcdURGMzlcXHVERjNEXFx1REY1MFxcdURGNUQtXFx1REY2MV18XFx1RDgwNVtcXHVEQzAwLVxcdURDMzRcXHVEQzQ3LVxcdURDNEFcXHVEQzgwLVxcdURDQUZcXHVEQ0M0XFx1RENDNVxcdURDQzdcXHVERDgwLVxcdUREQUVcXHVEREQ4LVxcdUREREJcXHVERTAwLVxcdURFMkZcXHVERTQ0XFx1REU4MC1cXHVERUFBXFx1REYwMC1cXHVERjE5XXxcXHVEODA2W1xcdURDRkZcXHVERUMwLVxcdURFRjhdfFxcdUQ4MDdbXFx1REMwMC1cXHVEQzA4XFx1REMwQS1cXHVEQzJFXFx1REM0MFxcdURDNzItXFx1REM4Rl18XFx1RDgwOFtcXHVEQzAwLVxcdURGOTldfFxcdUQ4MDlbXFx1REM4MC1cXHVERDQzXXxbXFx1RDgwQ1xcdUQ4MUMtXFx1RDgyMFxcdUQ4NDAtXFx1RDg2OFxcdUQ4NkEtXFx1RDg2Q1xcdUQ4NkYtXFx1RDg3Ml1bXFx1REMwMC1cXHVERkZGXXxcXHVEODBEW1xcdURDMDAtXFx1REMyRV18XFx1RDgxMVtcXHVEQzAwLVxcdURFNDZdfFxcdUQ4MUFbXFx1REMwMC1cXHVERTM4XFx1REU0MC1cXHVERTVFXFx1REVEMC1cXHVERUVEXFx1REYwMC1cXHVERjJGXFx1REY2My1cXHVERjc3XFx1REY3RC1cXHVERjhGXXxcXHVEODFCW1xcdURGMDAtXFx1REY0NFxcdURGNTBdfFxcdUQ4MjFbXFx1REMwMC1cXHVERkVDXXxcXHVEODIyW1xcdURDMDAtXFx1REVGMl18XFx1RDgyQ1tcXHVEQzAwXFx1REMwMV18XFx1RDgyRltcXHVEQzAwLVxcdURDNkFcXHVEQzcwLVxcdURDN0NcXHVEQzgwLVxcdURDODhcXHVEQzkwLVxcdURDOTldfFxcdUQ4M0FbXFx1REMwMC1cXHVEQ0M0XXxcXHVEODNCW1xcdURFMDAtXFx1REUwM1xcdURFMDUtXFx1REUxRlxcdURFMjFcXHVERTIyXFx1REUyNFxcdURFMjdcXHVERTI5LVxcdURFMzJcXHVERTM0LVxcdURFMzdcXHVERTM5XFx1REUzQlxcdURFNDJcXHVERTQ3XFx1REU0OVxcdURFNEJcXHVERTRELVxcdURFNEZcXHVERTUxXFx1REU1MlxcdURFNTRcXHVERTU3XFx1REU1OVxcdURFNUJcXHVERTVEXFx1REU1RlxcdURFNjFcXHVERTYyXFx1REU2NFxcdURFNjctXFx1REU2QVxcdURFNkMtXFx1REU3MlxcdURFNzQtXFx1REU3N1xcdURFNzktXFx1REU3Q1xcdURFN0VcXHVERTgwLVxcdURFODlcXHVERThCLVxcdURFOUJcXHVERUExLVxcdURFQTNcXHVERUE1LVxcdURFQTlcXHVERUFCLVxcdURFQkJdfFxcdUQ4NjlbXFx1REMwMC1cXHVERUQ2XFx1REYwMC1cXHVERkZGXXxcXHVEODZEW1xcdURDMDAtXFx1REYzNFxcdURGNDAtXFx1REZGRl18XFx1RDg2RVtcXHVEQzAwLVxcdURDMURcXHVEQzIwLVxcdURGRkZdfFxcdUQ4NzNbXFx1REMwMC1cXHVERUExXXxcXHVEODdFW1xcdURDMDAtXFx1REUxRF0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTHQnLFxuICAgICAgICBhbGlhczogJ1RpdGxlY2FzZV9MZXR0ZXInLFxuICAgICAgICBibXA6ICdcXHUwMUM1XFx1MDFDOFxcdTAxQ0JcXHUwMUYyXFx1MUY4OC1cXHUxRjhGXFx1MUY5OC1cXHUxRjlGXFx1MUZBOC1cXHUxRkFGXFx1MUZCQ1xcdTFGQ0NcXHUxRkZDJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0x1JyxcbiAgICAgICAgYWxpYXM6ICdVcHBlcmNhc2VfTGV0dGVyJyxcbiAgICAgICAgYm1wOiAnQS1aXFx4QzAtXFx4RDZcXHhEOC1cXHhERVxcdTAxMDBcXHUwMTAyXFx1MDEwNFxcdTAxMDZcXHUwMTA4XFx1MDEwQVxcdTAxMENcXHUwMTBFXFx1MDExMFxcdTAxMTJcXHUwMTE0XFx1MDExNlxcdTAxMThcXHUwMTFBXFx1MDExQ1xcdTAxMUVcXHUwMTIwXFx1MDEyMlxcdTAxMjRcXHUwMTI2XFx1MDEyOFxcdTAxMkFcXHUwMTJDXFx1MDEyRVxcdTAxMzBcXHUwMTMyXFx1MDEzNFxcdTAxMzZcXHUwMTM5XFx1MDEzQlxcdTAxM0RcXHUwMTNGXFx1MDE0MVxcdTAxNDNcXHUwMTQ1XFx1MDE0N1xcdTAxNEFcXHUwMTRDXFx1MDE0RVxcdTAxNTBcXHUwMTUyXFx1MDE1NFxcdTAxNTZcXHUwMTU4XFx1MDE1QVxcdTAxNUNcXHUwMTVFXFx1MDE2MFxcdTAxNjJcXHUwMTY0XFx1MDE2NlxcdTAxNjhcXHUwMTZBXFx1MDE2Q1xcdTAxNkVcXHUwMTcwXFx1MDE3MlxcdTAxNzRcXHUwMTc2XFx1MDE3OFxcdTAxNzlcXHUwMTdCXFx1MDE3RFxcdTAxODFcXHUwMTgyXFx1MDE4NFxcdTAxODZcXHUwMTg3XFx1MDE4OS1cXHUwMThCXFx1MDE4RS1cXHUwMTkxXFx1MDE5M1xcdTAxOTRcXHUwMTk2LVxcdTAxOThcXHUwMTlDXFx1MDE5RFxcdTAxOUZcXHUwMUEwXFx1MDFBMlxcdTAxQTRcXHUwMUE2XFx1MDFBN1xcdTAxQTlcXHUwMUFDXFx1MDFBRVxcdTAxQUZcXHUwMUIxLVxcdTAxQjNcXHUwMUI1XFx1MDFCN1xcdTAxQjhcXHUwMUJDXFx1MDFDNFxcdTAxQzdcXHUwMUNBXFx1MDFDRFxcdTAxQ0ZcXHUwMUQxXFx1MDFEM1xcdTAxRDVcXHUwMUQ3XFx1MDFEOVxcdTAxREJcXHUwMURFXFx1MDFFMFxcdTAxRTJcXHUwMUU0XFx1MDFFNlxcdTAxRThcXHUwMUVBXFx1MDFFQ1xcdTAxRUVcXHUwMUYxXFx1MDFGNFxcdTAxRjYtXFx1MDFGOFxcdTAxRkFcXHUwMUZDXFx1MDFGRVxcdTAyMDBcXHUwMjAyXFx1MDIwNFxcdTAyMDZcXHUwMjA4XFx1MDIwQVxcdTAyMENcXHUwMjBFXFx1MDIxMFxcdTAyMTJcXHUwMjE0XFx1MDIxNlxcdTAyMThcXHUwMjFBXFx1MDIxQ1xcdTAyMUVcXHUwMjIwXFx1MDIyMlxcdTAyMjRcXHUwMjI2XFx1MDIyOFxcdTAyMkFcXHUwMjJDXFx1MDIyRVxcdTAyMzBcXHUwMjMyXFx1MDIzQVxcdTAyM0JcXHUwMjNEXFx1MDIzRVxcdTAyNDFcXHUwMjQzLVxcdTAyNDZcXHUwMjQ4XFx1MDI0QVxcdTAyNENcXHUwMjRFXFx1MDM3MFxcdTAzNzJcXHUwMzc2XFx1MDM3RlxcdTAzODZcXHUwMzg4LVxcdTAzOEFcXHUwMzhDXFx1MDM4RVxcdTAzOEZcXHUwMzkxLVxcdTAzQTFcXHUwM0EzLVxcdTAzQUJcXHUwM0NGXFx1MDNEMi1cXHUwM0Q0XFx1MDNEOFxcdTAzREFcXHUwM0RDXFx1MDNERVxcdTAzRTBcXHUwM0UyXFx1MDNFNFxcdTAzRTZcXHUwM0U4XFx1MDNFQVxcdTAzRUNcXHUwM0VFXFx1MDNGNFxcdTAzRjdcXHUwM0Y5XFx1MDNGQVxcdTAzRkQtXFx1MDQyRlxcdTA0NjBcXHUwNDYyXFx1MDQ2NFxcdTA0NjZcXHUwNDY4XFx1MDQ2QVxcdTA0NkNcXHUwNDZFXFx1MDQ3MFxcdTA0NzJcXHUwNDc0XFx1MDQ3NlxcdTA0NzhcXHUwNDdBXFx1MDQ3Q1xcdTA0N0VcXHUwNDgwXFx1MDQ4QVxcdTA0OENcXHUwNDhFXFx1MDQ5MFxcdTA0OTJcXHUwNDk0XFx1MDQ5NlxcdTA0OThcXHUwNDlBXFx1MDQ5Q1xcdTA0OUVcXHUwNEEwXFx1MDRBMlxcdTA0QTRcXHUwNEE2XFx1MDRBOFxcdTA0QUFcXHUwNEFDXFx1MDRBRVxcdTA0QjBcXHUwNEIyXFx1MDRCNFxcdTA0QjZcXHUwNEI4XFx1MDRCQVxcdTA0QkNcXHUwNEJFXFx1MDRDMFxcdTA0QzFcXHUwNEMzXFx1MDRDNVxcdTA0QzdcXHUwNEM5XFx1MDRDQlxcdTA0Q0RcXHUwNEQwXFx1MDREMlxcdTA0RDRcXHUwNEQ2XFx1MDREOFxcdTA0REFcXHUwNERDXFx1MDRERVxcdTA0RTBcXHUwNEUyXFx1MDRFNFxcdTA0RTZcXHUwNEU4XFx1MDRFQVxcdTA0RUNcXHUwNEVFXFx1MDRGMFxcdTA0RjJcXHUwNEY0XFx1MDRGNlxcdTA0RjhcXHUwNEZBXFx1MDRGQ1xcdTA0RkVcXHUwNTAwXFx1MDUwMlxcdTA1MDRcXHUwNTA2XFx1MDUwOFxcdTA1MEFcXHUwNTBDXFx1MDUwRVxcdTA1MTBcXHUwNTEyXFx1MDUxNFxcdTA1MTZcXHUwNTE4XFx1MDUxQVxcdTA1MUNcXHUwNTFFXFx1MDUyMFxcdTA1MjJcXHUwNTI0XFx1MDUyNlxcdTA1MjhcXHUwNTJBXFx1MDUyQ1xcdTA1MkVcXHUwNTMxLVxcdTA1NTZcXHUxMEEwLVxcdTEwQzVcXHUxMEM3XFx1MTBDRFxcdTEzQTAtXFx1MTNGNVxcdTFFMDBcXHUxRTAyXFx1MUUwNFxcdTFFMDZcXHUxRTA4XFx1MUUwQVxcdTFFMENcXHUxRTBFXFx1MUUxMFxcdTFFMTJcXHUxRTE0XFx1MUUxNlxcdTFFMThcXHUxRTFBXFx1MUUxQ1xcdTFFMUVcXHUxRTIwXFx1MUUyMlxcdTFFMjRcXHUxRTI2XFx1MUUyOFxcdTFFMkFcXHUxRTJDXFx1MUUyRVxcdTFFMzBcXHUxRTMyXFx1MUUzNFxcdTFFMzZcXHUxRTM4XFx1MUUzQVxcdTFFM0NcXHUxRTNFXFx1MUU0MFxcdTFFNDJcXHUxRTQ0XFx1MUU0NlxcdTFFNDhcXHUxRTRBXFx1MUU0Q1xcdTFFNEVcXHUxRTUwXFx1MUU1MlxcdTFFNTRcXHUxRTU2XFx1MUU1OFxcdTFFNUFcXHUxRTVDXFx1MUU1RVxcdTFFNjBcXHUxRTYyXFx1MUU2NFxcdTFFNjZcXHUxRTY4XFx1MUU2QVxcdTFFNkNcXHUxRTZFXFx1MUU3MFxcdTFFNzJcXHUxRTc0XFx1MUU3NlxcdTFFNzhcXHUxRTdBXFx1MUU3Q1xcdTFFN0VcXHUxRTgwXFx1MUU4MlxcdTFFODRcXHUxRTg2XFx1MUU4OFxcdTFFOEFcXHUxRThDXFx1MUU4RVxcdTFFOTBcXHUxRTkyXFx1MUU5NFxcdTFFOUVcXHUxRUEwXFx1MUVBMlxcdTFFQTRcXHUxRUE2XFx1MUVBOFxcdTFFQUFcXHUxRUFDXFx1MUVBRVxcdTFFQjBcXHUxRUIyXFx1MUVCNFxcdTFFQjZcXHUxRUI4XFx1MUVCQVxcdTFFQkNcXHUxRUJFXFx1MUVDMFxcdTFFQzJcXHUxRUM0XFx1MUVDNlxcdTFFQzhcXHUxRUNBXFx1MUVDQ1xcdTFFQ0VcXHUxRUQwXFx1MUVEMlxcdTFFRDRcXHUxRUQ2XFx1MUVEOFxcdTFFREFcXHUxRURDXFx1MUVERVxcdTFFRTBcXHUxRUUyXFx1MUVFNFxcdTFFRTZcXHUxRUU4XFx1MUVFQVxcdTFFRUNcXHUxRUVFXFx1MUVGMFxcdTFFRjJcXHUxRUY0XFx1MUVGNlxcdTFFRjhcXHUxRUZBXFx1MUVGQ1xcdTFFRkVcXHUxRjA4LVxcdTFGMEZcXHUxRjE4LVxcdTFGMURcXHUxRjI4LVxcdTFGMkZcXHUxRjM4LVxcdTFGM0ZcXHUxRjQ4LVxcdTFGNERcXHUxRjU5XFx1MUY1QlxcdTFGNURcXHUxRjVGXFx1MUY2OC1cXHUxRjZGXFx1MUZCOC1cXHUxRkJCXFx1MUZDOC1cXHUxRkNCXFx1MUZEOC1cXHUxRkRCXFx1MUZFOC1cXHUxRkVDXFx1MUZGOC1cXHUxRkZCXFx1MjEwMlxcdTIxMDdcXHUyMTBCLVxcdTIxMERcXHUyMTEwLVxcdTIxMTJcXHUyMTE1XFx1MjExOS1cXHUyMTFEXFx1MjEyNFxcdTIxMjZcXHUyMTI4XFx1MjEyQS1cXHUyMTJEXFx1MjEzMC1cXHUyMTMzXFx1MjEzRVxcdTIxM0ZcXHUyMTQ1XFx1MjE4M1xcdTJDMDAtXFx1MkMyRVxcdTJDNjBcXHUyQzYyLVxcdTJDNjRcXHUyQzY3XFx1MkM2OVxcdTJDNkJcXHUyQzZELVxcdTJDNzBcXHUyQzcyXFx1MkM3NVxcdTJDN0UtXFx1MkM4MFxcdTJDODJcXHUyQzg0XFx1MkM4NlxcdTJDODhcXHUyQzhBXFx1MkM4Q1xcdTJDOEVcXHUyQzkwXFx1MkM5MlxcdTJDOTRcXHUyQzk2XFx1MkM5OFxcdTJDOUFcXHUyQzlDXFx1MkM5RVxcdTJDQTBcXHUyQ0EyXFx1MkNBNFxcdTJDQTZcXHUyQ0E4XFx1MkNBQVxcdTJDQUNcXHUyQ0FFXFx1MkNCMFxcdTJDQjJcXHUyQ0I0XFx1MkNCNlxcdTJDQjhcXHUyQ0JBXFx1MkNCQ1xcdTJDQkVcXHUyQ0MwXFx1MkNDMlxcdTJDQzRcXHUyQ0M2XFx1MkNDOFxcdTJDQ0FcXHUyQ0NDXFx1MkNDRVxcdTJDRDBcXHUyQ0QyXFx1MkNENFxcdTJDRDZcXHUyQ0Q4XFx1MkNEQVxcdTJDRENcXHUyQ0RFXFx1MkNFMFxcdTJDRTJcXHUyQ0VCXFx1MkNFRFxcdTJDRjJcXHVBNjQwXFx1QTY0MlxcdUE2NDRcXHVBNjQ2XFx1QTY0OFxcdUE2NEFcXHVBNjRDXFx1QTY0RVxcdUE2NTBcXHVBNjUyXFx1QTY1NFxcdUE2NTZcXHVBNjU4XFx1QTY1QVxcdUE2NUNcXHVBNjVFXFx1QTY2MFxcdUE2NjJcXHVBNjY0XFx1QTY2NlxcdUE2NjhcXHVBNjZBXFx1QTY2Q1xcdUE2ODBcXHVBNjgyXFx1QTY4NFxcdUE2ODZcXHVBNjg4XFx1QTY4QVxcdUE2OENcXHVBNjhFXFx1QTY5MFxcdUE2OTJcXHVBNjk0XFx1QTY5NlxcdUE2OThcXHVBNjlBXFx1QTcyMlxcdUE3MjRcXHVBNzI2XFx1QTcyOFxcdUE3MkFcXHVBNzJDXFx1QTcyRVxcdUE3MzJcXHVBNzM0XFx1QTczNlxcdUE3MzhcXHVBNzNBXFx1QTczQ1xcdUE3M0VcXHVBNzQwXFx1QTc0MlxcdUE3NDRcXHVBNzQ2XFx1QTc0OFxcdUE3NEFcXHVBNzRDXFx1QTc0RVxcdUE3NTBcXHVBNzUyXFx1QTc1NFxcdUE3NTZcXHVBNzU4XFx1QTc1QVxcdUE3NUNcXHVBNzVFXFx1QTc2MFxcdUE3NjJcXHVBNzY0XFx1QTc2NlxcdUE3NjhcXHVBNzZBXFx1QTc2Q1xcdUE3NkVcXHVBNzc5XFx1QTc3QlxcdUE3N0RcXHVBNzdFXFx1QTc4MFxcdUE3ODJcXHVBNzg0XFx1QTc4NlxcdUE3OEJcXHVBNzhEXFx1QTc5MFxcdUE3OTJcXHVBNzk2XFx1QTc5OFxcdUE3OUFcXHVBNzlDXFx1QTc5RVxcdUE3QTBcXHVBN0EyXFx1QTdBNFxcdUE3QTZcXHVBN0E4XFx1QTdBQS1cXHVBN0FFXFx1QTdCMC1cXHVBN0I0XFx1QTdCNlxcdUZGMjEtXFx1RkYzQScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDFbXFx1REMwMC1cXHVEQzI3XFx1RENCMC1cXHVEQ0QzXXxcXHVEODAzW1xcdURDODAtXFx1RENCMl18XFx1RDgwNltcXHVEQ0EwLVxcdURDQkZdfFxcdUQ4MzVbXFx1REMwMC1cXHVEQzE5XFx1REMzNC1cXHVEQzREXFx1REM2OC1cXHVEQzgxXFx1REM5Q1xcdURDOUVcXHVEQzlGXFx1RENBMlxcdURDQTVcXHVEQ0E2XFx1RENBOS1cXHVEQ0FDXFx1RENBRS1cXHVEQ0I1XFx1RENEMC1cXHVEQ0U5XFx1REQwNFxcdUREMDVcXHVERDA3LVxcdUREMEFcXHVERDBELVxcdUREMTRcXHVERDE2LVxcdUREMUNcXHVERDM4XFx1REQzOVxcdUREM0ItXFx1REQzRVxcdURENDAtXFx1REQ0NFxcdURENDZcXHVERDRBLVxcdURENTBcXHVERDZDLVxcdUREODVcXHVEREEwLVxcdUREQjlcXHVEREQ0LVxcdURERURcXHVERTA4LVxcdURFMjFcXHVERTNDLVxcdURFNTVcXHVERTcwLVxcdURFODlcXHVERUE4LVxcdURFQzBcXHVERUUyLVxcdURFRkFcXHVERjFDLVxcdURGMzRcXHVERjU2LVxcdURGNkVcXHVERjkwLVxcdURGQThcXHVERkNBXXxcXHVEODNBW1xcdUREMDAtXFx1REQyMV0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTScsXG4gICAgICAgIGFsaWFzOiAnTWFyaycsXG4gICAgICAgIGJtcDogJ1xcdTAzMDAtXFx1MDM2RlxcdTA0ODMtXFx1MDQ4OVxcdTA1OTEtXFx1MDVCRFxcdTA1QkZcXHUwNUMxXFx1MDVDMlxcdTA1QzRcXHUwNUM1XFx1MDVDN1xcdTA2MTAtXFx1MDYxQVxcdTA2NEItXFx1MDY1RlxcdTA2NzBcXHUwNkQ2LVxcdTA2RENcXHUwNkRGLVxcdTA2RTRcXHUwNkU3XFx1MDZFOFxcdTA2RUEtXFx1MDZFRFxcdTA3MTFcXHUwNzMwLVxcdTA3NEFcXHUwN0E2LVxcdTA3QjBcXHUwN0VCLVxcdTA3RjNcXHUwODE2LVxcdTA4MTlcXHUwODFCLVxcdTA4MjNcXHUwODI1LVxcdTA4MjdcXHUwODI5LVxcdTA4MkRcXHUwODU5LVxcdTA4NUJcXHUwOEQ0LVxcdTA4RTFcXHUwOEUzLVxcdTA5MDNcXHUwOTNBLVxcdTA5M0NcXHUwOTNFLVxcdTA5NEZcXHUwOTUxLVxcdTA5NTdcXHUwOTYyXFx1MDk2M1xcdTA5ODEtXFx1MDk4M1xcdTA5QkNcXHUwOUJFLVxcdTA5QzRcXHUwOUM3XFx1MDlDOFxcdTA5Q0ItXFx1MDlDRFxcdTA5RDdcXHUwOUUyXFx1MDlFM1xcdTBBMDEtXFx1MEEwM1xcdTBBM0NcXHUwQTNFLVxcdTBBNDJcXHUwQTQ3XFx1MEE0OFxcdTBBNEItXFx1MEE0RFxcdTBBNTFcXHUwQTcwXFx1MEE3MVxcdTBBNzVcXHUwQTgxLVxcdTBBODNcXHUwQUJDXFx1MEFCRS1cXHUwQUM1XFx1MEFDNy1cXHUwQUM5XFx1MEFDQi1cXHUwQUNEXFx1MEFFMlxcdTBBRTNcXHUwQjAxLVxcdTBCMDNcXHUwQjNDXFx1MEIzRS1cXHUwQjQ0XFx1MEI0N1xcdTBCNDhcXHUwQjRCLVxcdTBCNERcXHUwQjU2XFx1MEI1N1xcdTBCNjJcXHUwQjYzXFx1MEI4MlxcdTBCQkUtXFx1MEJDMlxcdTBCQzYtXFx1MEJDOFxcdTBCQ0EtXFx1MEJDRFxcdTBCRDdcXHUwQzAwLVxcdTBDMDNcXHUwQzNFLVxcdTBDNDRcXHUwQzQ2LVxcdTBDNDhcXHUwQzRBLVxcdTBDNERcXHUwQzU1XFx1MEM1NlxcdTBDNjJcXHUwQzYzXFx1MEM4MS1cXHUwQzgzXFx1MENCQ1xcdTBDQkUtXFx1MENDNFxcdTBDQzYtXFx1MENDOFxcdTBDQ0EtXFx1MENDRFxcdTBDRDVcXHUwQ0Q2XFx1MENFMlxcdTBDRTNcXHUwRDAxLVxcdTBEMDNcXHUwRDNFLVxcdTBENDRcXHUwRDQ2LVxcdTBENDhcXHUwRDRBLVxcdTBENERcXHUwRDU3XFx1MEQ2MlxcdTBENjNcXHUwRDgyXFx1MEQ4M1xcdTBEQ0FcXHUwRENGLVxcdTBERDRcXHUwREQ2XFx1MEREOC1cXHUwRERGXFx1MERGMlxcdTBERjNcXHUwRTMxXFx1MEUzNC1cXHUwRTNBXFx1MEU0Ny1cXHUwRTRFXFx1MEVCMVxcdTBFQjQtXFx1MEVCOVxcdTBFQkJcXHUwRUJDXFx1MEVDOC1cXHUwRUNEXFx1MEYxOFxcdTBGMTlcXHUwRjM1XFx1MEYzN1xcdTBGMzlcXHUwRjNFXFx1MEYzRlxcdTBGNzEtXFx1MEY4NFxcdTBGODZcXHUwRjg3XFx1MEY4RC1cXHUwRjk3XFx1MEY5OS1cXHUwRkJDXFx1MEZDNlxcdTEwMkItXFx1MTAzRVxcdTEwNTYtXFx1MTA1OVxcdTEwNUUtXFx1MTA2MFxcdTEwNjItXFx1MTA2NFxcdTEwNjctXFx1MTA2RFxcdTEwNzEtXFx1MTA3NFxcdTEwODItXFx1MTA4RFxcdTEwOEZcXHUxMDlBLVxcdTEwOURcXHUxMzVELVxcdTEzNUZcXHUxNzEyLVxcdTE3MTRcXHUxNzMyLVxcdTE3MzRcXHUxNzUyXFx1MTc1M1xcdTE3NzJcXHUxNzczXFx1MTdCNC1cXHUxN0QzXFx1MTdERFxcdTE4MEItXFx1MTgwRFxcdTE4ODVcXHUxODg2XFx1MThBOVxcdTE5MjAtXFx1MTkyQlxcdTE5MzAtXFx1MTkzQlxcdTFBMTctXFx1MUExQlxcdTFBNTUtXFx1MUE1RVxcdTFBNjAtXFx1MUE3Q1xcdTFBN0ZcXHUxQUIwLVxcdTFBQkVcXHUxQjAwLVxcdTFCMDRcXHUxQjM0LVxcdTFCNDRcXHUxQjZCLVxcdTFCNzNcXHUxQjgwLVxcdTFCODJcXHUxQkExLVxcdTFCQURcXHUxQkU2LVxcdTFCRjNcXHUxQzI0LVxcdTFDMzdcXHUxQ0QwLVxcdTFDRDJcXHUxQ0Q0LVxcdTFDRThcXHUxQ0VEXFx1MUNGMi1cXHUxQ0Y0XFx1MUNGOFxcdTFDRjlcXHUxREMwLVxcdTFERjVcXHUxREZCLVxcdTFERkZcXHUyMEQwLVxcdTIwRjBcXHUyQ0VGLVxcdTJDRjFcXHUyRDdGXFx1MkRFMC1cXHUyREZGXFx1MzAyQS1cXHUzMDJGXFx1MzA5OVxcdTMwOUFcXHVBNjZGLVxcdUE2NzJcXHVBNjc0LVxcdUE2N0RcXHVBNjlFXFx1QTY5RlxcdUE2RjBcXHVBNkYxXFx1QTgwMlxcdUE4MDZcXHVBODBCXFx1QTgyMy1cXHVBODI3XFx1QTg4MFxcdUE4ODFcXHVBOEI0LVxcdUE4QzVcXHVBOEUwLVxcdUE4RjFcXHVBOTI2LVxcdUE5MkRcXHVBOTQ3LVxcdUE5NTNcXHVBOTgwLVxcdUE5ODNcXHVBOUIzLVxcdUE5QzBcXHVBOUU1XFx1QUEyOS1cXHVBQTM2XFx1QUE0M1xcdUFBNENcXHVBQTREXFx1QUE3Qi1cXHVBQTdEXFx1QUFCMFxcdUFBQjItXFx1QUFCNFxcdUFBQjdcXHVBQUI4XFx1QUFCRVxcdUFBQkZcXHVBQUMxXFx1QUFFQi1cXHVBQUVGXFx1QUFGNVxcdUFBRjZcXHVBQkUzLVxcdUFCRUFcXHVBQkVDXFx1QUJFRFxcdUZCMUVcXHVGRTAwLVxcdUZFMEZcXHVGRTIwLVxcdUZFMkYnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdURERkRcXHVERUUwXFx1REY3Ni1cXHVERjdBXXxcXHVEODAyW1xcdURFMDEtXFx1REUwM1xcdURFMDVcXHVERTA2XFx1REUwQy1cXHVERTBGXFx1REUzOC1cXHVERTNBXFx1REUzRlxcdURFRTVcXHVERUU2XXxcXHVEODA0W1xcdURDMDAtXFx1REMwMlxcdURDMzgtXFx1REM0NlxcdURDN0YtXFx1REM4MlxcdURDQjAtXFx1RENCQVxcdUREMDAtXFx1REQwMlxcdUREMjctXFx1REQzNFxcdURENzNcXHVERDgwLVxcdUREODJcXHVEREIzLVxcdUREQzBcXHVERENBLVxcdUREQ0NcXHVERTJDLVxcdURFMzdcXHVERTNFXFx1REVERi1cXHVERUVBXFx1REYwMC1cXHVERjAzXFx1REYzQ1xcdURGM0UtXFx1REY0NFxcdURGNDdcXHVERjQ4XFx1REY0Qi1cXHVERjREXFx1REY1N1xcdURGNjJcXHVERjYzXFx1REY2Ni1cXHVERjZDXFx1REY3MC1cXHVERjc0XXxcXHVEODA1W1xcdURDMzUtXFx1REM0NlxcdURDQjAtXFx1RENDM1xcdUREQUYtXFx1RERCNVxcdUREQjgtXFx1RERDMFxcdURERENcXHVEREREXFx1REUzMC1cXHVERTQwXFx1REVBQi1cXHVERUI3XFx1REYxRC1cXHVERjJCXXxcXHVEODA3W1xcdURDMkYtXFx1REMzNlxcdURDMzgtXFx1REMzRlxcdURDOTItXFx1RENBN1xcdURDQTktXFx1RENCNl18XFx1RDgxQVtcXHVERUYwLVxcdURFRjRcXHVERjMwLVxcdURGMzZdfFxcdUQ4MUJbXFx1REY1MS1cXHVERjdFXFx1REY4Ri1cXHVERjkyXXxcXHVEODJGW1xcdURDOURcXHVEQzlFXXxcXHVEODM0W1xcdURENjUtXFx1REQ2OVxcdURENkQtXFx1REQ3MlxcdUREN0ItXFx1REQ4MlxcdUREODUtXFx1REQ4QlxcdUREQUEtXFx1RERBRFxcdURFNDItXFx1REU0NF18XFx1RDgzNltcXHVERTAwLVxcdURFMzZcXHVERTNCLVxcdURFNkNcXHVERTc1XFx1REU4NFxcdURFOUItXFx1REU5RlxcdURFQTEtXFx1REVBRl18XFx1RDgzOFtcXHVEQzAwLVxcdURDMDZcXHVEQzA4LVxcdURDMThcXHVEQzFCLVxcdURDMjFcXHVEQzIzXFx1REMyNFxcdURDMjYtXFx1REMyQV18XFx1RDgzQVtcXHVEQ0QwLVxcdURDRDZcXHVERDQ0LVxcdURENEFdfFxcdURCNDBbXFx1REQwMC1cXHVEREVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYycsXG4gICAgICAgIGFsaWFzOiAnU3BhY2luZ19NYXJrJyxcbiAgICAgICAgYm1wOiAnXFx1MDkwM1xcdTA5M0JcXHUwOTNFLVxcdTA5NDBcXHUwOTQ5LVxcdTA5NENcXHUwOTRFXFx1MDk0RlxcdTA5ODJcXHUwOTgzXFx1MDlCRS1cXHUwOUMwXFx1MDlDN1xcdTA5QzhcXHUwOUNCXFx1MDlDQ1xcdTA5RDdcXHUwQTAzXFx1MEEzRS1cXHUwQTQwXFx1MEE4M1xcdTBBQkUtXFx1MEFDMFxcdTBBQzlcXHUwQUNCXFx1MEFDQ1xcdTBCMDJcXHUwQjAzXFx1MEIzRVxcdTBCNDBcXHUwQjQ3XFx1MEI0OFxcdTBCNEJcXHUwQjRDXFx1MEI1N1xcdTBCQkVcXHUwQkJGXFx1MEJDMVxcdTBCQzJcXHUwQkM2LVxcdTBCQzhcXHUwQkNBLVxcdTBCQ0NcXHUwQkQ3XFx1MEMwMS1cXHUwQzAzXFx1MEM0MS1cXHUwQzQ0XFx1MEM4MlxcdTBDODNcXHUwQ0JFXFx1MENDMC1cXHUwQ0M0XFx1MENDN1xcdTBDQzhcXHUwQ0NBXFx1MENDQlxcdTBDRDVcXHUwQ0Q2XFx1MEQwMlxcdTBEMDNcXHUwRDNFLVxcdTBENDBcXHUwRDQ2LVxcdTBENDhcXHUwRDRBLVxcdTBENENcXHUwRDU3XFx1MEQ4MlxcdTBEODNcXHUwRENGLVxcdTBERDFcXHUwREQ4LVxcdTBEREZcXHUwREYyXFx1MERGM1xcdTBGM0VcXHUwRjNGXFx1MEY3RlxcdTEwMkJcXHUxMDJDXFx1MTAzMVxcdTEwMzhcXHUxMDNCXFx1MTAzQ1xcdTEwNTZcXHUxMDU3XFx1MTA2Mi1cXHUxMDY0XFx1MTA2Ny1cXHUxMDZEXFx1MTA4M1xcdTEwODRcXHUxMDg3LVxcdTEwOENcXHUxMDhGXFx1MTA5QS1cXHUxMDlDXFx1MTdCNlxcdTE3QkUtXFx1MTdDNVxcdTE3QzdcXHUxN0M4XFx1MTkyMy1cXHUxOTI2XFx1MTkyOS1cXHUxOTJCXFx1MTkzMFxcdTE5MzFcXHUxOTMzLVxcdTE5MzhcXHUxQTE5XFx1MUExQVxcdTFBNTVcXHUxQTU3XFx1MUE2MVxcdTFBNjNcXHUxQTY0XFx1MUE2RC1cXHUxQTcyXFx1MUIwNFxcdTFCMzVcXHUxQjNCXFx1MUIzRC1cXHUxQjQxXFx1MUI0M1xcdTFCNDRcXHUxQjgyXFx1MUJBMVxcdTFCQTZcXHUxQkE3XFx1MUJBQVxcdTFCRTdcXHUxQkVBLVxcdTFCRUNcXHUxQkVFXFx1MUJGMlxcdTFCRjNcXHUxQzI0LVxcdTFDMkJcXHUxQzM0XFx1MUMzNVxcdTFDRTFcXHUxQ0YyXFx1MUNGM1xcdTMwMkVcXHUzMDJGXFx1QTgyM1xcdUE4MjRcXHVBODI3XFx1QTg4MFxcdUE4ODFcXHVBOEI0LVxcdUE4QzNcXHVBOTUyXFx1QTk1M1xcdUE5ODNcXHVBOUI0XFx1QTlCNVxcdUE5QkFcXHVBOUJCXFx1QTlCRC1cXHVBOUMwXFx1QUEyRlxcdUFBMzBcXHVBQTMzXFx1QUEzNFxcdUFBNERcXHVBQTdCXFx1QUE3RFxcdUFBRUJcXHVBQUVFXFx1QUFFRlxcdUFBRjVcXHVBQkUzXFx1QUJFNFxcdUFCRTZcXHVBQkU3XFx1QUJFOVxcdUFCRUFcXHVBQkVDJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVEQzAwXFx1REMwMlxcdURDODJcXHVEQ0IwLVxcdURDQjJcXHVEQ0I3XFx1RENCOFxcdUREMkNcXHVERDgyXFx1RERCMy1cXHVEREI1XFx1RERCRlxcdUREQzBcXHVERTJDLVxcdURFMkVcXHVERTMyXFx1REUzM1xcdURFMzVcXHVERUUwLVxcdURFRTJcXHVERjAyXFx1REYwM1xcdURGM0VcXHVERjNGXFx1REY0MS1cXHVERjQ0XFx1REY0N1xcdURGNDhcXHVERjRCLVxcdURGNERcXHVERjU3XFx1REY2MlxcdURGNjNdfFxcdUQ4MDVbXFx1REMzNS1cXHVEQzM3XFx1REM0MFxcdURDNDFcXHVEQzQ1XFx1RENCMC1cXHVEQ0IyXFx1RENCOVxcdURDQkItXFx1RENCRVxcdURDQzFcXHVEREFGLVxcdUREQjFcXHVEREI4LVxcdUREQkJcXHVEREJFXFx1REUzMC1cXHVERTMyXFx1REUzQlxcdURFM0NcXHVERTNFXFx1REVBQ1xcdURFQUVcXHVERUFGXFx1REVCNlxcdURGMjBcXHVERjIxXFx1REYyNl18XFx1RDgwN1tcXHVEQzJGXFx1REMzRVxcdURDQTlcXHVEQ0IxXFx1RENCNF18XFx1RDgxQltcXHVERjUxLVxcdURGN0VdfFxcdUQ4MzRbXFx1REQ2NVxcdURENjZcXHVERDZELVxcdURENzJdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01lJyxcbiAgICAgICAgYWxpYXM6ICdFbmNsb3NpbmdfTWFyaycsXG4gICAgICAgIGJtcDogJ1xcdTA0ODhcXHUwNDg5XFx1MUFCRVxcdTIwREQtXFx1MjBFMFxcdTIwRTItXFx1MjBFNFxcdUE2NzAtXFx1QTY3MidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNbicsXG4gICAgICAgIGFsaWFzOiAnTm9uc3BhY2luZ19NYXJrJyxcbiAgICAgICAgYm1wOiAnXFx1MDMwMC1cXHUwMzZGXFx1MDQ4My1cXHUwNDg3XFx1MDU5MS1cXHUwNUJEXFx1MDVCRlxcdTA1QzFcXHUwNUMyXFx1MDVDNFxcdTA1QzVcXHUwNUM3XFx1MDYxMC1cXHUwNjFBXFx1MDY0Qi1cXHUwNjVGXFx1MDY3MFxcdTA2RDYtXFx1MDZEQ1xcdTA2REYtXFx1MDZFNFxcdTA2RTdcXHUwNkU4XFx1MDZFQS1cXHUwNkVEXFx1MDcxMVxcdTA3MzAtXFx1MDc0QVxcdTA3QTYtXFx1MDdCMFxcdTA3RUItXFx1MDdGM1xcdTA4MTYtXFx1MDgxOVxcdTA4MUItXFx1MDgyM1xcdTA4MjUtXFx1MDgyN1xcdTA4MjktXFx1MDgyRFxcdTA4NTktXFx1MDg1QlxcdTA4RDQtXFx1MDhFMVxcdTA4RTMtXFx1MDkwMlxcdTA5M0FcXHUwOTNDXFx1MDk0MS1cXHUwOTQ4XFx1MDk0RFxcdTA5NTEtXFx1MDk1N1xcdTA5NjJcXHUwOTYzXFx1MDk4MVxcdTA5QkNcXHUwOUMxLVxcdTA5QzRcXHUwOUNEXFx1MDlFMlxcdTA5RTNcXHUwQTAxXFx1MEEwMlxcdTBBM0NcXHUwQTQxXFx1MEE0MlxcdTBBNDdcXHUwQTQ4XFx1MEE0Qi1cXHUwQTREXFx1MEE1MVxcdTBBNzBcXHUwQTcxXFx1MEE3NVxcdTBBODFcXHUwQTgyXFx1MEFCQ1xcdTBBQzEtXFx1MEFDNVxcdTBBQzdcXHUwQUM4XFx1MEFDRFxcdTBBRTJcXHUwQUUzXFx1MEIwMVxcdTBCM0NcXHUwQjNGXFx1MEI0MS1cXHUwQjQ0XFx1MEI0RFxcdTBCNTZcXHUwQjYyXFx1MEI2M1xcdTBCODJcXHUwQkMwXFx1MEJDRFxcdTBDMDBcXHUwQzNFLVxcdTBDNDBcXHUwQzQ2LVxcdTBDNDhcXHUwQzRBLVxcdTBDNERcXHUwQzU1XFx1MEM1NlxcdTBDNjJcXHUwQzYzXFx1MEM4MVxcdTBDQkNcXHUwQ0JGXFx1MENDNlxcdTBDQ0NcXHUwQ0NEXFx1MENFMlxcdTBDRTNcXHUwRDAxXFx1MEQ0MS1cXHUwRDQ0XFx1MEQ0RFxcdTBENjJcXHUwRDYzXFx1MERDQVxcdTBERDItXFx1MERENFxcdTBERDZcXHUwRTMxXFx1MEUzNC1cXHUwRTNBXFx1MEU0Ny1cXHUwRTRFXFx1MEVCMVxcdTBFQjQtXFx1MEVCOVxcdTBFQkJcXHUwRUJDXFx1MEVDOC1cXHUwRUNEXFx1MEYxOFxcdTBGMTlcXHUwRjM1XFx1MEYzN1xcdTBGMzlcXHUwRjcxLVxcdTBGN0VcXHUwRjgwLVxcdTBGODRcXHUwRjg2XFx1MEY4N1xcdTBGOEQtXFx1MEY5N1xcdTBGOTktXFx1MEZCQ1xcdTBGQzZcXHUxMDJELVxcdTEwMzBcXHUxMDMyLVxcdTEwMzdcXHUxMDM5XFx1MTAzQVxcdTEwM0RcXHUxMDNFXFx1MTA1OFxcdTEwNTlcXHUxMDVFLVxcdTEwNjBcXHUxMDcxLVxcdTEwNzRcXHUxMDgyXFx1MTA4NVxcdTEwODZcXHUxMDhEXFx1MTA5RFxcdTEzNUQtXFx1MTM1RlxcdTE3MTItXFx1MTcxNFxcdTE3MzItXFx1MTczNFxcdTE3NTJcXHUxNzUzXFx1MTc3MlxcdTE3NzNcXHUxN0I0XFx1MTdCNVxcdTE3QjctXFx1MTdCRFxcdTE3QzZcXHUxN0M5LVxcdTE3RDNcXHUxN0REXFx1MTgwQi1cXHUxODBEXFx1MTg4NVxcdTE4ODZcXHUxOEE5XFx1MTkyMC1cXHUxOTIyXFx1MTkyN1xcdTE5MjhcXHUxOTMyXFx1MTkzOS1cXHUxOTNCXFx1MUExN1xcdTFBMThcXHUxQTFCXFx1MUE1NlxcdTFBNTgtXFx1MUE1RVxcdTFBNjBcXHUxQTYyXFx1MUE2NS1cXHUxQTZDXFx1MUE3My1cXHUxQTdDXFx1MUE3RlxcdTFBQjAtXFx1MUFCRFxcdTFCMDAtXFx1MUIwM1xcdTFCMzRcXHUxQjM2LVxcdTFCM0FcXHUxQjNDXFx1MUI0MlxcdTFCNkItXFx1MUI3M1xcdTFCODBcXHUxQjgxXFx1MUJBMi1cXHUxQkE1XFx1MUJBOFxcdTFCQTlcXHUxQkFCLVxcdTFCQURcXHUxQkU2XFx1MUJFOFxcdTFCRTlcXHUxQkVEXFx1MUJFRi1cXHUxQkYxXFx1MUMyQy1cXHUxQzMzXFx1MUMzNlxcdTFDMzdcXHUxQ0QwLVxcdTFDRDJcXHUxQ0Q0LVxcdTFDRTBcXHUxQ0UyLVxcdTFDRThcXHUxQ0VEXFx1MUNGNFxcdTFDRjhcXHUxQ0Y5XFx1MURDMC1cXHUxREY1XFx1MURGQi1cXHUxREZGXFx1MjBEMC1cXHUyMERDXFx1MjBFMVxcdTIwRTUtXFx1MjBGMFxcdTJDRUYtXFx1MkNGMVxcdTJEN0ZcXHUyREUwLVxcdTJERkZcXHUzMDJBLVxcdTMwMkRcXHUzMDk5XFx1MzA5QVxcdUE2NkZcXHVBNjc0LVxcdUE2N0RcXHVBNjlFXFx1QTY5RlxcdUE2RjBcXHVBNkYxXFx1QTgwMlxcdUE4MDZcXHVBODBCXFx1QTgyNVxcdUE4MjZcXHVBOEM0XFx1QThDNVxcdUE4RTAtXFx1QThGMVxcdUE5MjYtXFx1QTkyRFxcdUE5NDctXFx1QTk1MVxcdUE5ODAtXFx1QTk4MlxcdUE5QjNcXHVBOUI2LVxcdUE5QjlcXHVBOUJDXFx1QTlFNVxcdUFBMjktXFx1QUEyRVxcdUFBMzFcXHVBQTMyXFx1QUEzNVxcdUFBMzZcXHVBQTQzXFx1QUE0Q1xcdUFBN0NcXHVBQUIwXFx1QUFCMi1cXHVBQUI0XFx1QUFCN1xcdUFBQjhcXHVBQUJFXFx1QUFCRlxcdUFBQzFcXHVBQUVDXFx1QUFFRFxcdUFBRjZcXHVBQkU1XFx1QUJFOFxcdUFCRURcXHVGQjFFXFx1RkUwMC1cXHVGRTBGXFx1RkUyMC1cXHVGRTJGJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVEREZEXFx1REVFMFxcdURGNzYtXFx1REY3QV18XFx1RDgwMltcXHVERTAxLVxcdURFMDNcXHVERTA1XFx1REUwNlxcdURFMEMtXFx1REUwRlxcdURFMzgtXFx1REUzQVxcdURFM0ZcXHVERUU1XFx1REVFNl18XFx1RDgwNFtcXHVEQzAxXFx1REMzOC1cXHVEQzQ2XFx1REM3Ri1cXHVEQzgxXFx1RENCMy1cXHVEQ0I2XFx1RENCOVxcdURDQkFcXHVERDAwLVxcdUREMDJcXHVERDI3LVxcdUREMkJcXHVERDJELVxcdUREMzRcXHVERDczXFx1REQ4MFxcdUREODFcXHVEREI2LVxcdUREQkVcXHVERENBLVxcdUREQ0NcXHVERTJGLVxcdURFMzFcXHVERTM0XFx1REUzNlxcdURFMzdcXHVERTNFXFx1REVERlxcdURFRTMtXFx1REVFQVxcdURGMDBcXHVERjAxXFx1REYzQ1xcdURGNDBcXHVERjY2LVxcdURGNkNcXHVERjcwLVxcdURGNzRdfFxcdUQ4MDVbXFx1REMzOC1cXHVEQzNGXFx1REM0Mi1cXHVEQzQ0XFx1REM0NlxcdURDQjMtXFx1RENCOFxcdURDQkFcXHVEQ0JGXFx1RENDMFxcdURDQzJcXHVEQ0MzXFx1RERCMi1cXHVEREI1XFx1RERCQ1xcdUREQkRcXHVEREJGXFx1RERDMFxcdURERENcXHVEREREXFx1REUzMy1cXHVERTNBXFx1REUzRFxcdURFM0ZcXHVERTQwXFx1REVBQlxcdURFQURcXHVERUIwLVxcdURFQjVcXHVERUI3XFx1REYxRC1cXHVERjFGXFx1REYyMi1cXHVERjI1XFx1REYyNy1cXHVERjJCXXxcXHVEODA3W1xcdURDMzAtXFx1REMzNlxcdURDMzgtXFx1REMzRFxcdURDM0ZcXHVEQzkyLVxcdURDQTdcXHVEQ0FBLVxcdURDQjBcXHVEQ0IyXFx1RENCM1xcdURDQjVcXHVEQ0I2XXxcXHVEODFBW1xcdURFRjAtXFx1REVGNFxcdURGMzAtXFx1REYzNl18XFx1RDgxQltcXHVERjhGLVxcdURGOTJdfFxcdUQ4MkZbXFx1REM5RFxcdURDOUVdfFxcdUQ4MzRbXFx1REQ2Ny1cXHVERDY5XFx1REQ3Qi1cXHVERDgyXFx1REQ4NS1cXHVERDhCXFx1RERBQS1cXHVEREFEXFx1REU0Mi1cXHVERTQ0XXxcXHVEODM2W1xcdURFMDAtXFx1REUzNlxcdURFM0ItXFx1REU2Q1xcdURFNzVcXHVERTg0XFx1REU5Qi1cXHVERTlGXFx1REVBMS1cXHVERUFGXXxcXHVEODM4W1xcdURDMDAtXFx1REMwNlxcdURDMDgtXFx1REMxOFxcdURDMUItXFx1REMyMVxcdURDMjNcXHVEQzI0XFx1REMyNi1cXHVEQzJBXXxcXHVEODNBW1xcdURDRDAtXFx1RENENlxcdURENDQtXFx1REQ0QV18XFx1REI0MFtcXHVERDAwLVxcdURERUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ04nLFxuICAgICAgICBhbGlhczogJ051bWJlcicsXG4gICAgICAgIGJtcDogJzAtOVxceEIyXFx4QjNcXHhCOVxceEJDLVxceEJFXFx1MDY2MC1cXHUwNjY5XFx1MDZGMC1cXHUwNkY5XFx1MDdDMC1cXHUwN0M5XFx1MDk2Ni1cXHUwOTZGXFx1MDlFNi1cXHUwOUVGXFx1MDlGNC1cXHUwOUY5XFx1MEE2Ni1cXHUwQTZGXFx1MEFFNi1cXHUwQUVGXFx1MEI2Ni1cXHUwQjZGXFx1MEI3Mi1cXHUwQjc3XFx1MEJFNi1cXHUwQkYyXFx1MEM2Ni1cXHUwQzZGXFx1MEM3OC1cXHUwQzdFXFx1MENFNi1cXHUwQ0VGXFx1MEQ1OC1cXHUwRDVFXFx1MEQ2Ni1cXHUwRDc4XFx1MERFNi1cXHUwREVGXFx1MEU1MC1cXHUwRTU5XFx1MEVEMC1cXHUwRUQ5XFx1MEYyMC1cXHUwRjMzXFx1MTA0MC1cXHUxMDQ5XFx1MTA5MC1cXHUxMDk5XFx1MTM2OS1cXHUxMzdDXFx1MTZFRS1cXHUxNkYwXFx1MTdFMC1cXHUxN0U5XFx1MTdGMC1cXHUxN0Y5XFx1MTgxMC1cXHUxODE5XFx1MTk0Ni1cXHUxOTRGXFx1MTlEMC1cXHUxOURBXFx1MUE4MC1cXHUxQTg5XFx1MUE5MC1cXHUxQTk5XFx1MUI1MC1cXHUxQjU5XFx1MUJCMC1cXHUxQkI5XFx1MUM0MC1cXHUxQzQ5XFx1MUM1MC1cXHUxQzU5XFx1MjA3MFxcdTIwNzQtXFx1MjA3OVxcdTIwODAtXFx1MjA4OVxcdTIxNTAtXFx1MjE4MlxcdTIxODUtXFx1MjE4OVxcdTI0NjAtXFx1MjQ5QlxcdTI0RUEtXFx1MjRGRlxcdTI3NzYtXFx1Mjc5M1xcdTJDRkRcXHUzMDA3XFx1MzAyMS1cXHUzMDI5XFx1MzAzOC1cXHUzMDNBXFx1MzE5Mi1cXHUzMTk1XFx1MzIyMC1cXHUzMjI5XFx1MzI0OC1cXHUzMjRGXFx1MzI1MS1cXHUzMjVGXFx1MzI4MC1cXHUzMjg5XFx1MzJCMS1cXHUzMkJGXFx1QTYyMC1cXHVBNjI5XFx1QTZFNi1cXHVBNkVGXFx1QTgzMC1cXHVBODM1XFx1QThEMC1cXHVBOEQ5XFx1QTkwMC1cXHVBOTA5XFx1QTlEMC1cXHVBOUQ5XFx1QTlGMC1cXHVBOUY5XFx1QUE1MC1cXHVBQTU5XFx1QUJGMC1cXHVBQkY5XFx1RkYxMC1cXHVGRjE5JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDA3LVxcdUREMzNcXHVERDQwLVxcdURENzhcXHVERDhBXFx1REQ4QlxcdURFRTEtXFx1REVGQlxcdURGMjAtXFx1REYyM1xcdURGNDFcXHVERjRBXFx1REZEMS1cXHVERkQ1XXxcXHVEODAxW1xcdURDQTAtXFx1RENBOV18XFx1RDgwMltcXHVEQzU4LVxcdURDNUZcXHVEQzc5LVxcdURDN0ZcXHVEQ0E3LVxcdURDQUZcXHVEQ0ZCLVxcdURDRkZcXHVERDE2LVxcdUREMUJcXHVEREJDXFx1RERCRFxcdUREQzAtXFx1RERDRlxcdURERDItXFx1RERGRlxcdURFNDAtXFx1REU0N1xcdURFN0RcXHVERTdFXFx1REU5RC1cXHVERTlGXFx1REVFQi1cXHVERUVGXFx1REY1OC1cXHVERjVGXFx1REY3OC1cXHVERjdGXFx1REZBOS1cXHVERkFGXXxcXHVEODAzW1xcdURDRkEtXFx1RENGRlxcdURFNjAtXFx1REU3RV18XFx1RDgwNFtcXHVEQzUyLVxcdURDNkZcXHVEQ0YwLVxcdURDRjlcXHVERDM2LVxcdUREM0ZcXHVEREQwLVxcdURERDlcXHVEREUxLVxcdURERjRcXHVERUYwLVxcdURFRjldfFxcdUQ4MDVbXFx1REM1MC1cXHVEQzU5XFx1RENEMC1cXHVEQ0Q5XFx1REU1MC1cXHVERTU5XFx1REVDMC1cXHVERUM5XFx1REYzMC1cXHVERjNCXXxcXHVEODA2W1xcdURDRTAtXFx1RENGMl18XFx1RDgwN1tcXHVEQzUwLVxcdURDNkNdfFxcdUQ4MDlbXFx1REMwMC1cXHVEQzZFXXxcXHVEODFBW1xcdURFNjAtXFx1REU2OVxcdURGNTAtXFx1REY1OVxcdURGNUItXFx1REY2MV18XFx1RDgzNFtcXHVERjYwLVxcdURGNzFdfFxcdUQ4MzVbXFx1REZDRS1cXHVERkZGXXxcXHVEODNBW1xcdURDQzctXFx1RENDRlxcdURENTAtXFx1REQ1OV18XFx1RDgzQ1tcXHVERDAwLVxcdUREMENdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ05kJyxcbiAgICAgICAgYWxpYXM6ICdEZWNpbWFsX051bWJlcicsXG4gICAgICAgIGJtcDogJzAtOVxcdTA2NjAtXFx1MDY2OVxcdTA2RjAtXFx1MDZGOVxcdTA3QzAtXFx1MDdDOVxcdTA5NjYtXFx1MDk2RlxcdTA5RTYtXFx1MDlFRlxcdTBBNjYtXFx1MEE2RlxcdTBBRTYtXFx1MEFFRlxcdTBCNjYtXFx1MEI2RlxcdTBCRTYtXFx1MEJFRlxcdTBDNjYtXFx1MEM2RlxcdTBDRTYtXFx1MENFRlxcdTBENjYtXFx1MEQ2RlxcdTBERTYtXFx1MERFRlxcdTBFNTAtXFx1MEU1OVxcdTBFRDAtXFx1MEVEOVxcdTBGMjAtXFx1MEYyOVxcdTEwNDAtXFx1MTA0OVxcdTEwOTAtXFx1MTA5OVxcdTE3RTAtXFx1MTdFOVxcdTE4MTAtXFx1MTgxOVxcdTE5NDYtXFx1MTk0RlxcdTE5RDAtXFx1MTlEOVxcdTFBODAtXFx1MUE4OVxcdTFBOTAtXFx1MUE5OVxcdTFCNTAtXFx1MUI1OVxcdTFCQjAtXFx1MUJCOVxcdTFDNDAtXFx1MUM0OVxcdTFDNTAtXFx1MUM1OVxcdUE2MjAtXFx1QTYyOVxcdUE4RDAtXFx1QThEOVxcdUE5MDAtXFx1QTkwOVxcdUE5RDAtXFx1QTlEOVxcdUE5RjAtXFx1QTlGOVxcdUFBNTAtXFx1QUE1OVxcdUFCRjAtXFx1QUJGOVxcdUZGMTAtXFx1RkYxOScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDFbXFx1RENBMC1cXHVEQ0E5XXxcXHVEODA0W1xcdURDNjYtXFx1REM2RlxcdURDRjAtXFx1RENGOVxcdUREMzYtXFx1REQzRlxcdURERDAtXFx1REREOVxcdURFRjAtXFx1REVGOV18XFx1RDgwNVtcXHVEQzUwLVxcdURDNTlcXHVEQ0QwLVxcdURDRDlcXHVERTUwLVxcdURFNTlcXHVERUMwLVxcdURFQzlcXHVERjMwLVxcdURGMzldfFxcdUQ4MDZbXFx1RENFMC1cXHVEQ0U5XXxcXHVEODA3W1xcdURDNTAtXFx1REM1OV18XFx1RDgxQVtcXHVERTYwLVxcdURFNjlcXHVERjUwLVxcdURGNTldfFxcdUQ4MzVbXFx1REZDRS1cXHVERkZGXXxcXHVEODNBW1xcdURENTAtXFx1REQ1OV0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTmwnLFxuICAgICAgICBhbGlhczogJ0xldHRlcl9OdW1iZXInLFxuICAgICAgICBibXA6ICdcXHUxNkVFLVxcdTE2RjBcXHUyMTYwLVxcdTIxODJcXHUyMTg1LVxcdTIxODhcXHUzMDA3XFx1MzAyMS1cXHUzMDI5XFx1MzAzOC1cXHUzMDNBXFx1QTZFNi1cXHVBNkVGJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDQwLVxcdURENzRcXHVERjQxXFx1REY0QVxcdURGRDEtXFx1REZENV18XFx1RDgwOVtcXHVEQzAwLVxcdURDNkVdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ05vJyxcbiAgICAgICAgYWxpYXM6ICdPdGhlcl9OdW1iZXInLFxuICAgICAgICBibXA6ICdcXHhCMlxceEIzXFx4QjlcXHhCQy1cXHhCRVxcdTA5RjQtXFx1MDlGOVxcdTBCNzItXFx1MEI3N1xcdTBCRjAtXFx1MEJGMlxcdTBDNzgtXFx1MEM3RVxcdTBENTgtXFx1MEQ1RVxcdTBENzAtXFx1MEQ3OFxcdTBGMkEtXFx1MEYzM1xcdTEzNjktXFx1MTM3Q1xcdTE3RjAtXFx1MTdGOVxcdTE5REFcXHUyMDcwXFx1MjA3NC1cXHUyMDc5XFx1MjA4MC1cXHUyMDg5XFx1MjE1MC1cXHUyMTVGXFx1MjE4OVxcdTI0NjAtXFx1MjQ5QlxcdTI0RUEtXFx1MjRGRlxcdTI3NzYtXFx1Mjc5M1xcdTJDRkRcXHUzMTkyLVxcdTMxOTVcXHUzMjIwLVxcdTMyMjlcXHUzMjQ4LVxcdTMyNEZcXHUzMjUxLVxcdTMyNUZcXHUzMjgwLVxcdTMyODlcXHUzMkIxLVxcdTMyQkZcXHVBODMwLVxcdUE4MzUnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdUREMDctXFx1REQzM1xcdURENzUtXFx1REQ3OFxcdUREOEFcXHVERDhCXFx1REVFMS1cXHVERUZCXFx1REYyMC1cXHVERjIzXXxcXHVEODAyW1xcdURDNTgtXFx1REM1RlxcdURDNzktXFx1REM3RlxcdURDQTctXFx1RENBRlxcdURDRkItXFx1RENGRlxcdUREMTYtXFx1REQxQlxcdUREQkNcXHVEREJEXFx1RERDMC1cXHVERENGXFx1REREMi1cXHVEREZGXFx1REU0MC1cXHVERTQ3XFx1REU3RFxcdURFN0VcXHVERTlELVxcdURFOUZcXHVERUVCLVxcdURFRUZcXHVERjU4LVxcdURGNUZcXHVERjc4LVxcdURGN0ZcXHVERkE5LVxcdURGQUZdfFxcdUQ4MDNbXFx1RENGQS1cXHVEQ0ZGXFx1REU2MC1cXHVERTdFXXxcXHVEODA0W1xcdURDNTItXFx1REM2NVxcdURERTEtXFx1RERGNF18XFx1RDgwNVtcXHVERjNBXFx1REYzQl18XFx1RDgwNltcXHVEQ0VBLVxcdURDRjJdfFxcdUQ4MDdbXFx1REM1QS1cXHVEQzZDXXxcXHVEODFBW1xcdURGNUItXFx1REY2MV18XFx1RDgzNFtcXHVERjYwLVxcdURGNzFdfFxcdUQ4M0FbXFx1RENDNy1cXHVEQ0NGXXxcXHVEODNDW1xcdUREMDAtXFx1REQwQ10nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUCcsXG4gICAgICAgIGFsaWFzOiAnUHVuY3R1YXRpb24nLFxuICAgICAgICBibXA6ICdcXHgyMS1cXHgyM1xceDI1LVxcXFx4MkFcXHgyQy1cXHgyRlxceDNBXFx4M0JcXFxceDNGXFx4NDBcXFxceDVCLVxcXFx4NURcXHg1RlxcXFx4N0JcXHg3RFxceEExXFx4QTdcXHhBQlxceEI2XFx4QjdcXHhCQlxceEJGXFx1MDM3RVxcdTAzODdcXHUwNTVBLVxcdTA1NUZcXHUwNTg5XFx1MDU4QVxcdTA1QkVcXHUwNUMwXFx1MDVDM1xcdTA1QzZcXHUwNUYzXFx1MDVGNFxcdTA2MDlcXHUwNjBBXFx1MDYwQ1xcdTA2MERcXHUwNjFCXFx1MDYxRVxcdTA2MUZcXHUwNjZBLVxcdTA2NkRcXHUwNkQ0XFx1MDcwMC1cXHUwNzBEXFx1MDdGNy1cXHUwN0Y5XFx1MDgzMC1cXHUwODNFXFx1MDg1RVxcdTA5NjRcXHUwOTY1XFx1MDk3MFxcdTBBRjBcXHUwREY0XFx1MEU0RlxcdTBFNUFcXHUwRTVCXFx1MEYwNC1cXHUwRjEyXFx1MEYxNFxcdTBGM0EtXFx1MEYzRFxcdTBGODVcXHUwRkQwLVxcdTBGRDRcXHUwRkQ5XFx1MEZEQVxcdTEwNEEtXFx1MTA0RlxcdTEwRkJcXHUxMzYwLVxcdTEzNjhcXHUxNDAwXFx1MTY2RFxcdTE2NkVcXHUxNjlCXFx1MTY5Q1xcdTE2RUItXFx1MTZFRFxcdTE3MzVcXHUxNzM2XFx1MTdENC1cXHUxN0Q2XFx1MTdEOC1cXHUxN0RBXFx1MTgwMC1cXHUxODBBXFx1MTk0NFxcdTE5NDVcXHUxQTFFXFx1MUExRlxcdTFBQTAtXFx1MUFBNlxcdTFBQTgtXFx1MUFBRFxcdTFCNUEtXFx1MUI2MFxcdTFCRkMtXFx1MUJGRlxcdTFDM0ItXFx1MUMzRlxcdTFDN0VcXHUxQzdGXFx1MUNDMC1cXHUxQ0M3XFx1MUNEM1xcdTIwMTAtXFx1MjAyN1xcdTIwMzAtXFx1MjA0M1xcdTIwNDUtXFx1MjA1MVxcdTIwNTMtXFx1MjA1RVxcdTIwN0RcXHUyMDdFXFx1MjA4RFxcdTIwOEVcXHUyMzA4LVxcdTIzMEJcXHUyMzI5XFx1MjMyQVxcdTI3NjgtXFx1Mjc3NVxcdTI3QzVcXHUyN0M2XFx1MjdFNi1cXHUyN0VGXFx1Mjk4My1cXHUyOTk4XFx1MjlEOC1cXHUyOURCXFx1MjlGQ1xcdTI5RkRcXHUyQ0Y5LVxcdTJDRkNcXHUyQ0ZFXFx1MkNGRlxcdTJENzBcXHUyRTAwLVxcdTJFMkVcXHUyRTMwLVxcdTJFNDRcXHUzMDAxLVxcdTMwMDNcXHUzMDA4LVxcdTMwMTFcXHUzMDE0LVxcdTMwMUZcXHUzMDMwXFx1MzAzRFxcdTMwQTBcXHUzMEZCXFx1QTRGRVxcdUE0RkZcXHVBNjBELVxcdUE2MEZcXHVBNjczXFx1QTY3RVxcdUE2RjItXFx1QTZGN1xcdUE4NzQtXFx1QTg3N1xcdUE4Q0VcXHVBOENGXFx1QThGOC1cXHVBOEZBXFx1QThGQ1xcdUE5MkVcXHVBOTJGXFx1QTk1RlxcdUE5QzEtXFx1QTlDRFxcdUE5REVcXHVBOURGXFx1QUE1Qy1cXHVBQTVGXFx1QUFERVxcdUFBREZcXHVBQUYwXFx1QUFGMVxcdUFCRUJcXHVGRDNFXFx1RkQzRlxcdUZFMTAtXFx1RkUxOVxcdUZFMzAtXFx1RkU1MlxcdUZFNTQtXFx1RkU2MVxcdUZFNjNcXHVGRTY4XFx1RkU2QVxcdUZFNkJcXHVGRjAxLVxcdUZGMDNcXHVGRjA1LVxcdUZGMEFcXHVGRjBDLVxcdUZGMEZcXHVGRjFBXFx1RkYxQlxcdUZGMUZcXHVGRjIwXFx1RkYzQi1cXHVGRjNEXFx1RkYzRlxcdUZGNUJcXHVGRjVEXFx1RkY1Ri1cXHVGRjY1JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDAwLVxcdUREMDJcXHVERjlGXFx1REZEMF18XFx1RDgwMVxcdURENkZ8XFx1RDgwMltcXHVEQzU3XFx1REQxRlxcdUREM0ZcXHVERTUwLVxcdURFNThcXHVERTdGXFx1REVGMC1cXHVERUY2XFx1REYzOS1cXHVERjNGXFx1REY5OS1cXHVERjlDXXxcXHVEODA0W1xcdURDNDctXFx1REM0RFxcdURDQkJcXHVEQ0JDXFx1RENCRS1cXHVEQ0MxXFx1REQ0MC1cXHVERDQzXFx1REQ3NFxcdURENzVcXHVEREM1LVxcdUREQzlcXHVERENEXFx1REREQlxcdUREREQtXFx1RERERlxcdURFMzgtXFx1REUzRFxcdURFQTldfFxcdUQ4MDVbXFx1REM0Qi1cXHVEQzRGXFx1REM1QlxcdURDNURcXHVEQ0M2XFx1RERDMS1cXHVEREQ3XFx1REU0MS1cXHVERTQzXFx1REU2MC1cXHVERTZDXFx1REYzQy1cXHVERjNFXXxcXHVEODA3W1xcdURDNDEtXFx1REM0NVxcdURDNzBcXHVEQzcxXXxcXHVEODA5W1xcdURDNzAtXFx1REM3NF18XFx1RDgxQVtcXHVERTZFXFx1REU2RlxcdURFRjVcXHVERjM3LVxcdURGM0JcXHVERjQ0XXxcXHVEODJGXFx1REM5RnxcXHVEODM2W1xcdURFODctXFx1REU4Ql18XFx1RDgzQVtcXHVERDVFXFx1REQ1Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUGMnLFxuICAgICAgICBhbGlhczogJ0Nvbm5lY3Rvcl9QdW5jdHVhdGlvbicsXG4gICAgICAgIGJtcDogJ1xceDVGXFx1MjAzRlxcdTIwNDBcXHUyMDU0XFx1RkUzM1xcdUZFMzRcXHVGRTRELVxcdUZFNEZcXHVGRjNGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BkJyxcbiAgICAgICAgYWxpYXM6ICdEYXNoX1B1bmN0dWF0aW9uJyxcbiAgICAgICAgYm1wOiAnXFxcXHgyRFxcdTA1OEFcXHUwNUJFXFx1MTQwMFxcdTE4MDZcXHUyMDEwLVxcdTIwMTVcXHUyRTE3XFx1MkUxQVxcdTJFM0FcXHUyRTNCXFx1MkU0MFxcdTMwMUNcXHUzMDMwXFx1MzBBMFxcdUZFMzFcXHVGRTMyXFx1RkU1OFxcdUZFNjNcXHVGRjBEJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BlJyxcbiAgICAgICAgYWxpYXM6ICdDbG9zZV9QdW5jdHVhdGlvbicsXG4gICAgICAgIGJtcDogJ1xcXFx4MjlcXFxceDVEXFx4N0RcXHUwRjNCXFx1MEYzRFxcdTE2OUNcXHUyMDQ2XFx1MjA3RVxcdTIwOEVcXHUyMzA5XFx1MjMwQlxcdTIzMkFcXHUyNzY5XFx1Mjc2QlxcdTI3NkRcXHUyNzZGXFx1Mjc3MVxcdTI3NzNcXHUyNzc1XFx1MjdDNlxcdTI3RTdcXHUyN0U5XFx1MjdFQlxcdTI3RURcXHUyN0VGXFx1Mjk4NFxcdTI5ODZcXHUyOTg4XFx1Mjk4QVxcdTI5OENcXHUyOThFXFx1Mjk5MFxcdTI5OTJcXHUyOTk0XFx1Mjk5NlxcdTI5OThcXHUyOUQ5XFx1MjlEQlxcdTI5RkRcXHUyRTIzXFx1MkUyNVxcdTJFMjdcXHUyRTI5XFx1MzAwOVxcdTMwMEJcXHUzMDBEXFx1MzAwRlxcdTMwMTFcXHUzMDE1XFx1MzAxN1xcdTMwMTlcXHUzMDFCXFx1MzAxRVxcdTMwMUZcXHVGRDNFXFx1RkUxOFxcdUZFMzZcXHVGRTM4XFx1RkUzQVxcdUZFM0NcXHVGRTNFXFx1RkU0MFxcdUZFNDJcXHVGRTQ0XFx1RkU0OFxcdUZFNUFcXHVGRTVDXFx1RkU1RVxcdUZGMDlcXHVGRjNEXFx1RkY1RFxcdUZGNjBcXHVGRjYzJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BmJyxcbiAgICAgICAgYWxpYXM6ICdGaW5hbF9QdW5jdHVhdGlvbicsXG4gICAgICAgIGJtcDogJ1xceEJCXFx1MjAxOVxcdTIwMURcXHUyMDNBXFx1MkUwM1xcdTJFMDVcXHUyRTBBXFx1MkUwRFxcdTJFMURcXHUyRTIxJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BpJyxcbiAgICAgICAgYWxpYXM6ICdJbml0aWFsX1B1bmN0dWF0aW9uJyxcbiAgICAgICAgYm1wOiAnXFx4QUJcXHUyMDE4XFx1MjAxQlxcdTIwMUNcXHUyMDFGXFx1MjAzOVxcdTJFMDJcXHUyRTA0XFx1MkUwOVxcdTJFMENcXHUyRTFDXFx1MkUyMCdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdQbycsXG4gICAgICAgIGFsaWFzOiAnT3RoZXJfUHVuY3R1YXRpb24nLFxuICAgICAgICBibXA6ICdcXHgyMS1cXHgyM1xceDI1LVxceDI3XFxcXHgyQVxceDJDXFxcXHgyRVxceDJGXFx4M0FcXHgzQlxcXFx4M0ZcXHg0MFxcXFx4NUNcXHhBMVxceEE3XFx4QjZcXHhCN1xceEJGXFx1MDM3RVxcdTAzODdcXHUwNTVBLVxcdTA1NUZcXHUwNTg5XFx1MDVDMFxcdTA1QzNcXHUwNUM2XFx1MDVGM1xcdTA1RjRcXHUwNjA5XFx1MDYwQVxcdTA2MENcXHUwNjBEXFx1MDYxQlxcdTA2MUVcXHUwNjFGXFx1MDY2QS1cXHUwNjZEXFx1MDZENFxcdTA3MDAtXFx1MDcwRFxcdTA3RjctXFx1MDdGOVxcdTA4MzAtXFx1MDgzRVxcdTA4NUVcXHUwOTY0XFx1MDk2NVxcdTA5NzBcXHUwQUYwXFx1MERGNFxcdTBFNEZcXHUwRTVBXFx1MEU1QlxcdTBGMDQtXFx1MEYxMlxcdTBGMTRcXHUwRjg1XFx1MEZEMC1cXHUwRkQ0XFx1MEZEOVxcdTBGREFcXHUxMDRBLVxcdTEwNEZcXHUxMEZCXFx1MTM2MC1cXHUxMzY4XFx1MTY2RFxcdTE2NkVcXHUxNkVCLVxcdTE2RURcXHUxNzM1XFx1MTczNlxcdTE3RDQtXFx1MTdENlxcdTE3RDgtXFx1MTdEQVxcdTE4MDAtXFx1MTgwNVxcdTE4MDctXFx1MTgwQVxcdTE5NDRcXHUxOTQ1XFx1MUExRVxcdTFBMUZcXHUxQUEwLVxcdTFBQTZcXHUxQUE4LVxcdTFBQURcXHUxQjVBLVxcdTFCNjBcXHUxQkZDLVxcdTFCRkZcXHUxQzNCLVxcdTFDM0ZcXHUxQzdFXFx1MUM3RlxcdTFDQzAtXFx1MUNDN1xcdTFDRDNcXHUyMDE2XFx1MjAxN1xcdTIwMjAtXFx1MjAyN1xcdTIwMzAtXFx1MjAzOFxcdTIwM0ItXFx1MjAzRVxcdTIwNDEtXFx1MjA0M1xcdTIwNDctXFx1MjA1MVxcdTIwNTNcXHUyMDU1LVxcdTIwNUVcXHUyQ0Y5LVxcdTJDRkNcXHUyQ0ZFXFx1MkNGRlxcdTJENzBcXHUyRTAwXFx1MkUwMVxcdTJFMDYtXFx1MkUwOFxcdTJFMEJcXHUyRTBFLVxcdTJFMTZcXHUyRTE4XFx1MkUxOVxcdTJFMUJcXHUyRTFFXFx1MkUxRlxcdTJFMkEtXFx1MkUyRVxcdTJFMzAtXFx1MkUzOVxcdTJFM0MtXFx1MkUzRlxcdTJFNDFcXHUyRTQzXFx1MkU0NFxcdTMwMDEtXFx1MzAwM1xcdTMwM0RcXHUzMEZCXFx1QTRGRVxcdUE0RkZcXHVBNjBELVxcdUE2MEZcXHVBNjczXFx1QTY3RVxcdUE2RjItXFx1QTZGN1xcdUE4NzQtXFx1QTg3N1xcdUE4Q0VcXHVBOENGXFx1QThGOC1cXHVBOEZBXFx1QThGQ1xcdUE5MkVcXHVBOTJGXFx1QTk1RlxcdUE5QzEtXFx1QTlDRFxcdUE5REVcXHVBOURGXFx1QUE1Qy1cXHVBQTVGXFx1QUFERVxcdUFBREZcXHVBQUYwXFx1QUFGMVxcdUFCRUJcXHVGRTEwLVxcdUZFMTZcXHVGRTE5XFx1RkUzMFxcdUZFNDVcXHVGRTQ2XFx1RkU0OS1cXHVGRTRDXFx1RkU1MC1cXHVGRTUyXFx1RkU1NC1cXHVGRTU3XFx1RkU1Ri1cXHVGRTYxXFx1RkU2OFxcdUZFNkFcXHVGRTZCXFx1RkYwMS1cXHVGRjAzXFx1RkYwNS1cXHVGRjA3XFx1RkYwQVxcdUZGMENcXHVGRjBFXFx1RkYwRlxcdUZGMUFcXHVGRjFCXFx1RkYxRlxcdUZGMjBcXHVGRjNDXFx1RkY2MVxcdUZGNjRcXHVGRjY1JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDAwLVxcdUREMDJcXHVERjlGXFx1REZEMF18XFx1RDgwMVxcdURENkZ8XFx1RDgwMltcXHVEQzU3XFx1REQxRlxcdUREM0ZcXHVERTUwLVxcdURFNThcXHVERTdGXFx1REVGMC1cXHVERUY2XFx1REYzOS1cXHVERjNGXFx1REY5OS1cXHVERjlDXXxcXHVEODA0W1xcdURDNDctXFx1REM0RFxcdURDQkJcXHVEQ0JDXFx1RENCRS1cXHVEQ0MxXFx1REQ0MC1cXHVERDQzXFx1REQ3NFxcdURENzVcXHVEREM1LVxcdUREQzlcXHVERENEXFx1REREQlxcdUREREQtXFx1RERERlxcdURFMzgtXFx1REUzRFxcdURFQTldfFxcdUQ4MDVbXFx1REM0Qi1cXHVEQzRGXFx1REM1QlxcdURDNURcXHVEQ0M2XFx1RERDMS1cXHVEREQ3XFx1REU0MS1cXHVERTQzXFx1REU2MC1cXHVERTZDXFx1REYzQy1cXHVERjNFXXxcXHVEODA3W1xcdURDNDEtXFx1REM0NVxcdURDNzBcXHVEQzcxXXxcXHVEODA5W1xcdURDNzAtXFx1REM3NF18XFx1RDgxQVtcXHVERTZFXFx1REU2RlxcdURFRjVcXHVERjM3LVxcdURGM0JcXHVERjQ0XXxcXHVEODJGXFx1REM5RnxcXHVEODM2W1xcdURFODctXFx1REU4Ql18XFx1RDgzQVtcXHVERDVFXFx1REQ1Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUHMnLFxuICAgICAgICBhbGlhczogJ09wZW5fUHVuY3R1YXRpb24nLFxuICAgICAgICBibXA6ICdcXFxceDI4XFxcXHg1QlxcXFx4N0JcXHUwRjNBXFx1MEYzQ1xcdTE2OUJcXHUyMDFBXFx1MjAxRVxcdTIwNDVcXHUyMDdEXFx1MjA4RFxcdTIzMDhcXHUyMzBBXFx1MjMyOVxcdTI3NjhcXHUyNzZBXFx1Mjc2Q1xcdTI3NkVcXHUyNzcwXFx1Mjc3MlxcdTI3NzRcXHUyN0M1XFx1MjdFNlxcdTI3RThcXHUyN0VBXFx1MjdFQ1xcdTI3RUVcXHUyOTgzXFx1Mjk4NVxcdTI5ODdcXHUyOTg5XFx1Mjk4QlxcdTI5OERcXHUyOThGXFx1Mjk5MVxcdTI5OTNcXHUyOTk1XFx1Mjk5N1xcdTI5RDhcXHUyOURBXFx1MjlGQ1xcdTJFMjJcXHUyRTI0XFx1MkUyNlxcdTJFMjhcXHUyRTQyXFx1MzAwOFxcdTMwMEFcXHUzMDBDXFx1MzAwRVxcdTMwMTBcXHUzMDE0XFx1MzAxNlxcdTMwMThcXHUzMDFBXFx1MzAxRFxcdUZEM0ZcXHVGRTE3XFx1RkUzNVxcdUZFMzdcXHVGRTM5XFx1RkUzQlxcdUZFM0RcXHVGRTNGXFx1RkU0MVxcdUZFNDNcXHVGRTQ3XFx1RkU1OVxcdUZFNUJcXHVGRTVEXFx1RkYwOFxcdUZGM0JcXHVGRjVCXFx1RkY1RlxcdUZGNjInXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUycsXG4gICAgICAgIGFsaWFzOiAnU3ltYm9sJyxcbiAgICAgICAgYm1wOiAnXFxcXHgyNFxcXFx4MkJcXHgzQy1cXHgzRVxcXFx4NUVcXHg2MFxcXFx4N0NcXHg3RVxceEEyLVxceEE2XFx4QThcXHhBOVxceEFDXFx4QUUtXFx4QjFcXHhCNFxceEI4XFx4RDdcXHhGN1xcdTAyQzItXFx1MDJDNVxcdTAyRDItXFx1MDJERlxcdTAyRTUtXFx1MDJFQlxcdTAyRURcXHUwMkVGLVxcdTAyRkZcXHUwMzc1XFx1MDM4NFxcdTAzODVcXHUwM0Y2XFx1MDQ4MlxcdTA1OEQtXFx1MDU4RlxcdTA2MDYtXFx1MDYwOFxcdTA2MEJcXHUwNjBFXFx1MDYwRlxcdTA2REVcXHUwNkU5XFx1MDZGRFxcdTA2RkVcXHUwN0Y2XFx1MDlGMlxcdTA5RjNcXHUwOUZBXFx1MDlGQlxcdTBBRjFcXHUwQjcwXFx1MEJGMy1cXHUwQkZBXFx1MEM3RlxcdTBENEZcXHUwRDc5XFx1MEUzRlxcdTBGMDEtXFx1MEYwM1xcdTBGMTNcXHUwRjE1LVxcdTBGMTdcXHUwRjFBLVxcdTBGMUZcXHUwRjM0XFx1MEYzNlxcdTBGMzhcXHUwRkJFLVxcdTBGQzVcXHUwRkM3LVxcdTBGQ0NcXHUwRkNFXFx1MEZDRlxcdTBGRDUtXFx1MEZEOFxcdTEwOUVcXHUxMDlGXFx1MTM5MC1cXHUxMzk5XFx1MTdEQlxcdTE5NDBcXHUxOURFLVxcdTE5RkZcXHUxQjYxLVxcdTFCNkFcXHUxQjc0LVxcdTFCN0NcXHUxRkJEXFx1MUZCRi1cXHUxRkMxXFx1MUZDRC1cXHUxRkNGXFx1MUZERC1cXHUxRkRGXFx1MUZFRC1cXHUxRkVGXFx1MUZGRFxcdTFGRkVcXHUyMDQ0XFx1MjA1MlxcdTIwN0EtXFx1MjA3Q1xcdTIwOEEtXFx1MjA4Q1xcdTIwQTAtXFx1MjBCRVxcdTIxMDBcXHUyMTAxXFx1MjEwMy1cXHUyMTA2XFx1MjEwOFxcdTIxMDlcXHUyMTE0XFx1MjExNi1cXHUyMTE4XFx1MjExRS1cXHUyMTIzXFx1MjEyNVxcdTIxMjdcXHUyMTI5XFx1MjEyRVxcdTIxM0FcXHUyMTNCXFx1MjE0MC1cXHUyMTQ0XFx1MjE0QS1cXHUyMTREXFx1MjE0RlxcdTIxOEFcXHUyMThCXFx1MjE5MC1cXHUyMzA3XFx1MjMwQy1cXHUyMzI4XFx1MjMyQi1cXHUyM0ZFXFx1MjQwMC1cXHUyNDI2XFx1MjQ0MC1cXHUyNDRBXFx1MjQ5Qy1cXHUyNEU5XFx1MjUwMC1cXHUyNzY3XFx1Mjc5NC1cXHUyN0M0XFx1MjdDNy1cXHUyN0U1XFx1MjdGMC1cXHUyOTgyXFx1Mjk5OS1cXHUyOUQ3XFx1MjlEQy1cXHUyOUZCXFx1MjlGRS1cXHUyQjczXFx1MkI3Ni1cXHUyQjk1XFx1MkI5OC1cXHUyQkI5XFx1MkJCRC1cXHUyQkM4XFx1MkJDQS1cXHUyQkQxXFx1MkJFQy1cXHUyQkVGXFx1MkNFNS1cXHUyQ0VBXFx1MkU4MC1cXHUyRTk5XFx1MkU5Qi1cXHUyRUYzXFx1MkYwMC1cXHUyRkQ1XFx1MkZGMC1cXHUyRkZCXFx1MzAwNFxcdTMwMTJcXHUzMDEzXFx1MzAyMFxcdTMwMzZcXHUzMDM3XFx1MzAzRVxcdTMwM0ZcXHUzMDlCXFx1MzA5Q1xcdTMxOTBcXHUzMTkxXFx1MzE5Ni1cXHUzMTlGXFx1MzFDMC1cXHUzMUUzXFx1MzIwMC1cXHUzMjFFXFx1MzIyQS1cXHUzMjQ3XFx1MzI1MFxcdTMyNjAtXFx1MzI3RlxcdTMyOEEtXFx1MzJCMFxcdTMyQzAtXFx1MzJGRVxcdTMzMDAtXFx1MzNGRlxcdTREQzAtXFx1NERGRlxcdUE0OTAtXFx1QTRDNlxcdUE3MDAtXFx1QTcxNlxcdUE3MjBcXHVBNzIxXFx1QTc4OVxcdUE3OEFcXHVBODI4LVxcdUE4MkJcXHVBODM2LVxcdUE4MzlcXHVBQTc3LVxcdUFBNzlcXHVBQjVCXFx1RkIyOVxcdUZCQjItXFx1RkJDMVxcdUZERkNcXHVGREZEXFx1RkU2MlxcdUZFNjQtXFx1RkU2NlxcdUZFNjlcXHVGRjA0XFx1RkYwQlxcdUZGMUMtXFx1RkYxRVxcdUZGM0VcXHVGRjQwXFx1RkY1Q1xcdUZGNUVcXHVGRkUwLVxcdUZGRTZcXHVGRkU4LVxcdUZGRUVcXHVGRkZDXFx1RkZGRCcsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REQzNy1cXHVERDNGXFx1REQ3OS1cXHVERDg5XFx1REQ4Qy1cXHVERDhFXFx1REQ5MC1cXHVERDlCXFx1RERBMFxcdURERDAtXFx1RERGQ118XFx1RDgwMltcXHVEQzc3XFx1REM3OFxcdURFQzhdfFxcdUQ4MDVcXHVERjNGfFxcdUQ4MUFbXFx1REYzQy1cXHVERjNGXFx1REY0NV18XFx1RDgyRlxcdURDOUN8XFx1RDgzNFtcXHVEQzAwLVxcdURDRjVcXHVERDAwLVxcdUREMjZcXHVERDI5LVxcdURENjRcXHVERDZBLVxcdURENkNcXHVERDgzXFx1REQ4NFxcdUREOEMtXFx1RERBOVxcdUREQUUtXFx1RERFOFxcdURFMDAtXFx1REU0MVxcdURFNDVcXHVERjAwLVxcdURGNTZdfFxcdUQ4MzVbXFx1REVDMVxcdURFREJcXHVERUZCXFx1REYxNVxcdURGMzVcXHVERjRGXFx1REY2RlxcdURGODlcXHVERkE5XFx1REZDM118XFx1RDgzNltcXHVEQzAwLVxcdURERkZcXHVERTM3LVxcdURFM0FcXHVERTZELVxcdURFNzRcXHVERTc2LVxcdURFODNcXHVERTg1XFx1REU4Nl18XFx1RDgzQltcXHVERUYwXFx1REVGMV18XFx1RDgzQ1tcXHVEQzAwLVxcdURDMkJcXHVEQzMwLVxcdURDOTNcXHVEQ0EwLVxcdURDQUVcXHVEQ0IxLVxcdURDQkZcXHVEQ0MxLVxcdURDQ0ZcXHVEQ0QxLVxcdURDRjVcXHVERDEwLVxcdUREMkVcXHVERDMwLVxcdURENkJcXHVERDcwLVxcdUREQUNcXHVEREU2LVxcdURFMDJcXHVERTEwLVxcdURFM0JcXHVERTQwLVxcdURFNDhcXHVERTUwXFx1REU1MVxcdURGMDAtXFx1REZGRl18XFx1RDgzRFtcXHVEQzAwLVxcdURFRDJcXHVERUUwLVxcdURFRUNcXHVERUYwLVxcdURFRjZcXHVERjAwLVxcdURGNzNcXHVERjgwLVxcdURGRDRdfFxcdUQ4M0VbXFx1REMwMC1cXHVEQzBCXFx1REMxMC1cXHVEQzQ3XFx1REM1MC1cXHVEQzU5XFx1REM2MC1cXHVEQzg3XFx1REM5MC1cXHVEQ0FEXFx1REQxMC1cXHVERDFFXFx1REQyMC1cXHVERDI3XFx1REQzMFxcdUREMzMtXFx1REQzRVxcdURENDAtXFx1REQ0QlxcdURENTAtXFx1REQ1RVxcdUREODAtXFx1REQ5MVxcdUREQzBdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1NjJyxcbiAgICAgICAgYWxpYXM6ICdDdXJyZW5jeV9TeW1ib2wnLFxuICAgICAgICBibXA6ICdcXFxceDI0XFx4QTItXFx4QTVcXHUwNThGXFx1MDYwQlxcdTA5RjJcXHUwOUYzXFx1MDlGQlxcdTBBRjFcXHUwQkY5XFx1MEUzRlxcdTE3REJcXHUyMEEwLVxcdTIwQkVcXHVBODM4XFx1RkRGQ1xcdUZFNjlcXHVGRjA0XFx1RkZFMFxcdUZGRTFcXHVGRkU1XFx1RkZFNidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTaycsXG4gICAgICAgIGFsaWFzOiAnTW9kaWZpZXJfU3ltYm9sJyxcbiAgICAgICAgYm1wOiAnXFxcXHg1RVxceDYwXFx4QThcXHhBRlxceEI0XFx4QjhcXHUwMkMyLVxcdTAyQzVcXHUwMkQyLVxcdTAyREZcXHUwMkU1LVxcdTAyRUJcXHUwMkVEXFx1MDJFRi1cXHUwMkZGXFx1MDM3NVxcdTAzODRcXHUwMzg1XFx1MUZCRFxcdTFGQkYtXFx1MUZDMVxcdTFGQ0QtXFx1MUZDRlxcdTFGREQtXFx1MUZERlxcdTFGRUQtXFx1MUZFRlxcdTFGRkRcXHUxRkZFXFx1MzA5QlxcdTMwOUNcXHVBNzAwLVxcdUE3MTZcXHVBNzIwXFx1QTcyMVxcdUE3ODlcXHVBNzhBXFx1QUI1QlxcdUZCQjItXFx1RkJDMVxcdUZGM0VcXHVGRjQwXFx1RkZFMycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4M0NbXFx1REZGQi1cXHVERkZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTbScsXG4gICAgICAgIGFsaWFzOiAnTWF0aF9TeW1ib2wnLFxuICAgICAgICBibXA6ICdcXFxceDJCXFx4M0MtXFx4M0VcXFxceDdDXFx4N0VcXHhBQ1xceEIxXFx4RDdcXHhGN1xcdTAzRjZcXHUwNjA2LVxcdTA2MDhcXHUyMDQ0XFx1MjA1MlxcdTIwN0EtXFx1MjA3Q1xcdTIwOEEtXFx1MjA4Q1xcdTIxMThcXHUyMTQwLVxcdTIxNDRcXHUyMTRCXFx1MjE5MC1cXHUyMTk0XFx1MjE5QVxcdTIxOUJcXHUyMUEwXFx1MjFBM1xcdTIxQTZcXHUyMUFFXFx1MjFDRVxcdTIxQ0ZcXHUyMUQyXFx1MjFENFxcdTIxRjQtXFx1MjJGRlxcdTIzMjBcXHUyMzIxXFx1MjM3Q1xcdTIzOUItXFx1MjNCM1xcdTIzREMtXFx1MjNFMVxcdTI1QjdcXHUyNUMxXFx1MjVGOC1cXHUyNUZGXFx1MjY2RlxcdTI3QzAtXFx1MjdDNFxcdTI3QzctXFx1MjdFNVxcdTI3RjAtXFx1MjdGRlxcdTI5MDAtXFx1Mjk4MlxcdTI5OTktXFx1MjlEN1xcdTI5REMtXFx1MjlGQlxcdTI5RkUtXFx1MkFGRlxcdTJCMzAtXFx1MkI0NFxcdTJCNDctXFx1MkI0Q1xcdUZCMjlcXHVGRTYyXFx1RkU2NC1cXHVGRTY2XFx1RkYwQlxcdUZGMUMtXFx1RkYxRVxcdUZGNUNcXHVGRjVFXFx1RkZFMlxcdUZGRTktXFx1RkZFQycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MzVbXFx1REVDMVxcdURFREJcXHVERUZCXFx1REYxNVxcdURGMzVcXHVERjRGXFx1REY2RlxcdURGODlcXHVERkE5XFx1REZDM118XFx1RDgzQltcXHVERUYwXFx1REVGMV0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnU28nLFxuICAgICAgICBhbGlhczogJ090aGVyX1N5bWJvbCcsXG4gICAgICAgIGJtcDogJ1xceEE2XFx4QTlcXHhBRVxceEIwXFx1MDQ4MlxcdTA1OERcXHUwNThFXFx1MDYwRVxcdTA2MEZcXHUwNkRFXFx1MDZFOVxcdTA2RkRcXHUwNkZFXFx1MDdGNlxcdTA5RkFcXHUwQjcwXFx1MEJGMy1cXHUwQkY4XFx1MEJGQVxcdTBDN0ZcXHUwRDRGXFx1MEQ3OVxcdTBGMDEtXFx1MEYwM1xcdTBGMTNcXHUwRjE1LVxcdTBGMTdcXHUwRjFBLVxcdTBGMUZcXHUwRjM0XFx1MEYzNlxcdTBGMzhcXHUwRkJFLVxcdTBGQzVcXHUwRkM3LVxcdTBGQ0NcXHUwRkNFXFx1MEZDRlxcdTBGRDUtXFx1MEZEOFxcdTEwOUVcXHUxMDlGXFx1MTM5MC1cXHUxMzk5XFx1MTk0MFxcdTE5REUtXFx1MTlGRlxcdTFCNjEtXFx1MUI2QVxcdTFCNzQtXFx1MUI3Q1xcdTIxMDBcXHUyMTAxXFx1MjEwMy1cXHUyMTA2XFx1MjEwOFxcdTIxMDlcXHUyMTE0XFx1MjExNlxcdTIxMTdcXHUyMTFFLVxcdTIxMjNcXHUyMTI1XFx1MjEyN1xcdTIxMjlcXHUyMTJFXFx1MjEzQVxcdTIxM0JcXHUyMTRBXFx1MjE0Q1xcdTIxNERcXHUyMTRGXFx1MjE4QVxcdTIxOEJcXHUyMTk1LVxcdTIxOTlcXHUyMTlDLVxcdTIxOUZcXHUyMUExXFx1MjFBMlxcdTIxQTRcXHUyMUE1XFx1MjFBNy1cXHUyMUFEXFx1MjFBRi1cXHUyMUNEXFx1MjFEMFxcdTIxRDFcXHUyMUQzXFx1MjFENS1cXHUyMUYzXFx1MjMwMC1cXHUyMzA3XFx1MjMwQy1cXHUyMzFGXFx1MjMyMi1cXHUyMzI4XFx1MjMyQi1cXHUyMzdCXFx1MjM3RC1cXHUyMzlBXFx1MjNCNC1cXHUyM0RCXFx1MjNFMi1cXHUyM0ZFXFx1MjQwMC1cXHUyNDI2XFx1MjQ0MC1cXHUyNDRBXFx1MjQ5Qy1cXHUyNEU5XFx1MjUwMC1cXHUyNUI2XFx1MjVCOC1cXHUyNUMwXFx1MjVDMi1cXHUyNUY3XFx1MjYwMC1cXHUyNjZFXFx1MjY3MC1cXHUyNzY3XFx1Mjc5NC1cXHUyN0JGXFx1MjgwMC1cXHUyOEZGXFx1MkIwMC1cXHUyQjJGXFx1MkI0NVxcdTJCNDZcXHUyQjRELVxcdTJCNzNcXHUyQjc2LVxcdTJCOTVcXHUyQjk4LVxcdTJCQjlcXHUyQkJELVxcdTJCQzhcXHUyQkNBLVxcdTJCRDFcXHUyQkVDLVxcdTJCRUZcXHUyQ0U1LVxcdTJDRUFcXHUyRTgwLVxcdTJFOTlcXHUyRTlCLVxcdTJFRjNcXHUyRjAwLVxcdTJGRDVcXHUyRkYwLVxcdTJGRkJcXHUzMDA0XFx1MzAxMlxcdTMwMTNcXHUzMDIwXFx1MzAzNlxcdTMwMzdcXHUzMDNFXFx1MzAzRlxcdTMxOTBcXHUzMTkxXFx1MzE5Ni1cXHUzMTlGXFx1MzFDMC1cXHUzMUUzXFx1MzIwMC1cXHUzMjFFXFx1MzIyQS1cXHUzMjQ3XFx1MzI1MFxcdTMyNjAtXFx1MzI3RlxcdTMyOEEtXFx1MzJCMFxcdTMyQzAtXFx1MzJGRVxcdTMzMDAtXFx1MzNGRlxcdTREQzAtXFx1NERGRlxcdUE0OTAtXFx1QTRDNlxcdUE4MjgtXFx1QTgyQlxcdUE4MzZcXHVBODM3XFx1QTgzOVxcdUFBNzctXFx1QUE3OVxcdUZERkRcXHVGRkU0XFx1RkZFOFxcdUZGRURcXHVGRkVFXFx1RkZGQ1xcdUZGRkQnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdUREMzctXFx1REQzRlxcdURENzktXFx1REQ4OVxcdUREOEMtXFx1REQ4RVxcdUREOTAtXFx1REQ5QlxcdUREQTBcXHVEREQwLVxcdURERkNdfFxcdUQ4MDJbXFx1REM3N1xcdURDNzhcXHVERUM4XXxcXHVEODA1XFx1REYzRnxcXHVEODFBW1xcdURGM0MtXFx1REYzRlxcdURGNDVdfFxcdUQ4MkZcXHVEQzlDfFxcdUQ4MzRbXFx1REMwMC1cXHVEQ0Y1XFx1REQwMC1cXHVERDI2XFx1REQyOS1cXHVERDY0XFx1REQ2QS1cXHVERDZDXFx1REQ4M1xcdUREODRcXHVERDhDLVxcdUREQTlcXHVEREFFLVxcdURERThcXHVERTAwLVxcdURFNDFcXHVERTQ1XFx1REYwMC1cXHVERjU2XXxcXHVEODM2W1xcdURDMDAtXFx1RERGRlxcdURFMzctXFx1REUzQVxcdURFNkQtXFx1REU3NFxcdURFNzYtXFx1REU4M1xcdURFODVcXHVERTg2XXxcXHVEODNDW1xcdURDMDAtXFx1REMyQlxcdURDMzAtXFx1REM5M1xcdURDQTAtXFx1RENBRVxcdURDQjEtXFx1RENCRlxcdURDQzEtXFx1RENDRlxcdURDRDEtXFx1RENGNVxcdUREMTAtXFx1REQyRVxcdUREMzAtXFx1REQ2QlxcdURENzAtXFx1RERBQ1xcdURERTYtXFx1REUwMlxcdURFMTAtXFx1REUzQlxcdURFNDAtXFx1REU0OFxcdURFNTBcXHVERTUxXFx1REYwMC1cXHVERkZBXXxcXHVEODNEW1xcdURDMDAtXFx1REVEMlxcdURFRTAtXFx1REVFQ1xcdURFRjAtXFx1REVGNlxcdURGMDAtXFx1REY3M1xcdURGODAtXFx1REZENF18XFx1RDgzRVtcXHVEQzAwLVxcdURDMEJcXHVEQzEwLVxcdURDNDdcXHVEQzUwLVxcdURDNTlcXHVEQzYwLVxcdURDODdcXHVEQzkwLVxcdURDQURcXHVERDEwLVxcdUREMUVcXHVERDIwLVxcdUREMjdcXHVERDMwXFx1REQzMy1cXHVERDNFXFx1REQ0MC1cXHVERDRCXFx1REQ1MC1cXHVERDVFXFx1REQ4MC1cXHVERDkxXFx1RERDMF0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnWicsXG4gICAgICAgIGFsaWFzOiAnU2VwYXJhdG9yJyxcbiAgICAgICAgYm1wOiAnXFx4MjBcXHhBMFxcdTE2ODBcXHUyMDAwLVxcdTIwMEFcXHUyMDI4XFx1MjAyOVxcdTIwMkZcXHUyMDVGXFx1MzAwMCdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdabCcsXG4gICAgICAgIGFsaWFzOiAnTGluZV9TZXBhcmF0b3InLFxuICAgICAgICBibXA6ICdcXHUyMDI4J1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1pwJyxcbiAgICAgICAgYWxpYXM6ICdQYXJhZ3JhcGhfU2VwYXJhdG9yJyxcbiAgICAgICAgYm1wOiAnXFx1MjAyOSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdacycsXG4gICAgICAgIGFsaWFzOiAnU3BhY2VfU2VwYXJhdG9yJyxcbiAgICAgICAgYm1wOiAnXFx4MjBcXHhBMFxcdTE2ODBcXHUyMDAwLVxcdTIwMEFcXHUyMDJGXFx1MjA1RlxcdTMwMDAnXG4gICAgfV0pO1xufTtcblxubW9kdWxlLmV4cG9ydHMgPSBleHBvcnRzWydkZWZhdWx0J107IiwiJ3VzZSBzdHJpY3QnO1xuXG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHtcbiAgICB2YWx1ZTogdHJ1ZVxufSk7XG5cbi8qIVxuICogWFJlZ0V4cCBVbmljb2RlIFByb3BlcnRpZXMgNC4wLjBcbiAqIDx4cmVnZXhwLmNvbT5cbiAqIFN0ZXZlbiBMZXZpdGhhbiAoYykgMjAxMi0yMDE3IE1JVCBMaWNlbnNlXG4gKiBVbmljb2RlIGRhdGEgYnkgTWF0aGlhcyBCeW5lbnMgPG1hdGhpYXNieW5lbnMuYmU+XG4gKi9cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKFhSZWdFeHApIHtcblxuICAgIC8qKlxuICAgICAqIEFkZHMgcHJvcGVydGllcyB0byBtZWV0IHRoZSBVVFMgIzE4IExldmVsIDEgUkwxLjIgcmVxdWlyZW1lbnRzIGZvciBVbmljb2RlIHJlZ2V4IHN1cHBvcnQuIFNlZVxuICAgICAqIDxodHRwOi8vdW5pY29kZS5vcmcvcmVwb3J0cy90cjE4LyNSTDEuMj4uIEZvbGxvd2luZyBhcmUgZGVmaW5pdGlvbnMgb2YgdGhlc2UgcHJvcGVydGllcyBmcm9tXG4gICAgICogVUFYICM0NCA8aHR0cDovL3VuaWNvZGUub3JnL3JlcG9ydHMvdHI0NC8+OlxuICAgICAqXG4gICAgICogLSBBbHBoYWJldGljXG4gICAgICogICBDaGFyYWN0ZXJzIHdpdGggdGhlIEFscGhhYmV0aWMgcHJvcGVydHkuIEdlbmVyYXRlZCBmcm9tOiBMb3dlcmNhc2UgKyBVcHBlcmNhc2UgKyBMdCArIExtICtcbiAgICAgKiAgIExvICsgTmwgKyBPdGhlcl9BbHBoYWJldGljLlxuICAgICAqXG4gICAgICogLSBEZWZhdWx0X0lnbm9yYWJsZV9Db2RlX1BvaW50XG4gICAgICogICBGb3IgcHJvZ3JhbW1hdGljIGRldGVybWluYXRpb24gb2YgZGVmYXVsdCBpZ25vcmFibGUgY29kZSBwb2ludHMuIE5ldyBjaGFyYWN0ZXJzIHRoYXQgc2hvdWxkXG4gICAgICogICBiZSBpZ25vcmVkIGluIHJlbmRlcmluZyAodW5sZXNzIGV4cGxpY2l0bHkgc3VwcG9ydGVkKSB3aWxsIGJlIGFzc2lnbmVkIGluIHRoZXNlIHJhbmdlcyxcbiAgICAgKiAgIHBlcm1pdHRpbmcgcHJvZ3JhbXMgdG8gY29ycmVjdGx5IGhhbmRsZSB0aGUgZGVmYXVsdCByZW5kZXJpbmcgb2Ygc3VjaCBjaGFyYWN0ZXJzIHdoZW4gbm90XG4gICAgICogICBvdGhlcndpc2Ugc3VwcG9ydGVkLlxuICAgICAqXG4gICAgICogLSBMb3dlcmNhc2VcbiAgICAgKiAgIENoYXJhY3RlcnMgd2l0aCB0aGUgTG93ZXJjYXNlIHByb3BlcnR5LiBHZW5lcmF0ZWQgZnJvbTogTGwgKyBPdGhlcl9Mb3dlcmNhc2UuXG4gICAgICpcbiAgICAgKiAtIE5vbmNoYXJhY3Rlcl9Db2RlX1BvaW50XG4gICAgICogICBDb2RlIHBvaW50cyBwZXJtYW5lbnRseSByZXNlcnZlZCBmb3IgaW50ZXJuYWwgdXNlLlxuICAgICAqXG4gICAgICogLSBVcHBlcmNhc2VcbiAgICAgKiAgIENoYXJhY3RlcnMgd2l0aCB0aGUgVXBwZXJjYXNlIHByb3BlcnR5LiBHZW5lcmF0ZWQgZnJvbTogTHUgKyBPdGhlcl9VcHBlcmNhc2UuXG4gICAgICpcbiAgICAgKiAtIFdoaXRlX1NwYWNlXG4gICAgICogICBTcGFjZXMsIHNlcGFyYXRvciBjaGFyYWN0ZXJzIGFuZCBvdGhlciBjb250cm9sIGNoYXJhY3RlcnMgd2hpY2ggc2hvdWxkIGJlIHRyZWF0ZWQgYnlcbiAgICAgKiAgIHByb2dyYW1taW5nIGxhbmd1YWdlcyBhcyBcIndoaXRlIHNwYWNlXCIgZm9yIHRoZSBwdXJwb3NlIG9mIHBhcnNpbmcgZWxlbWVudHMuXG4gICAgICpcbiAgICAgKiBUaGUgcHJvcGVydGllcyBBU0NJSSwgQW55LCBhbmQgQXNzaWduZWQgYXJlIGFsc28gaW5jbHVkZWQgYnV0IGFyZSBub3QgZGVmaW5lZCBpbiBVQVggIzQ0LiBVVFNcbiAgICAgKiAjMTggUkwxLjIgYWRkaXRpb25hbGx5IHJlcXVpcmVzIHN1cHBvcnQgZm9yIFVuaWNvZGUgc2NyaXB0cyBhbmQgZ2VuZXJhbCBjYXRlZ29yaWVzLiBUaGVzZSBhcmVcbiAgICAgKiBpbmNsdWRlZCBpbiBYUmVnRXhwJ3MgVW5pY29kZSBDYXRlZ29yaWVzIGFuZCBVbmljb2RlIFNjcmlwdHMgYWRkb25zLlxuICAgICAqXG4gICAgICogVG9rZW4gbmFtZXMgYXJlIGNhc2UgaW5zZW5zaXRpdmUsIGFuZCBhbnkgc3BhY2VzLCBoeXBoZW5zLCBhbmQgdW5kZXJzY29yZXMgYXJlIGlnbm9yZWQuXG4gICAgICpcbiAgICAgKiBVc2VzIFVuaWNvZGUgOS4wLjAuXG4gICAgICpcbiAgICAgKiBAcmVxdWlyZXMgWFJlZ0V4cCwgVW5pY29kZSBCYXNlXG4gICAgICovXG5cbiAgICBpZiAoIVhSZWdFeHAuYWRkVW5pY29kZURhdGEpIHtcbiAgICAgICAgdGhyb3cgbmV3IFJlZmVyZW5jZUVycm9yKCdVbmljb2RlIEJhc2UgbXVzdCBiZSBsb2FkZWQgYmVmb3JlIFVuaWNvZGUgUHJvcGVydGllcycpO1xuICAgIH1cblxuICAgIHZhciB1bmljb2RlRGF0YSA9IFt7XG4gICAgICAgIG5hbWU6ICdBU0NJSScsXG4gICAgICAgIGJtcDogJ1xcMC1cXHg3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBbHBoYWJldGljJyxcbiAgICAgICAgYm1wOiAnQS1aYS16XFx4QUFcXHhCNVxceEJBXFx4QzAtXFx4RDZcXHhEOC1cXHhGNlxceEY4LVxcdTAyQzFcXHUwMkM2LVxcdTAyRDFcXHUwMkUwLVxcdTAyRTRcXHUwMkVDXFx1MDJFRVxcdTAzNDVcXHUwMzcwLVxcdTAzNzRcXHUwMzc2XFx1MDM3N1xcdTAzN0EtXFx1MDM3RFxcdTAzN0ZcXHUwMzg2XFx1MDM4OC1cXHUwMzhBXFx1MDM4Q1xcdTAzOEUtXFx1MDNBMVxcdTAzQTMtXFx1MDNGNVxcdTAzRjctXFx1MDQ4MVxcdTA0OEEtXFx1MDUyRlxcdTA1MzEtXFx1MDU1NlxcdTA1NTlcXHUwNTYxLVxcdTA1ODdcXHUwNUIwLVxcdTA1QkRcXHUwNUJGXFx1MDVDMVxcdTA1QzJcXHUwNUM0XFx1MDVDNVxcdTA1QzdcXHUwNUQwLVxcdTA1RUFcXHUwNUYwLVxcdTA1RjJcXHUwNjEwLVxcdTA2MUFcXHUwNjIwLVxcdTA2NTdcXHUwNjU5LVxcdTA2NUZcXHUwNjZFLVxcdTA2RDNcXHUwNkQ1LVxcdTA2RENcXHUwNkUxLVxcdTA2RThcXHUwNkVELVxcdTA2RUZcXHUwNkZBLVxcdTA2RkNcXHUwNkZGXFx1MDcxMC1cXHUwNzNGXFx1MDc0RC1cXHUwN0IxXFx1MDdDQS1cXHUwN0VBXFx1MDdGNFxcdTA3RjVcXHUwN0ZBXFx1MDgwMC1cXHUwODE3XFx1MDgxQS1cXHUwODJDXFx1MDg0MC1cXHUwODU4XFx1MDhBMC1cXHUwOEI0XFx1MDhCNi1cXHUwOEJEXFx1MDhENC1cXHUwOERGXFx1MDhFMy1cXHUwOEU5XFx1MDhGMC1cXHUwOTNCXFx1MDkzRC1cXHUwOTRDXFx1MDk0RS1cXHUwOTUwXFx1MDk1NS1cXHUwOTYzXFx1MDk3MS1cXHUwOTgzXFx1MDk4NS1cXHUwOThDXFx1MDk4RlxcdTA5OTBcXHUwOTkzLVxcdTA5QThcXHUwOUFBLVxcdTA5QjBcXHUwOUIyXFx1MDlCNi1cXHUwOUI5XFx1MDlCRC1cXHUwOUM0XFx1MDlDN1xcdTA5QzhcXHUwOUNCXFx1MDlDQ1xcdTA5Q0VcXHUwOUQ3XFx1MDlEQ1xcdTA5RERcXHUwOURGLVxcdTA5RTNcXHUwOUYwXFx1MDlGMVxcdTBBMDEtXFx1MEEwM1xcdTBBMDUtXFx1MEEwQVxcdTBBMEZcXHUwQTEwXFx1MEExMy1cXHUwQTI4XFx1MEEyQS1cXHUwQTMwXFx1MEEzMlxcdTBBMzNcXHUwQTM1XFx1MEEzNlxcdTBBMzhcXHUwQTM5XFx1MEEzRS1cXHUwQTQyXFx1MEE0N1xcdTBBNDhcXHUwQTRCXFx1MEE0Q1xcdTBBNTFcXHUwQTU5LVxcdTBBNUNcXHUwQTVFXFx1MEE3MC1cXHUwQTc1XFx1MEE4MS1cXHUwQTgzXFx1MEE4NS1cXHUwQThEXFx1MEE4Ri1cXHUwQTkxXFx1MEE5My1cXHUwQUE4XFx1MEFBQS1cXHUwQUIwXFx1MEFCMlxcdTBBQjNcXHUwQUI1LVxcdTBBQjlcXHUwQUJELVxcdTBBQzVcXHUwQUM3LVxcdTBBQzlcXHUwQUNCXFx1MEFDQ1xcdTBBRDBcXHUwQUUwLVxcdTBBRTNcXHUwQUY5XFx1MEIwMS1cXHUwQjAzXFx1MEIwNS1cXHUwQjBDXFx1MEIwRlxcdTBCMTBcXHUwQjEzLVxcdTBCMjhcXHUwQjJBLVxcdTBCMzBcXHUwQjMyXFx1MEIzM1xcdTBCMzUtXFx1MEIzOVxcdTBCM0QtXFx1MEI0NFxcdTBCNDdcXHUwQjQ4XFx1MEI0QlxcdTBCNENcXHUwQjU2XFx1MEI1N1xcdTBCNUNcXHUwQjVEXFx1MEI1Ri1cXHUwQjYzXFx1MEI3MVxcdTBCODJcXHUwQjgzXFx1MEI4NS1cXHUwQjhBXFx1MEI4RS1cXHUwQjkwXFx1MEI5Mi1cXHUwQjk1XFx1MEI5OVxcdTBCOUFcXHUwQjlDXFx1MEI5RVxcdTBCOUZcXHUwQkEzXFx1MEJBNFxcdTBCQTgtXFx1MEJBQVxcdTBCQUUtXFx1MEJCOVxcdTBCQkUtXFx1MEJDMlxcdTBCQzYtXFx1MEJDOFxcdTBCQ0EtXFx1MEJDQ1xcdTBCRDBcXHUwQkQ3XFx1MEMwMC1cXHUwQzAzXFx1MEMwNS1cXHUwQzBDXFx1MEMwRS1cXHUwQzEwXFx1MEMxMi1cXHUwQzI4XFx1MEMyQS1cXHUwQzM5XFx1MEMzRC1cXHUwQzQ0XFx1MEM0Ni1cXHUwQzQ4XFx1MEM0QS1cXHUwQzRDXFx1MEM1NVxcdTBDNTZcXHUwQzU4LVxcdTBDNUFcXHUwQzYwLVxcdTBDNjNcXHUwQzgwLVxcdTBDODNcXHUwQzg1LVxcdTBDOENcXHUwQzhFLVxcdTBDOTBcXHUwQzkyLVxcdTBDQThcXHUwQ0FBLVxcdTBDQjNcXHUwQ0I1LVxcdTBDQjlcXHUwQ0JELVxcdTBDQzRcXHUwQ0M2LVxcdTBDQzhcXHUwQ0NBLVxcdTBDQ0NcXHUwQ0Q1XFx1MENENlxcdTBDREVcXHUwQ0UwLVxcdTBDRTNcXHUwQ0YxXFx1MENGMlxcdTBEMDEtXFx1MEQwM1xcdTBEMDUtXFx1MEQwQ1xcdTBEMEUtXFx1MEQxMFxcdTBEMTItXFx1MEQzQVxcdTBEM0QtXFx1MEQ0NFxcdTBENDYtXFx1MEQ0OFxcdTBENEEtXFx1MEQ0Q1xcdTBENEVcXHUwRDU0LVxcdTBENTdcXHUwRDVGLVxcdTBENjNcXHUwRDdBLVxcdTBEN0ZcXHUwRDgyXFx1MEQ4M1xcdTBEODUtXFx1MEQ5NlxcdTBEOUEtXFx1MERCMVxcdTBEQjMtXFx1MERCQlxcdTBEQkRcXHUwREMwLVxcdTBEQzZcXHUwRENGLVxcdTBERDRcXHUwREQ2XFx1MEREOC1cXHUwRERGXFx1MERGMlxcdTBERjNcXHUwRTAxLVxcdTBFM0FcXHUwRTQwLVxcdTBFNDZcXHUwRTREXFx1MEU4MVxcdTBFODJcXHUwRTg0XFx1MEU4N1xcdTBFODhcXHUwRThBXFx1MEU4RFxcdTBFOTQtXFx1MEU5N1xcdTBFOTktXFx1MEU5RlxcdTBFQTEtXFx1MEVBM1xcdTBFQTVcXHUwRUE3XFx1MEVBQVxcdTBFQUJcXHUwRUFELVxcdTBFQjlcXHUwRUJCLVxcdTBFQkRcXHUwRUMwLVxcdTBFQzRcXHUwRUM2XFx1MEVDRFxcdTBFREMtXFx1MEVERlxcdTBGMDBcXHUwRjQwLVxcdTBGNDdcXHUwRjQ5LVxcdTBGNkNcXHUwRjcxLVxcdTBGODFcXHUwRjg4LVxcdTBGOTdcXHUwRjk5LVxcdTBGQkNcXHUxMDAwLVxcdTEwMzZcXHUxMDM4XFx1MTAzQi1cXHUxMDNGXFx1MTA1MC1cXHUxMDYyXFx1MTA2NS1cXHUxMDY4XFx1MTA2RS1cXHUxMDg2XFx1MTA4RVxcdTEwOUNcXHUxMDlEXFx1MTBBMC1cXHUxMEM1XFx1MTBDN1xcdTEwQ0RcXHUxMEQwLVxcdTEwRkFcXHUxMEZDLVxcdTEyNDhcXHUxMjRBLVxcdTEyNERcXHUxMjUwLVxcdTEyNTZcXHUxMjU4XFx1MTI1QS1cXHUxMjVEXFx1MTI2MC1cXHUxMjg4XFx1MTI4QS1cXHUxMjhEXFx1MTI5MC1cXHUxMkIwXFx1MTJCMi1cXHUxMkI1XFx1MTJCOC1cXHUxMkJFXFx1MTJDMFxcdTEyQzItXFx1MTJDNVxcdTEyQzgtXFx1MTJENlxcdTEyRDgtXFx1MTMxMFxcdTEzMTItXFx1MTMxNVxcdTEzMTgtXFx1MTM1QVxcdTEzNUZcXHUxMzgwLVxcdTEzOEZcXHUxM0EwLVxcdTEzRjVcXHUxM0Y4LVxcdTEzRkRcXHUxNDAxLVxcdTE2NkNcXHUxNjZGLVxcdTE2N0ZcXHUxNjgxLVxcdTE2OUFcXHUxNkEwLVxcdTE2RUFcXHUxNkVFLVxcdTE2RjhcXHUxNzAwLVxcdTE3MENcXHUxNzBFLVxcdTE3MTNcXHUxNzIwLVxcdTE3MzNcXHUxNzQwLVxcdTE3NTNcXHUxNzYwLVxcdTE3NkNcXHUxNzZFLVxcdTE3NzBcXHUxNzcyXFx1MTc3M1xcdTE3ODAtXFx1MTdCM1xcdTE3QjYtXFx1MTdDOFxcdTE3RDdcXHUxN0RDXFx1MTgyMC1cXHUxODc3XFx1MTg4MC1cXHUxOEFBXFx1MThCMC1cXHUxOEY1XFx1MTkwMC1cXHUxOTFFXFx1MTkyMC1cXHUxOTJCXFx1MTkzMC1cXHUxOTM4XFx1MTk1MC1cXHUxOTZEXFx1MTk3MC1cXHUxOTc0XFx1MTk4MC1cXHUxOUFCXFx1MTlCMC1cXHUxOUM5XFx1MUEwMC1cXHUxQTFCXFx1MUEyMC1cXHUxQTVFXFx1MUE2MS1cXHUxQTc0XFx1MUFBN1xcdTFCMDAtXFx1MUIzM1xcdTFCMzUtXFx1MUI0M1xcdTFCNDUtXFx1MUI0QlxcdTFCODAtXFx1MUJBOVxcdTFCQUMtXFx1MUJBRlxcdTFCQkEtXFx1MUJFNVxcdTFCRTctXFx1MUJGMVxcdTFDMDAtXFx1MUMzNVxcdTFDNEQtXFx1MUM0RlxcdTFDNUEtXFx1MUM3RFxcdTFDODAtXFx1MUM4OFxcdTFDRTktXFx1MUNFQ1xcdTFDRUUtXFx1MUNGM1xcdTFDRjVcXHUxQ0Y2XFx1MUQwMC1cXHUxREJGXFx1MURFNy1cXHUxREY0XFx1MUUwMC1cXHUxRjE1XFx1MUYxOC1cXHUxRjFEXFx1MUYyMC1cXHUxRjQ1XFx1MUY0OC1cXHUxRjREXFx1MUY1MC1cXHUxRjU3XFx1MUY1OVxcdTFGNUJcXHUxRjVEXFx1MUY1Ri1cXHUxRjdEXFx1MUY4MC1cXHUxRkI0XFx1MUZCNi1cXHUxRkJDXFx1MUZCRVxcdTFGQzItXFx1MUZDNFxcdTFGQzYtXFx1MUZDQ1xcdTFGRDAtXFx1MUZEM1xcdTFGRDYtXFx1MUZEQlxcdTFGRTAtXFx1MUZFQ1xcdTFGRjItXFx1MUZGNFxcdTFGRjYtXFx1MUZGQ1xcdTIwNzFcXHUyMDdGXFx1MjA5MC1cXHUyMDlDXFx1MjEwMlxcdTIxMDdcXHUyMTBBLVxcdTIxMTNcXHUyMTE1XFx1MjExOS1cXHUyMTFEXFx1MjEyNFxcdTIxMjZcXHUyMTI4XFx1MjEyQS1cXHUyMTJEXFx1MjEyRi1cXHUyMTM5XFx1MjEzQy1cXHUyMTNGXFx1MjE0NS1cXHUyMTQ5XFx1MjE0RVxcdTIxNjAtXFx1MjE4OFxcdTI0QjYtXFx1MjRFOVxcdTJDMDAtXFx1MkMyRVxcdTJDMzAtXFx1MkM1RVxcdTJDNjAtXFx1MkNFNFxcdTJDRUItXFx1MkNFRVxcdTJDRjJcXHUyQ0YzXFx1MkQwMC1cXHUyRDI1XFx1MkQyN1xcdTJEMkRcXHUyRDMwLVxcdTJENjdcXHUyRDZGXFx1MkQ4MC1cXHUyRDk2XFx1MkRBMC1cXHUyREE2XFx1MkRBOC1cXHUyREFFXFx1MkRCMC1cXHUyREI2XFx1MkRCOC1cXHUyREJFXFx1MkRDMC1cXHUyREM2XFx1MkRDOC1cXHUyRENFXFx1MkREMC1cXHUyREQ2XFx1MkREOC1cXHUyRERFXFx1MkRFMC1cXHUyREZGXFx1MkUyRlxcdTMwMDUtXFx1MzAwN1xcdTMwMjEtXFx1MzAyOVxcdTMwMzEtXFx1MzAzNVxcdTMwMzgtXFx1MzAzQ1xcdTMwNDEtXFx1MzA5NlxcdTMwOUQtXFx1MzA5RlxcdTMwQTEtXFx1MzBGQVxcdTMwRkMtXFx1MzBGRlxcdTMxMDUtXFx1MzEyRFxcdTMxMzEtXFx1MzE4RVxcdTMxQTAtXFx1MzFCQVxcdTMxRjAtXFx1MzFGRlxcdTM0MDAtXFx1NERCNVxcdTRFMDAtXFx1OUZENVxcdUEwMDAtXFx1QTQ4Q1xcdUE0RDAtXFx1QTRGRFxcdUE1MDAtXFx1QTYwQ1xcdUE2MTAtXFx1QTYxRlxcdUE2MkFcXHVBNjJCXFx1QTY0MC1cXHVBNjZFXFx1QTY3NC1cXHVBNjdCXFx1QTY3Ri1cXHVBNkVGXFx1QTcxNy1cXHVBNzFGXFx1QTcyMi1cXHVBNzg4XFx1QTc4Qi1cXHVBN0FFXFx1QTdCMC1cXHVBN0I3XFx1QTdGNy1cXHVBODAxXFx1QTgwMy1cXHVBODA1XFx1QTgwNy1cXHVBODBBXFx1QTgwQy1cXHVBODI3XFx1QTg0MC1cXHVBODczXFx1QTg4MC1cXHVBOEMzXFx1QThDNVxcdUE4RjItXFx1QThGN1xcdUE4RkJcXHVBOEZEXFx1QTkwQS1cXHVBOTJBXFx1QTkzMC1cXHVBOTUyXFx1QTk2MC1cXHVBOTdDXFx1QTk4MC1cXHVBOUIyXFx1QTlCNC1cXHVBOUJGXFx1QTlDRlxcdUE5RTAtXFx1QTlFNFxcdUE5RTYtXFx1QTlFRlxcdUE5RkEtXFx1QTlGRVxcdUFBMDAtXFx1QUEzNlxcdUFBNDAtXFx1QUE0RFxcdUFBNjAtXFx1QUE3NlxcdUFBN0FcXHVBQTdFLVxcdUFBQkVcXHVBQUMwXFx1QUFDMlxcdUFBREItXFx1QUFERFxcdUFBRTAtXFx1QUFFRlxcdUFBRjItXFx1QUFGNVxcdUFCMDEtXFx1QUIwNlxcdUFCMDktXFx1QUIwRVxcdUFCMTEtXFx1QUIxNlxcdUFCMjAtXFx1QUIyNlxcdUFCMjgtXFx1QUIyRVxcdUFCMzAtXFx1QUI1QVxcdUFCNUMtXFx1QUI2NVxcdUFCNzAtXFx1QUJFQVxcdUFDMDAtXFx1RDdBM1xcdUQ3QjAtXFx1RDdDNlxcdUQ3Q0ItXFx1RDdGQlxcdUY5MDAtXFx1RkE2RFxcdUZBNzAtXFx1RkFEOVxcdUZCMDAtXFx1RkIwNlxcdUZCMTMtXFx1RkIxN1xcdUZCMUQtXFx1RkIyOFxcdUZCMkEtXFx1RkIzNlxcdUZCMzgtXFx1RkIzQ1xcdUZCM0VcXHVGQjQwXFx1RkI0MVxcdUZCNDNcXHVGQjQ0XFx1RkI0Ni1cXHVGQkIxXFx1RkJEMy1cXHVGRDNEXFx1RkQ1MC1cXHVGRDhGXFx1RkQ5Mi1cXHVGREM3XFx1RkRGMC1cXHVGREZCXFx1RkU3MC1cXHVGRTc0XFx1RkU3Ni1cXHVGRUZDXFx1RkYyMS1cXHVGRjNBXFx1RkY0MS1cXHVGRjVBXFx1RkY2Ni1cXHVGRkJFXFx1RkZDMi1cXHVGRkM3XFx1RkZDQS1cXHVGRkNGXFx1RkZEMi1cXHVGRkQ3XFx1RkZEQS1cXHVGRkRDJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVEQzAwLVxcdURDMEJcXHVEQzBELVxcdURDMjZcXHVEQzI4LVxcdURDM0FcXHVEQzNDXFx1REMzRFxcdURDM0YtXFx1REM0RFxcdURDNTAtXFx1REM1RFxcdURDODAtXFx1RENGQVxcdURENDAtXFx1REQ3NFxcdURFODAtXFx1REU5Q1xcdURFQTAtXFx1REVEMFxcdURGMDAtXFx1REYxRlxcdURGMzAtXFx1REY0QVxcdURGNTAtXFx1REY3QVxcdURGODAtXFx1REY5RFxcdURGQTAtXFx1REZDM1xcdURGQzgtXFx1REZDRlxcdURGRDEtXFx1REZENV18XFx1RDgwMVtcXHVEQzAwLVxcdURDOURcXHVEQ0IwLVxcdURDRDNcXHVEQ0Q4LVxcdURDRkJcXHVERDAwLVxcdUREMjdcXHVERDMwLVxcdURENjNcXHVERTAwLVxcdURGMzZcXHVERjQwLVxcdURGNTVcXHVERjYwLVxcdURGNjddfFxcdUQ4MDJbXFx1REMwMC1cXHVEQzA1XFx1REMwOFxcdURDMEEtXFx1REMzNVxcdURDMzdcXHVEQzM4XFx1REMzQ1xcdURDM0YtXFx1REM1NVxcdURDNjAtXFx1REM3NlxcdURDODAtXFx1REM5RVxcdURDRTAtXFx1RENGMlxcdURDRjRcXHVEQ0Y1XFx1REQwMC1cXHVERDE1XFx1REQyMC1cXHVERDM5XFx1REQ4MC1cXHVEREI3XFx1RERCRVxcdUREQkZcXHVERTAwLVxcdURFMDNcXHVERTA1XFx1REUwNlxcdURFMEMtXFx1REUxM1xcdURFMTUtXFx1REUxN1xcdURFMTktXFx1REUzM1xcdURFNjAtXFx1REU3Q1xcdURFODAtXFx1REU5Q1xcdURFQzAtXFx1REVDN1xcdURFQzktXFx1REVFNFxcdURGMDAtXFx1REYzNVxcdURGNDAtXFx1REY1NVxcdURGNjAtXFx1REY3MlxcdURGODAtXFx1REY5MV18XFx1RDgwM1tcXHVEQzAwLVxcdURDNDhcXHVEQzgwLVxcdURDQjJcXHVEQ0MwLVxcdURDRjJdfFxcdUQ4MDRbXFx1REMwMC1cXHVEQzQ1XFx1REM4Mi1cXHVEQ0I4XFx1RENEMC1cXHVEQ0U4XFx1REQwMC1cXHVERDMyXFx1REQ1MC1cXHVERDcyXFx1REQ3NlxcdUREODAtXFx1RERCRlxcdUREQzEtXFx1RERDNFxcdUREREFcXHVERERDXFx1REUwMC1cXHVERTExXFx1REUxMy1cXHVERTM0XFx1REUzN1xcdURFM0VcXHVERTgwLVxcdURFODZcXHVERTg4XFx1REU4QS1cXHVERThEXFx1REU4Ri1cXHVERTlEXFx1REU5Ri1cXHVERUE4XFx1REVCMC1cXHVERUU4XFx1REYwMC1cXHVERjAzXFx1REYwNS1cXHVERjBDXFx1REYwRlxcdURGMTBcXHVERjEzLVxcdURGMjhcXHVERjJBLVxcdURGMzBcXHVERjMyXFx1REYzM1xcdURGMzUtXFx1REYzOVxcdURGM0QtXFx1REY0NFxcdURGNDdcXHVERjQ4XFx1REY0QlxcdURGNENcXHVERjUwXFx1REY1N1xcdURGNUQtXFx1REY2M118XFx1RDgwNVtcXHVEQzAwLVxcdURDNDFcXHVEQzQzLVxcdURDNDVcXHVEQzQ3LVxcdURDNEFcXHVEQzgwLVxcdURDQzFcXHVEQ0M0XFx1RENDNVxcdURDQzdcXHVERDgwLVxcdUREQjVcXHVEREI4LVxcdUREQkVcXHVEREQ4LVxcdURERERcXHVERTAwLVxcdURFM0VcXHVERTQwXFx1REU0NFxcdURFODAtXFx1REVCNVxcdURGMDAtXFx1REYxOVxcdURGMUQtXFx1REYyQV18XFx1RDgwNltcXHVEQ0EwLVxcdURDREZcXHVEQ0ZGXFx1REVDMC1cXHVERUY4XXxcXHVEODA3W1xcdURDMDAtXFx1REMwOFxcdURDMEEtXFx1REMzNlxcdURDMzgtXFx1REMzRVxcdURDNDBcXHVEQzcyLVxcdURDOEZcXHVEQzkyLVxcdURDQTdcXHVEQ0E5LVxcdURDQjZdfFxcdUQ4MDhbXFx1REMwMC1cXHVERjk5XXxcXHVEODA5W1xcdURDMDAtXFx1REM2RVxcdURDODAtXFx1REQ0M118W1xcdUQ4MENcXHVEODFDLVxcdUQ4MjBcXHVEODQwLVxcdUQ4NjhcXHVEODZBLVxcdUQ4NkNcXHVEODZGLVxcdUQ4NzJdW1xcdURDMDAtXFx1REZGRl18XFx1RDgwRFtcXHVEQzAwLVxcdURDMkVdfFxcdUQ4MTFbXFx1REMwMC1cXHVERTQ2XXxcXHVEODFBW1xcdURDMDAtXFx1REUzOFxcdURFNDAtXFx1REU1RVxcdURFRDAtXFx1REVFRFxcdURGMDAtXFx1REYzNlxcdURGNDAtXFx1REY0M1xcdURGNjMtXFx1REY3N1xcdURGN0QtXFx1REY4Rl18XFx1RDgxQltcXHVERjAwLVxcdURGNDRcXHVERjUwLVxcdURGN0VcXHVERjkzLVxcdURGOUZcXHVERkUwXXxcXHVEODIxW1xcdURDMDAtXFx1REZFQ118XFx1RDgyMltcXHVEQzAwLVxcdURFRjJdfFxcdUQ4MkNbXFx1REMwMFxcdURDMDFdfFxcdUQ4MkZbXFx1REMwMC1cXHVEQzZBXFx1REM3MC1cXHVEQzdDXFx1REM4MC1cXHVEQzg4XFx1REM5MC1cXHVEQzk5XFx1REM5RV18XFx1RDgzNVtcXHVEQzAwLVxcdURDNTRcXHVEQzU2LVxcdURDOUNcXHVEQzlFXFx1REM5RlxcdURDQTJcXHVEQ0E1XFx1RENBNlxcdURDQTktXFx1RENBQ1xcdURDQUUtXFx1RENCOVxcdURDQkJcXHVEQ0JELVxcdURDQzNcXHVEQ0M1LVxcdUREMDVcXHVERDA3LVxcdUREMEFcXHVERDBELVxcdUREMTRcXHVERDE2LVxcdUREMUNcXHVERDFFLVxcdUREMzlcXHVERDNCLVxcdUREM0VcXHVERDQwLVxcdURENDRcXHVERDQ2XFx1REQ0QS1cXHVERDUwXFx1REQ1Mi1cXHVERUE1XFx1REVBOC1cXHVERUMwXFx1REVDMi1cXHVERURBXFx1REVEQy1cXHVERUZBXFx1REVGQy1cXHVERjE0XFx1REYxNi1cXHVERjM0XFx1REYzNi1cXHVERjRFXFx1REY1MC1cXHVERjZFXFx1REY3MC1cXHVERjg4XFx1REY4QS1cXHVERkE4XFx1REZBQS1cXHVERkMyXFx1REZDNC1cXHVERkNCXXxcXHVEODM4W1xcdURDMDAtXFx1REMwNlxcdURDMDgtXFx1REMxOFxcdURDMUItXFx1REMyMVxcdURDMjNcXHVEQzI0XFx1REMyNi1cXHVEQzJBXXxcXHVEODNBW1xcdURDMDAtXFx1RENDNFxcdUREMDAtXFx1REQ0M1xcdURENDddfFxcdUQ4M0JbXFx1REUwMC1cXHVERTAzXFx1REUwNS1cXHVERTFGXFx1REUyMVxcdURFMjJcXHVERTI0XFx1REUyN1xcdURFMjktXFx1REUzMlxcdURFMzQtXFx1REUzN1xcdURFMzlcXHVERTNCXFx1REU0MlxcdURFNDdcXHVERTQ5XFx1REU0QlxcdURFNEQtXFx1REU0RlxcdURFNTFcXHVERTUyXFx1REU1NFxcdURFNTdcXHVERTU5XFx1REU1QlxcdURFNURcXHVERTVGXFx1REU2MVxcdURFNjJcXHVERTY0XFx1REU2Ny1cXHVERTZBXFx1REU2Qy1cXHVERTcyXFx1REU3NC1cXHVERTc3XFx1REU3OS1cXHVERTdDXFx1REU3RVxcdURFODAtXFx1REU4OVxcdURFOEItXFx1REU5QlxcdURFQTEtXFx1REVBM1xcdURFQTUtXFx1REVBOVxcdURFQUItXFx1REVCQl18XFx1RDgzQ1tcXHVERDMwLVxcdURENDlcXHVERDUwLVxcdURENjlcXHVERDcwLVxcdUREODldfFxcdUQ4NjlbXFx1REMwMC1cXHVERUQ2XFx1REYwMC1cXHVERkZGXXxcXHVEODZEW1xcdURDMDAtXFx1REYzNFxcdURGNDAtXFx1REZGRl18XFx1RDg2RVtcXHVEQzAwLVxcdURDMURcXHVEQzIwLVxcdURGRkZdfFxcdUQ4NzNbXFx1REMwMC1cXHVERUExXXxcXHVEODdFW1xcdURDMDAtXFx1REUxRF0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQW55JyxcbiAgICAgICAgaXNCbXBMYXN0OiB0cnVlLFxuICAgICAgICBibXA6ICdcXDAtXFx1RkZGRicsXG4gICAgICAgIGFzdHJhbDogJ1tcXHVEODAwLVxcdURCRkZdW1xcdURDMDAtXFx1REZGRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnRGVmYXVsdF9JZ25vcmFibGVfQ29kZV9Qb2ludCcsXG4gICAgICAgIGJtcDogJ1xceEFEXFx1MDM0RlxcdTA2MUNcXHUxMTVGXFx1MTE2MFxcdTE3QjRcXHUxN0I1XFx1MTgwQi1cXHUxODBFXFx1MjAwQi1cXHUyMDBGXFx1MjAyQS1cXHUyMDJFXFx1MjA2MC1cXHUyMDZGXFx1MzE2NFxcdUZFMDAtXFx1RkUwRlxcdUZFRkZcXHVGRkEwXFx1RkZGMC1cXHVGRkY4JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgyRltcXHVEQ0EwLVxcdURDQTNdfFxcdUQ4MzRbXFx1REQ3My1cXHVERDdBXXxbXFx1REI0MC1cXHVEQjQzXVtcXHVEQzAwLVxcdURGRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0xvd2VyY2FzZScsXG4gICAgICAgIGJtcDogJ2EtelxceEFBXFx4QjVcXHhCQVxceERGLVxceEY2XFx4RjgtXFx4RkZcXHUwMTAxXFx1MDEwM1xcdTAxMDVcXHUwMTA3XFx1MDEwOVxcdTAxMEJcXHUwMTBEXFx1MDEwRlxcdTAxMTFcXHUwMTEzXFx1MDExNVxcdTAxMTdcXHUwMTE5XFx1MDExQlxcdTAxMURcXHUwMTFGXFx1MDEyMVxcdTAxMjNcXHUwMTI1XFx1MDEyN1xcdTAxMjlcXHUwMTJCXFx1MDEyRFxcdTAxMkZcXHUwMTMxXFx1MDEzM1xcdTAxMzVcXHUwMTM3XFx1MDEzOFxcdTAxM0FcXHUwMTNDXFx1MDEzRVxcdTAxNDBcXHUwMTQyXFx1MDE0NFxcdTAxNDZcXHUwMTQ4XFx1MDE0OVxcdTAxNEJcXHUwMTREXFx1MDE0RlxcdTAxNTFcXHUwMTUzXFx1MDE1NVxcdTAxNTdcXHUwMTU5XFx1MDE1QlxcdTAxNURcXHUwMTVGXFx1MDE2MVxcdTAxNjNcXHUwMTY1XFx1MDE2N1xcdTAxNjlcXHUwMTZCXFx1MDE2RFxcdTAxNkZcXHUwMTcxXFx1MDE3M1xcdTAxNzVcXHUwMTc3XFx1MDE3QVxcdTAxN0NcXHUwMTdFLVxcdTAxODBcXHUwMTgzXFx1MDE4NVxcdTAxODhcXHUwMThDXFx1MDE4RFxcdTAxOTJcXHUwMTk1XFx1MDE5OS1cXHUwMTlCXFx1MDE5RVxcdTAxQTFcXHUwMUEzXFx1MDFBNVxcdTAxQThcXHUwMUFBXFx1MDFBQlxcdTAxQURcXHUwMUIwXFx1MDFCNFxcdTAxQjZcXHUwMUI5XFx1MDFCQVxcdTAxQkQtXFx1MDFCRlxcdTAxQzZcXHUwMUM5XFx1MDFDQ1xcdTAxQ0VcXHUwMUQwXFx1MDFEMlxcdTAxRDRcXHUwMUQ2XFx1MDFEOFxcdTAxREFcXHUwMURDXFx1MDFERFxcdTAxREZcXHUwMUUxXFx1MDFFM1xcdTAxRTVcXHUwMUU3XFx1MDFFOVxcdTAxRUJcXHUwMUVEXFx1MDFFRlxcdTAxRjBcXHUwMUYzXFx1MDFGNVxcdTAxRjlcXHUwMUZCXFx1MDFGRFxcdTAxRkZcXHUwMjAxXFx1MDIwM1xcdTAyMDVcXHUwMjA3XFx1MDIwOVxcdTAyMEJcXHUwMjBEXFx1MDIwRlxcdTAyMTFcXHUwMjEzXFx1MDIxNVxcdTAyMTdcXHUwMjE5XFx1MDIxQlxcdTAyMURcXHUwMjFGXFx1MDIyMVxcdTAyMjNcXHUwMjI1XFx1MDIyN1xcdTAyMjlcXHUwMjJCXFx1MDIyRFxcdTAyMkZcXHUwMjMxXFx1MDIzMy1cXHUwMjM5XFx1MDIzQ1xcdTAyM0ZcXHUwMjQwXFx1MDI0MlxcdTAyNDdcXHUwMjQ5XFx1MDI0QlxcdTAyNERcXHUwMjRGLVxcdTAyOTNcXHUwMjk1LVxcdTAyQjhcXHUwMkMwXFx1MDJDMVxcdTAyRTAtXFx1MDJFNFxcdTAzNDVcXHUwMzcxXFx1MDM3M1xcdTAzNzdcXHUwMzdBLVxcdTAzN0RcXHUwMzkwXFx1MDNBQy1cXHUwM0NFXFx1MDNEMFxcdTAzRDFcXHUwM0Q1LVxcdTAzRDdcXHUwM0Q5XFx1MDNEQlxcdTAzRERcXHUwM0RGXFx1MDNFMVxcdTAzRTNcXHUwM0U1XFx1MDNFN1xcdTAzRTlcXHUwM0VCXFx1MDNFRFxcdTAzRUYtXFx1MDNGM1xcdTAzRjVcXHUwM0Y4XFx1MDNGQlxcdTAzRkNcXHUwNDMwLVxcdTA0NUZcXHUwNDYxXFx1MDQ2M1xcdTA0NjVcXHUwNDY3XFx1MDQ2OVxcdTA0NkJcXHUwNDZEXFx1MDQ2RlxcdTA0NzFcXHUwNDczXFx1MDQ3NVxcdTA0NzdcXHUwNDc5XFx1MDQ3QlxcdTA0N0RcXHUwNDdGXFx1MDQ4MVxcdTA0OEJcXHUwNDhEXFx1MDQ4RlxcdTA0OTFcXHUwNDkzXFx1MDQ5NVxcdTA0OTdcXHUwNDk5XFx1MDQ5QlxcdTA0OURcXHUwNDlGXFx1MDRBMVxcdTA0QTNcXHUwNEE1XFx1MDRBN1xcdTA0QTlcXHUwNEFCXFx1MDRBRFxcdTA0QUZcXHUwNEIxXFx1MDRCM1xcdTA0QjVcXHUwNEI3XFx1MDRCOVxcdTA0QkJcXHUwNEJEXFx1MDRCRlxcdTA0QzJcXHUwNEM0XFx1MDRDNlxcdTA0QzhcXHUwNENBXFx1MDRDQ1xcdTA0Q0VcXHUwNENGXFx1MDREMVxcdTA0RDNcXHUwNEQ1XFx1MDREN1xcdTA0RDlcXHUwNERCXFx1MDRERFxcdTA0REZcXHUwNEUxXFx1MDRFM1xcdTA0RTVcXHUwNEU3XFx1MDRFOVxcdTA0RUJcXHUwNEVEXFx1MDRFRlxcdTA0RjFcXHUwNEYzXFx1MDRGNVxcdTA0RjdcXHUwNEY5XFx1MDRGQlxcdTA0RkRcXHUwNEZGXFx1MDUwMVxcdTA1MDNcXHUwNTA1XFx1MDUwN1xcdTA1MDlcXHUwNTBCXFx1MDUwRFxcdTA1MEZcXHUwNTExXFx1MDUxM1xcdTA1MTVcXHUwNTE3XFx1MDUxOVxcdTA1MUJcXHUwNTFEXFx1MDUxRlxcdTA1MjFcXHUwNTIzXFx1MDUyNVxcdTA1MjdcXHUwNTI5XFx1MDUyQlxcdTA1MkRcXHUwNTJGXFx1MDU2MS1cXHUwNTg3XFx1MTNGOC1cXHUxM0ZEXFx1MUM4MC1cXHUxQzg4XFx1MUQwMC1cXHUxREJGXFx1MUUwMVxcdTFFMDNcXHUxRTA1XFx1MUUwN1xcdTFFMDlcXHUxRTBCXFx1MUUwRFxcdTFFMEZcXHUxRTExXFx1MUUxM1xcdTFFMTVcXHUxRTE3XFx1MUUxOVxcdTFFMUJcXHUxRTFEXFx1MUUxRlxcdTFFMjFcXHUxRTIzXFx1MUUyNVxcdTFFMjdcXHUxRTI5XFx1MUUyQlxcdTFFMkRcXHUxRTJGXFx1MUUzMVxcdTFFMzNcXHUxRTM1XFx1MUUzN1xcdTFFMzlcXHUxRTNCXFx1MUUzRFxcdTFFM0ZcXHUxRTQxXFx1MUU0M1xcdTFFNDVcXHUxRTQ3XFx1MUU0OVxcdTFFNEJcXHUxRTREXFx1MUU0RlxcdTFFNTFcXHUxRTUzXFx1MUU1NVxcdTFFNTdcXHUxRTU5XFx1MUU1QlxcdTFFNURcXHUxRTVGXFx1MUU2MVxcdTFFNjNcXHUxRTY1XFx1MUU2N1xcdTFFNjlcXHUxRTZCXFx1MUU2RFxcdTFFNkZcXHUxRTcxXFx1MUU3M1xcdTFFNzVcXHUxRTc3XFx1MUU3OVxcdTFFN0JcXHUxRTdEXFx1MUU3RlxcdTFFODFcXHUxRTgzXFx1MUU4NVxcdTFFODdcXHUxRTg5XFx1MUU4QlxcdTFFOERcXHUxRThGXFx1MUU5MVxcdTFFOTNcXHUxRTk1LVxcdTFFOURcXHUxRTlGXFx1MUVBMVxcdTFFQTNcXHUxRUE1XFx1MUVBN1xcdTFFQTlcXHUxRUFCXFx1MUVBRFxcdTFFQUZcXHUxRUIxXFx1MUVCM1xcdTFFQjVcXHUxRUI3XFx1MUVCOVxcdTFFQkJcXHUxRUJEXFx1MUVCRlxcdTFFQzFcXHUxRUMzXFx1MUVDNVxcdTFFQzdcXHUxRUM5XFx1MUVDQlxcdTFFQ0RcXHUxRUNGXFx1MUVEMVxcdTFFRDNcXHUxRUQ1XFx1MUVEN1xcdTFFRDlcXHUxRURCXFx1MUVERFxcdTFFREZcXHUxRUUxXFx1MUVFM1xcdTFFRTVcXHUxRUU3XFx1MUVFOVxcdTFFRUJcXHUxRUVEXFx1MUVFRlxcdTFFRjFcXHUxRUYzXFx1MUVGNVxcdTFFRjdcXHUxRUY5XFx1MUVGQlxcdTFFRkRcXHUxRUZGLVxcdTFGMDdcXHUxRjEwLVxcdTFGMTVcXHUxRjIwLVxcdTFGMjdcXHUxRjMwLVxcdTFGMzdcXHUxRjQwLVxcdTFGNDVcXHUxRjUwLVxcdTFGNTdcXHUxRjYwLVxcdTFGNjdcXHUxRjcwLVxcdTFGN0RcXHUxRjgwLVxcdTFGODdcXHUxRjkwLVxcdTFGOTdcXHUxRkEwLVxcdTFGQTdcXHUxRkIwLVxcdTFGQjRcXHUxRkI2XFx1MUZCN1xcdTFGQkVcXHUxRkMyLVxcdTFGQzRcXHUxRkM2XFx1MUZDN1xcdTFGRDAtXFx1MUZEM1xcdTFGRDZcXHUxRkQ3XFx1MUZFMC1cXHUxRkU3XFx1MUZGMi1cXHUxRkY0XFx1MUZGNlxcdTFGRjdcXHUyMDcxXFx1MjA3RlxcdTIwOTAtXFx1MjA5Q1xcdTIxMEFcXHUyMTBFXFx1MjEwRlxcdTIxMTNcXHUyMTJGXFx1MjEzNFxcdTIxMzlcXHUyMTNDXFx1MjEzRFxcdTIxNDYtXFx1MjE0OVxcdTIxNEVcXHUyMTcwLVxcdTIxN0ZcXHUyMTg0XFx1MjREMC1cXHUyNEU5XFx1MkMzMC1cXHUyQzVFXFx1MkM2MVxcdTJDNjVcXHUyQzY2XFx1MkM2OFxcdTJDNkFcXHUyQzZDXFx1MkM3MVxcdTJDNzNcXHUyQzc0XFx1MkM3Ni1cXHUyQzdEXFx1MkM4MVxcdTJDODNcXHUyQzg1XFx1MkM4N1xcdTJDODlcXHUyQzhCXFx1MkM4RFxcdTJDOEZcXHUyQzkxXFx1MkM5M1xcdTJDOTVcXHUyQzk3XFx1MkM5OVxcdTJDOUJcXHUyQzlEXFx1MkM5RlxcdTJDQTFcXHUyQ0EzXFx1MkNBNVxcdTJDQTdcXHUyQ0E5XFx1MkNBQlxcdTJDQURcXHUyQ0FGXFx1MkNCMVxcdTJDQjNcXHUyQ0I1XFx1MkNCN1xcdTJDQjlcXHUyQ0JCXFx1MkNCRFxcdTJDQkZcXHUyQ0MxXFx1MkNDM1xcdTJDQzVcXHUyQ0M3XFx1MkNDOVxcdTJDQ0JcXHUyQ0NEXFx1MkNDRlxcdTJDRDFcXHUyQ0QzXFx1MkNENVxcdTJDRDdcXHUyQ0Q5XFx1MkNEQlxcdTJDRERcXHUyQ0RGXFx1MkNFMVxcdTJDRTNcXHUyQ0U0XFx1MkNFQ1xcdTJDRUVcXHUyQ0YzXFx1MkQwMC1cXHUyRDI1XFx1MkQyN1xcdTJEMkRcXHVBNjQxXFx1QTY0M1xcdUE2NDVcXHVBNjQ3XFx1QTY0OVxcdUE2NEJcXHVBNjREXFx1QTY0RlxcdUE2NTFcXHVBNjUzXFx1QTY1NVxcdUE2NTdcXHVBNjU5XFx1QTY1QlxcdUE2NURcXHVBNjVGXFx1QTY2MVxcdUE2NjNcXHVBNjY1XFx1QTY2N1xcdUE2NjlcXHVBNjZCXFx1QTY2RFxcdUE2ODFcXHVBNjgzXFx1QTY4NVxcdUE2ODdcXHVBNjg5XFx1QTY4QlxcdUE2OERcXHVBNjhGXFx1QTY5MVxcdUE2OTNcXHVBNjk1XFx1QTY5N1xcdUE2OTlcXHVBNjlCLVxcdUE2OURcXHVBNzIzXFx1QTcyNVxcdUE3MjdcXHVBNzI5XFx1QTcyQlxcdUE3MkRcXHVBNzJGLVxcdUE3MzFcXHVBNzMzXFx1QTczNVxcdUE3MzdcXHVBNzM5XFx1QTczQlxcdUE3M0RcXHVBNzNGXFx1QTc0MVxcdUE3NDNcXHVBNzQ1XFx1QTc0N1xcdUE3NDlcXHVBNzRCXFx1QTc0RFxcdUE3NEZcXHVBNzUxXFx1QTc1M1xcdUE3NTVcXHVBNzU3XFx1QTc1OVxcdUE3NUJcXHVBNzVEXFx1QTc1RlxcdUE3NjFcXHVBNzYzXFx1QTc2NVxcdUE3NjdcXHVBNzY5XFx1QTc2QlxcdUE3NkRcXHVBNzZGLVxcdUE3NzhcXHVBNzdBXFx1QTc3Q1xcdUE3N0ZcXHVBNzgxXFx1QTc4M1xcdUE3ODVcXHVBNzg3XFx1QTc4Q1xcdUE3OEVcXHVBNzkxXFx1QTc5My1cXHVBNzk1XFx1QTc5N1xcdUE3OTlcXHVBNzlCXFx1QTc5RFxcdUE3OUZcXHVBN0ExXFx1QTdBM1xcdUE3QTVcXHVBN0E3XFx1QTdBOVxcdUE3QjVcXHVBN0I3XFx1QTdGOC1cXHVBN0ZBXFx1QUIzMC1cXHVBQjVBXFx1QUI1Qy1cXHVBQjY1XFx1QUI3MC1cXHVBQkJGXFx1RkIwMC1cXHVGQjA2XFx1RkIxMy1cXHVGQjE3XFx1RkY0MS1cXHVGRjVBJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMVtcXHVEQzI4LVxcdURDNEZcXHVEQ0Q4LVxcdURDRkJdfFxcdUQ4MDNbXFx1RENDMC1cXHVEQ0YyXXxcXHVEODA2W1xcdURDQzAtXFx1RENERl18XFx1RDgzNVtcXHVEQzFBLVxcdURDMzNcXHVEQzRFLVxcdURDNTRcXHVEQzU2LVxcdURDNjdcXHVEQzgyLVxcdURDOUJcXHVEQ0I2LVxcdURDQjlcXHVEQ0JCXFx1RENCRC1cXHVEQ0MzXFx1RENDNS1cXHVEQ0NGXFx1RENFQS1cXHVERDAzXFx1REQxRS1cXHVERDM3XFx1REQ1Mi1cXHVERDZCXFx1REQ4Ni1cXHVERDlGXFx1RERCQS1cXHVEREQzXFx1RERFRS1cXHVERTA3XFx1REUyMi1cXHVERTNCXFx1REU1Ni1cXHVERTZGXFx1REU4QS1cXHVERUE1XFx1REVDMi1cXHVERURBXFx1REVEQy1cXHVERUUxXFx1REVGQy1cXHVERjE0XFx1REYxNi1cXHVERjFCXFx1REYzNi1cXHVERjRFXFx1REY1MC1cXHVERjU1XFx1REY3MC1cXHVERjg4XFx1REY4QS1cXHVERjhGXFx1REZBQS1cXHVERkMyXFx1REZDNC1cXHVERkM5XFx1REZDQl18XFx1RDgzQVtcXHVERDIyLVxcdURENDNdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ05vbmNoYXJhY3Rlcl9Db2RlX1BvaW50JyxcbiAgICAgICAgYm1wOiAnXFx1RkREMC1cXHVGREVGXFx1RkZGRVxcdUZGRkYnLFxuICAgICAgICBhc3RyYWw6ICdbXFx1RDgzRlxcdUQ4N0ZcXHVEOEJGXFx1RDhGRlxcdUQ5M0ZcXHVEOTdGXFx1RDlCRlxcdUQ5RkZcXHVEQTNGXFx1REE3RlxcdURBQkZcXHVEQUZGXFx1REIzRlxcdURCN0ZcXHVEQkJGXFx1REJGRl1bXFx1REZGRVxcdURGRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1VwcGVyY2FzZScsXG4gICAgICAgIGJtcDogJ0EtWlxceEMwLVxceEQ2XFx4RDgtXFx4REVcXHUwMTAwXFx1MDEwMlxcdTAxMDRcXHUwMTA2XFx1MDEwOFxcdTAxMEFcXHUwMTBDXFx1MDEwRVxcdTAxMTBcXHUwMTEyXFx1MDExNFxcdTAxMTZcXHUwMTE4XFx1MDExQVxcdTAxMUNcXHUwMTFFXFx1MDEyMFxcdTAxMjJcXHUwMTI0XFx1MDEyNlxcdTAxMjhcXHUwMTJBXFx1MDEyQ1xcdTAxMkVcXHUwMTMwXFx1MDEzMlxcdTAxMzRcXHUwMTM2XFx1MDEzOVxcdTAxM0JcXHUwMTNEXFx1MDEzRlxcdTAxNDFcXHUwMTQzXFx1MDE0NVxcdTAxNDdcXHUwMTRBXFx1MDE0Q1xcdTAxNEVcXHUwMTUwXFx1MDE1MlxcdTAxNTRcXHUwMTU2XFx1MDE1OFxcdTAxNUFcXHUwMTVDXFx1MDE1RVxcdTAxNjBcXHUwMTYyXFx1MDE2NFxcdTAxNjZcXHUwMTY4XFx1MDE2QVxcdTAxNkNcXHUwMTZFXFx1MDE3MFxcdTAxNzJcXHUwMTc0XFx1MDE3NlxcdTAxNzhcXHUwMTc5XFx1MDE3QlxcdTAxN0RcXHUwMTgxXFx1MDE4MlxcdTAxODRcXHUwMTg2XFx1MDE4N1xcdTAxODktXFx1MDE4QlxcdTAxOEUtXFx1MDE5MVxcdTAxOTNcXHUwMTk0XFx1MDE5Ni1cXHUwMTk4XFx1MDE5Q1xcdTAxOURcXHUwMTlGXFx1MDFBMFxcdTAxQTJcXHUwMUE0XFx1MDFBNlxcdTAxQTdcXHUwMUE5XFx1MDFBQ1xcdTAxQUVcXHUwMUFGXFx1MDFCMS1cXHUwMUIzXFx1MDFCNVxcdTAxQjdcXHUwMUI4XFx1MDFCQ1xcdTAxQzRcXHUwMUM3XFx1MDFDQVxcdTAxQ0RcXHUwMUNGXFx1MDFEMVxcdTAxRDNcXHUwMUQ1XFx1MDFEN1xcdTAxRDlcXHUwMURCXFx1MDFERVxcdTAxRTBcXHUwMUUyXFx1MDFFNFxcdTAxRTZcXHUwMUU4XFx1MDFFQVxcdTAxRUNcXHUwMUVFXFx1MDFGMVxcdTAxRjRcXHUwMUY2LVxcdTAxRjhcXHUwMUZBXFx1MDFGQ1xcdTAxRkVcXHUwMjAwXFx1MDIwMlxcdTAyMDRcXHUwMjA2XFx1MDIwOFxcdTAyMEFcXHUwMjBDXFx1MDIwRVxcdTAyMTBcXHUwMjEyXFx1MDIxNFxcdTAyMTZcXHUwMjE4XFx1MDIxQVxcdTAyMUNcXHUwMjFFXFx1MDIyMFxcdTAyMjJcXHUwMjI0XFx1MDIyNlxcdTAyMjhcXHUwMjJBXFx1MDIyQ1xcdTAyMkVcXHUwMjMwXFx1MDIzMlxcdTAyM0FcXHUwMjNCXFx1MDIzRFxcdTAyM0VcXHUwMjQxXFx1MDI0My1cXHUwMjQ2XFx1MDI0OFxcdTAyNEFcXHUwMjRDXFx1MDI0RVxcdTAzNzBcXHUwMzcyXFx1MDM3NlxcdTAzN0ZcXHUwMzg2XFx1MDM4OC1cXHUwMzhBXFx1MDM4Q1xcdTAzOEVcXHUwMzhGXFx1MDM5MS1cXHUwM0ExXFx1MDNBMy1cXHUwM0FCXFx1MDNDRlxcdTAzRDItXFx1MDNENFxcdTAzRDhcXHUwM0RBXFx1MDNEQ1xcdTAzREVcXHUwM0UwXFx1MDNFMlxcdTAzRTRcXHUwM0U2XFx1MDNFOFxcdTAzRUFcXHUwM0VDXFx1MDNFRVxcdTAzRjRcXHUwM0Y3XFx1MDNGOVxcdTAzRkFcXHUwM0ZELVxcdTA0MkZcXHUwNDYwXFx1MDQ2MlxcdTA0NjRcXHUwNDY2XFx1MDQ2OFxcdTA0NkFcXHUwNDZDXFx1MDQ2RVxcdTA0NzBcXHUwNDcyXFx1MDQ3NFxcdTA0NzZcXHUwNDc4XFx1MDQ3QVxcdTA0N0NcXHUwNDdFXFx1MDQ4MFxcdTA0OEFcXHUwNDhDXFx1MDQ4RVxcdTA0OTBcXHUwNDkyXFx1MDQ5NFxcdTA0OTZcXHUwNDk4XFx1MDQ5QVxcdTA0OUNcXHUwNDlFXFx1MDRBMFxcdTA0QTJcXHUwNEE0XFx1MDRBNlxcdTA0QThcXHUwNEFBXFx1MDRBQ1xcdTA0QUVcXHUwNEIwXFx1MDRCMlxcdTA0QjRcXHUwNEI2XFx1MDRCOFxcdTA0QkFcXHUwNEJDXFx1MDRCRVxcdTA0QzBcXHUwNEMxXFx1MDRDM1xcdTA0QzVcXHUwNEM3XFx1MDRDOVxcdTA0Q0JcXHUwNENEXFx1MDREMFxcdTA0RDJcXHUwNEQ0XFx1MDRENlxcdTA0RDhcXHUwNERBXFx1MDREQ1xcdTA0REVcXHUwNEUwXFx1MDRFMlxcdTA0RTRcXHUwNEU2XFx1MDRFOFxcdTA0RUFcXHUwNEVDXFx1MDRFRVxcdTA0RjBcXHUwNEYyXFx1MDRGNFxcdTA0RjZcXHUwNEY4XFx1MDRGQVxcdTA0RkNcXHUwNEZFXFx1MDUwMFxcdTA1MDJcXHUwNTA0XFx1MDUwNlxcdTA1MDhcXHUwNTBBXFx1MDUwQ1xcdTA1MEVcXHUwNTEwXFx1MDUxMlxcdTA1MTRcXHUwNTE2XFx1MDUxOFxcdTA1MUFcXHUwNTFDXFx1MDUxRVxcdTA1MjBcXHUwNTIyXFx1MDUyNFxcdTA1MjZcXHUwNTI4XFx1MDUyQVxcdTA1MkNcXHUwNTJFXFx1MDUzMS1cXHUwNTU2XFx1MTBBMC1cXHUxMEM1XFx1MTBDN1xcdTEwQ0RcXHUxM0EwLVxcdTEzRjVcXHUxRTAwXFx1MUUwMlxcdTFFMDRcXHUxRTA2XFx1MUUwOFxcdTFFMEFcXHUxRTBDXFx1MUUwRVxcdTFFMTBcXHUxRTEyXFx1MUUxNFxcdTFFMTZcXHUxRTE4XFx1MUUxQVxcdTFFMUNcXHUxRTFFXFx1MUUyMFxcdTFFMjJcXHUxRTI0XFx1MUUyNlxcdTFFMjhcXHUxRTJBXFx1MUUyQ1xcdTFFMkVcXHUxRTMwXFx1MUUzMlxcdTFFMzRcXHUxRTM2XFx1MUUzOFxcdTFFM0FcXHUxRTNDXFx1MUUzRVxcdTFFNDBcXHUxRTQyXFx1MUU0NFxcdTFFNDZcXHUxRTQ4XFx1MUU0QVxcdTFFNENcXHUxRTRFXFx1MUU1MFxcdTFFNTJcXHUxRTU0XFx1MUU1NlxcdTFFNThcXHUxRTVBXFx1MUU1Q1xcdTFFNUVcXHUxRTYwXFx1MUU2MlxcdTFFNjRcXHUxRTY2XFx1MUU2OFxcdTFFNkFcXHUxRTZDXFx1MUU2RVxcdTFFNzBcXHUxRTcyXFx1MUU3NFxcdTFFNzZcXHUxRTc4XFx1MUU3QVxcdTFFN0NcXHUxRTdFXFx1MUU4MFxcdTFFODJcXHUxRTg0XFx1MUU4NlxcdTFFODhcXHUxRThBXFx1MUU4Q1xcdTFFOEVcXHUxRTkwXFx1MUU5MlxcdTFFOTRcXHUxRTlFXFx1MUVBMFxcdTFFQTJcXHUxRUE0XFx1MUVBNlxcdTFFQThcXHUxRUFBXFx1MUVBQ1xcdTFFQUVcXHUxRUIwXFx1MUVCMlxcdTFFQjRcXHUxRUI2XFx1MUVCOFxcdTFFQkFcXHUxRUJDXFx1MUVCRVxcdTFFQzBcXHUxRUMyXFx1MUVDNFxcdTFFQzZcXHUxRUM4XFx1MUVDQVxcdTFFQ0NcXHUxRUNFXFx1MUVEMFxcdTFFRDJcXHUxRUQ0XFx1MUVENlxcdTFFRDhcXHUxRURBXFx1MUVEQ1xcdTFFREVcXHUxRUUwXFx1MUVFMlxcdTFFRTRcXHUxRUU2XFx1MUVFOFxcdTFFRUFcXHUxRUVDXFx1MUVFRVxcdTFFRjBcXHUxRUYyXFx1MUVGNFxcdTFFRjZcXHUxRUY4XFx1MUVGQVxcdTFFRkNcXHUxRUZFXFx1MUYwOC1cXHUxRjBGXFx1MUYxOC1cXHUxRjFEXFx1MUYyOC1cXHUxRjJGXFx1MUYzOC1cXHUxRjNGXFx1MUY0OC1cXHUxRjREXFx1MUY1OVxcdTFGNUJcXHUxRjVEXFx1MUY1RlxcdTFGNjgtXFx1MUY2RlxcdTFGQjgtXFx1MUZCQlxcdTFGQzgtXFx1MUZDQlxcdTFGRDgtXFx1MUZEQlxcdTFGRTgtXFx1MUZFQ1xcdTFGRjgtXFx1MUZGQlxcdTIxMDJcXHUyMTA3XFx1MjEwQi1cXHUyMTBEXFx1MjExMC1cXHUyMTEyXFx1MjExNVxcdTIxMTktXFx1MjExRFxcdTIxMjRcXHUyMTI2XFx1MjEyOFxcdTIxMkEtXFx1MjEyRFxcdTIxMzAtXFx1MjEzM1xcdTIxM0VcXHUyMTNGXFx1MjE0NVxcdTIxNjAtXFx1MjE2RlxcdTIxODNcXHUyNEI2LVxcdTI0Q0ZcXHUyQzAwLVxcdTJDMkVcXHUyQzYwXFx1MkM2Mi1cXHUyQzY0XFx1MkM2N1xcdTJDNjlcXHUyQzZCXFx1MkM2RC1cXHUyQzcwXFx1MkM3MlxcdTJDNzVcXHUyQzdFLVxcdTJDODBcXHUyQzgyXFx1MkM4NFxcdTJDODZcXHUyQzg4XFx1MkM4QVxcdTJDOENcXHUyQzhFXFx1MkM5MFxcdTJDOTJcXHUyQzk0XFx1MkM5NlxcdTJDOThcXHUyQzlBXFx1MkM5Q1xcdTJDOUVcXHUyQ0EwXFx1MkNBMlxcdTJDQTRcXHUyQ0E2XFx1MkNBOFxcdTJDQUFcXHUyQ0FDXFx1MkNBRVxcdTJDQjBcXHUyQ0IyXFx1MkNCNFxcdTJDQjZcXHUyQ0I4XFx1MkNCQVxcdTJDQkNcXHUyQ0JFXFx1MkNDMFxcdTJDQzJcXHUyQ0M0XFx1MkNDNlxcdTJDQzhcXHUyQ0NBXFx1MkNDQ1xcdTJDQ0VcXHUyQ0QwXFx1MkNEMlxcdTJDRDRcXHUyQ0Q2XFx1MkNEOFxcdTJDREFcXHUyQ0RDXFx1MkNERVxcdTJDRTBcXHUyQ0UyXFx1MkNFQlxcdTJDRURcXHUyQ0YyXFx1QTY0MFxcdUE2NDJcXHVBNjQ0XFx1QTY0NlxcdUE2NDhcXHVBNjRBXFx1QTY0Q1xcdUE2NEVcXHVBNjUwXFx1QTY1MlxcdUE2NTRcXHVBNjU2XFx1QTY1OFxcdUE2NUFcXHVBNjVDXFx1QTY1RVxcdUE2NjBcXHVBNjYyXFx1QTY2NFxcdUE2NjZcXHVBNjY4XFx1QTY2QVxcdUE2NkNcXHVBNjgwXFx1QTY4MlxcdUE2ODRcXHVBNjg2XFx1QTY4OFxcdUE2OEFcXHVBNjhDXFx1QTY4RVxcdUE2OTBcXHVBNjkyXFx1QTY5NFxcdUE2OTZcXHVBNjk4XFx1QTY5QVxcdUE3MjJcXHVBNzI0XFx1QTcyNlxcdUE3MjhcXHVBNzJBXFx1QTcyQ1xcdUE3MkVcXHVBNzMyXFx1QTczNFxcdUE3MzZcXHVBNzM4XFx1QTczQVxcdUE3M0NcXHVBNzNFXFx1QTc0MFxcdUE3NDJcXHVBNzQ0XFx1QTc0NlxcdUE3NDhcXHVBNzRBXFx1QTc0Q1xcdUE3NEVcXHVBNzUwXFx1QTc1MlxcdUE3NTRcXHVBNzU2XFx1QTc1OFxcdUE3NUFcXHVBNzVDXFx1QTc1RVxcdUE3NjBcXHVBNzYyXFx1QTc2NFxcdUE3NjZcXHVBNzY4XFx1QTc2QVxcdUE3NkNcXHVBNzZFXFx1QTc3OVxcdUE3N0JcXHVBNzdEXFx1QTc3RVxcdUE3ODBcXHVBNzgyXFx1QTc4NFxcdUE3ODZcXHVBNzhCXFx1QTc4RFxcdUE3OTBcXHVBNzkyXFx1QTc5NlxcdUE3OThcXHVBNzlBXFx1QTc5Q1xcdUE3OUVcXHVBN0EwXFx1QTdBMlxcdUE3QTRcXHVBN0E2XFx1QTdBOFxcdUE3QUEtXFx1QTdBRVxcdUE3QjAtXFx1QTdCNFxcdUE3QjZcXHVGRjIxLVxcdUZGM0EnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAxW1xcdURDMDAtXFx1REMyN1xcdURDQjAtXFx1RENEM118XFx1RDgwM1tcXHVEQzgwLVxcdURDQjJdfFxcdUQ4MDZbXFx1RENBMC1cXHVEQ0JGXXxcXHVEODM1W1xcdURDMDAtXFx1REMxOVxcdURDMzQtXFx1REM0RFxcdURDNjgtXFx1REM4MVxcdURDOUNcXHVEQzlFXFx1REM5RlxcdURDQTJcXHVEQ0E1XFx1RENBNlxcdURDQTktXFx1RENBQ1xcdURDQUUtXFx1RENCNVxcdURDRDAtXFx1RENFOVxcdUREMDRcXHVERDA1XFx1REQwNy1cXHVERDBBXFx1REQwRC1cXHVERDE0XFx1REQxNi1cXHVERDFDXFx1REQzOFxcdUREMzlcXHVERDNCLVxcdUREM0VcXHVERDQwLVxcdURENDRcXHVERDQ2XFx1REQ0QS1cXHVERDUwXFx1REQ2Qy1cXHVERDg1XFx1RERBMC1cXHVEREI5XFx1RERENC1cXHVEREVEXFx1REUwOC1cXHVERTIxXFx1REUzQy1cXHVERTU1XFx1REU3MC1cXHVERTg5XFx1REVBOC1cXHVERUMwXFx1REVFMi1cXHVERUZBXFx1REYxQy1cXHVERjM0XFx1REY1Ni1cXHVERjZFXFx1REY5MC1cXHVERkE4XFx1REZDQV18XFx1RDgzQVtcXHVERDAwLVxcdUREMjFdfFxcdUQ4M0NbXFx1REQzMC1cXHVERDQ5XFx1REQ1MC1cXHVERDY5XFx1REQ3MC1cXHVERDg5XSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdXaGl0ZV9TcGFjZScsXG4gICAgICAgIGJtcDogJ1xceDA5LVxceDBEXFx4MjBcXHg4NVxceEEwXFx1MTY4MFxcdTIwMDAtXFx1MjAwQVxcdTIwMjhcXHUyMDI5XFx1MjAyRlxcdTIwNUZcXHUzMDAwJ1xuICAgIH1dO1xuXG4gICAgLy8gQWRkIG5vbi1nZW5lcmF0ZWQgZGF0YVxuICAgIHVuaWNvZGVEYXRhLnB1c2goe1xuICAgICAgICBuYW1lOiAnQXNzaWduZWQnLFxuICAgICAgICAvLyBTaW5jZSB0aGlzIGlzIGRlZmluZWQgYXMgdGhlIGludmVyc2Ugb2YgVW5pY29kZSBjYXRlZ29yeSBDbiAoVW5hc3NpZ25lZCksIHRoZSBVbmljb2RlXG4gICAgICAgIC8vIENhdGVnb3JpZXMgYWRkb24gaXMgcmVxdWlyZWQgdG8gdXNlIHRoaXMgcHJvcGVydHlcbiAgICAgICAgaW52ZXJzZU9mOiAnQ24nXG4gICAgfSk7XG5cbiAgICBYUmVnRXhwLmFkZFVuaWNvZGVEYXRhKHVuaWNvZGVEYXRhKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0JztcblxuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7XG4gICAgdmFsdWU6IHRydWVcbn0pO1xuXG4vKiFcbiAqIFhSZWdFeHAgVW5pY29kZSBTY3JpcHRzIDQuMC4wXG4gKiA8eHJlZ2V4cC5jb20+XG4gKiBTdGV2ZW4gTGV2aXRoYW4gKGMpIDIwMTAtMjAxNyBNSVQgTGljZW5zZVxuICogVW5pY29kZSBkYXRhIGJ5IE1hdGhpYXMgQnluZW5zIDxtYXRoaWFzYnluZW5zLmJlPlxuICovXG5cbmV4cG9ydHMuZGVmYXVsdCA9IGZ1bmN0aW9uIChYUmVnRXhwKSB7XG5cbiAgICAvKipcbiAgICAgKiBBZGRzIHN1cHBvcnQgZm9yIGFsbCBVbmljb2RlIHNjcmlwdHMuIEUuZy4sIGBcXHB7TGF0aW59YC4gVG9rZW4gbmFtZXMgYXJlIGNhc2UgaW5zZW5zaXRpdmUsXG4gICAgICogYW5kIGFueSBzcGFjZXMsIGh5cGhlbnMsIGFuZCB1bmRlcnNjb3JlcyBhcmUgaWdub3JlZC5cbiAgICAgKlxuICAgICAqIFVzZXMgVW5pY29kZSA5LjAuMC5cbiAgICAgKlxuICAgICAqIEByZXF1aXJlcyBYUmVnRXhwLCBVbmljb2RlIEJhc2VcbiAgICAgKi9cblxuICAgIGlmICghWFJlZ0V4cC5hZGRVbmljb2RlRGF0YSkge1xuICAgICAgICB0aHJvdyBuZXcgUmVmZXJlbmNlRXJyb3IoJ1VuaWNvZGUgQmFzZSBtdXN0IGJlIGxvYWRlZCBiZWZvcmUgVW5pY29kZSBTY3JpcHRzJyk7XG4gICAgfVxuXG4gICAgWFJlZ0V4cC5hZGRVbmljb2RlRGF0YShbe1xuICAgICAgICBuYW1lOiAnQWRsYW0nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODNBW1xcdUREMDAtXFx1REQ0QVxcdURENTAtXFx1REQ1OVxcdURENUVcXHVERDVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBaG9tJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNVtcXHVERjAwLVxcdURGMTlcXHVERjFELVxcdURGMkJcXHVERjMwLVxcdURGM0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0FuYXRvbGlhbl9IaWVyb2dseXBocycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MTFbXFx1REMwMC1cXHVERTQ2XSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBcmFiaWMnLFxuICAgICAgICBibXA6ICdcXHUwNjAwLVxcdTA2MDRcXHUwNjA2LVxcdTA2MEJcXHUwNjBELVxcdTA2MUFcXHUwNjFFXFx1MDYyMC1cXHUwNjNGXFx1MDY0MS1cXHUwNjRBXFx1MDY1Ni1cXHUwNjZGXFx1MDY3MS1cXHUwNkRDXFx1MDZERS1cXHUwNkZGXFx1MDc1MC1cXHUwNzdGXFx1MDhBMC1cXHUwOEI0XFx1MDhCNi1cXHUwOEJEXFx1MDhENC1cXHUwOEUxXFx1MDhFMy1cXHUwOEZGXFx1RkI1MC1cXHVGQkMxXFx1RkJEMy1cXHVGRDNEXFx1RkQ1MC1cXHVGRDhGXFx1RkQ5Mi1cXHVGREM3XFx1RkRGMC1cXHVGREZEXFx1RkU3MC1cXHVGRTc0XFx1RkU3Ni1cXHVGRUZDJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwM1tcXHVERTYwLVxcdURFN0VdfFxcdUQ4M0JbXFx1REUwMC1cXHVERTAzXFx1REUwNS1cXHVERTFGXFx1REUyMVxcdURFMjJcXHVERTI0XFx1REUyN1xcdURFMjktXFx1REUzMlxcdURFMzQtXFx1REUzN1xcdURFMzlcXHVERTNCXFx1REU0MlxcdURFNDdcXHVERTQ5XFx1REU0QlxcdURFNEQtXFx1REU0RlxcdURFNTFcXHVERTUyXFx1REU1NFxcdURFNTdcXHVERTU5XFx1REU1QlxcdURFNURcXHVERTVGXFx1REU2MVxcdURFNjJcXHVERTY0XFx1REU2Ny1cXHVERTZBXFx1REU2Qy1cXHVERTcyXFx1REU3NC1cXHVERTc3XFx1REU3OS1cXHVERTdDXFx1REU3RVxcdURFODAtXFx1REU4OVxcdURFOEItXFx1REU5QlxcdURFQTEtXFx1REVBM1xcdURFQTUtXFx1REVBOVxcdURFQUItXFx1REVCQlxcdURFRjBcXHVERUYxXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBcm1lbmlhbicsXG4gICAgICAgIGJtcDogJ1xcdTA1MzEtXFx1MDU1NlxcdTA1NTktXFx1MDU1RlxcdTA1NjEtXFx1MDU4N1xcdTA1OEFcXHUwNThELVxcdTA1OEZcXHVGQjEzLVxcdUZCMTcnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQXZlc3RhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REYwMC1cXHVERjM1XFx1REYzOS1cXHVERjNGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCYWxpbmVzZScsXG4gICAgICAgIGJtcDogJ1xcdTFCMDAtXFx1MUI0QlxcdTFCNTAtXFx1MUI3QydcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCYW11bScsXG4gICAgICAgIGJtcDogJ1xcdUE2QTAtXFx1QTZGNycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MUFbXFx1REMwMC1cXHVERTM4XSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCYXNzYV9WYWgnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODFBW1xcdURFRDAtXFx1REVFRFxcdURFRjAtXFx1REVGNV0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQmF0YWsnLFxuICAgICAgICBibXA6ICdcXHUxQkMwLVxcdTFCRjNcXHUxQkZDLVxcdTFCRkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQmVuZ2FsaScsXG4gICAgICAgIGJtcDogJ1xcdTA5ODAtXFx1MDk4M1xcdTA5ODUtXFx1MDk4Q1xcdTA5OEZcXHUwOTkwXFx1MDk5My1cXHUwOUE4XFx1MDlBQS1cXHUwOUIwXFx1MDlCMlxcdTA5QjYtXFx1MDlCOVxcdTA5QkMtXFx1MDlDNFxcdTA5QzdcXHUwOUM4XFx1MDlDQi1cXHUwOUNFXFx1MDlEN1xcdTA5RENcXHUwOUREXFx1MDlERi1cXHUwOUUzXFx1MDlFNi1cXHUwOUZCJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0JoYWlrc3VraScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDdbXFx1REMwMC1cXHVEQzA4XFx1REMwQS1cXHVEQzM2XFx1REMzOC1cXHVEQzQ1XFx1REM1MC1cXHVEQzZDXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCb3BvbW9mbycsXG4gICAgICAgIGJtcDogJ1xcdTAyRUFcXHUwMkVCXFx1MzEwNS1cXHUzMTJEXFx1MzFBMC1cXHUzMUJBJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0JyYWhtaScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1REMwMC1cXHVEQzREXFx1REM1Mi1cXHVEQzZGXFx1REM3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQnJhaWxsZScsXG4gICAgICAgIGJtcDogJ1xcdTI4MDAtXFx1MjhGRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCdWdpbmVzZScsXG4gICAgICAgIGJtcDogJ1xcdTFBMDAtXFx1MUExQlxcdTFBMUVcXHUxQTFGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0J1aGlkJyxcbiAgICAgICAgYm1wOiAnXFx1MTc0MC1cXHUxNzUzJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NhbmFkaWFuX0Fib3JpZ2luYWwnLFxuICAgICAgICBibXA6ICdcXHUxNDAwLVxcdTE2N0ZcXHUxOEIwLVxcdTE4RjUnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQ2FyaWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERUEwLVxcdURFRDBdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NhdWNhc2lhbl9BbGJhbmlhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDFbXFx1REQzMC1cXHVERDYzXFx1REQ2Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQ2hha21hJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVERDAwLVxcdUREMzRcXHVERDM2LVxcdURENDNdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NoYW0nLFxuICAgICAgICBibXA6ICdcXHVBQTAwLVxcdUFBMzZcXHVBQTQwLVxcdUFBNERcXHVBQTUwLVxcdUFBNTlcXHVBQTVDLVxcdUFBNUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQ2hlcm9rZWUnLFxuICAgICAgICBibXA6ICdcXHUxM0EwLVxcdTEzRjVcXHUxM0Y4LVxcdTEzRkRcXHVBQjcwLVxcdUFCQkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQ29tbW9uJyxcbiAgICAgICAgYm1wOiAnXFwwLVxceDQwXFxcXHg1Qi1cXHg2MFxcXFx4N0ItXFx4QTlcXHhBQi1cXHhCOVxceEJCLVxceEJGXFx4RDdcXHhGN1xcdTAyQjktXFx1MDJERlxcdTAyRTUtXFx1MDJFOVxcdTAyRUMtXFx1MDJGRlxcdTAzNzRcXHUwMzdFXFx1MDM4NVxcdTAzODdcXHUwNTg5XFx1MDYwNVxcdTA2MENcXHUwNjFCXFx1MDYxQ1xcdTA2MUZcXHUwNjQwXFx1MDZERFxcdTA4RTJcXHUwOTY0XFx1MDk2NVxcdTBFM0ZcXHUwRkQ1LVxcdTBGRDhcXHUxMEZCXFx1MTZFQi1cXHUxNkVEXFx1MTczNVxcdTE3MzZcXHUxODAyXFx1MTgwM1xcdTE4MDVcXHUxQ0QzXFx1MUNFMVxcdTFDRTktXFx1MUNFQ1xcdTFDRUUtXFx1MUNGM1xcdTFDRjVcXHUxQ0Y2XFx1MjAwMC1cXHUyMDBCXFx1MjAwRS1cXHUyMDY0XFx1MjA2Ni1cXHUyMDcwXFx1MjA3NC1cXHUyMDdFXFx1MjA4MC1cXHUyMDhFXFx1MjBBMC1cXHUyMEJFXFx1MjEwMC1cXHUyMTI1XFx1MjEyNy1cXHUyMTI5XFx1MjEyQy1cXHUyMTMxXFx1MjEzMy1cXHUyMTREXFx1MjE0Ri1cXHUyMTVGXFx1MjE4OS1cXHUyMThCXFx1MjE5MC1cXHUyM0ZFXFx1MjQwMC1cXHUyNDI2XFx1MjQ0MC1cXHUyNDRBXFx1MjQ2MC1cXHUyN0ZGXFx1MjkwMC1cXHUyQjczXFx1MkI3Ni1cXHUyQjk1XFx1MkI5OC1cXHUyQkI5XFx1MkJCRC1cXHUyQkM4XFx1MkJDQS1cXHUyQkQxXFx1MkJFQy1cXHUyQkVGXFx1MkUwMC1cXHUyRTQ0XFx1MkZGMC1cXHUyRkZCXFx1MzAwMC1cXHUzMDA0XFx1MzAwNlxcdTMwMDgtXFx1MzAyMFxcdTMwMzAtXFx1MzAzN1xcdTMwM0MtXFx1MzAzRlxcdTMwOUJcXHUzMDlDXFx1MzBBMFxcdTMwRkJcXHUzMEZDXFx1MzE5MC1cXHUzMTlGXFx1MzFDMC1cXHUzMUUzXFx1MzIyMC1cXHUzMjVGXFx1MzI3Ri1cXHUzMkNGXFx1MzM1OC1cXHUzM0ZGXFx1NERDMC1cXHU0REZGXFx1QTcwMC1cXHVBNzIxXFx1QTc4OC1cXHVBNzhBXFx1QTgzMC1cXHVBODM5XFx1QTkyRVxcdUE5Q0ZcXHVBQjVCXFx1RkQzRVxcdUZEM0ZcXHVGRTEwLVxcdUZFMTlcXHVGRTMwLVxcdUZFNTJcXHVGRTU0LVxcdUZFNjZcXHVGRTY4LVxcdUZFNkJcXHVGRUZGXFx1RkYwMS1cXHVGRjIwXFx1RkYzQi1cXHVGRjQwXFx1RkY1Qi1cXHVGRjY1XFx1RkY3MFxcdUZGOUVcXHVGRjlGXFx1RkZFMC1cXHVGRkU2XFx1RkZFOC1cXHVGRkVFXFx1RkZGOS1cXHVGRkZEJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDAwLVxcdUREMDJcXHVERDA3LVxcdUREMzNcXHVERDM3LVxcdUREM0ZcXHVERDkwLVxcdUREOUJcXHVEREQwLVxcdURERkNcXHVERUUxLVxcdURFRkJdfFxcdUQ4MkZbXFx1RENBMC1cXHVEQ0EzXXxcXHVEODM0W1xcdURDMDAtXFx1RENGNVxcdUREMDAtXFx1REQyNlxcdUREMjktXFx1REQ2NlxcdURENkEtXFx1REQ3QVxcdUREODNcXHVERDg0XFx1REQ4Qy1cXHVEREE5XFx1RERBRS1cXHVEREU4XFx1REYwMC1cXHVERjU2XFx1REY2MC1cXHVERjcxXXxcXHVEODM1W1xcdURDMDAtXFx1REM1NFxcdURDNTYtXFx1REM5Q1xcdURDOUVcXHVEQzlGXFx1RENBMlxcdURDQTVcXHVEQ0E2XFx1RENBOS1cXHVEQ0FDXFx1RENBRS1cXHVEQ0I5XFx1RENCQlxcdURDQkQtXFx1RENDM1xcdURDQzUtXFx1REQwNVxcdUREMDctXFx1REQwQVxcdUREMEQtXFx1REQxNFxcdUREMTYtXFx1REQxQ1xcdUREMUUtXFx1REQzOVxcdUREM0ItXFx1REQzRVxcdURENDAtXFx1REQ0NFxcdURENDZcXHVERDRBLVxcdURENTBcXHVERDUyLVxcdURFQTVcXHVERUE4LVxcdURGQ0JcXHVERkNFLVxcdURGRkZdfFxcdUQ4M0NbXFx1REMwMC1cXHVEQzJCXFx1REMzMC1cXHVEQzkzXFx1RENBMC1cXHVEQ0FFXFx1RENCMS1cXHVEQ0JGXFx1RENDMS1cXHVEQ0NGXFx1RENEMS1cXHVEQ0Y1XFx1REQwMC1cXHVERDBDXFx1REQxMC1cXHVERDJFXFx1REQzMC1cXHVERDZCXFx1REQ3MC1cXHVEREFDXFx1RERFNi1cXHVEREZGXFx1REUwMVxcdURFMDJcXHVERTEwLVxcdURFM0JcXHVERTQwLVxcdURFNDhcXHVERTUwXFx1REU1MVxcdURGMDAtXFx1REZGRl18XFx1RDgzRFtcXHVEQzAwLVxcdURFRDJcXHVERUUwLVxcdURFRUNcXHVERUYwLVxcdURFRjZcXHVERjAwLVxcdURGNzNcXHVERjgwLVxcdURGRDRdfFxcdUQ4M0VbXFx1REMwMC1cXHVEQzBCXFx1REMxMC1cXHVEQzQ3XFx1REM1MC1cXHVEQzU5XFx1REM2MC1cXHVEQzg3XFx1REM5MC1cXHVEQ0FEXFx1REQxMC1cXHVERDFFXFx1REQyMC1cXHVERDI3XFx1REQzMFxcdUREMzMtXFx1REQzRVxcdURENDAtXFx1REQ0QlxcdURENTAtXFx1REQ1RVxcdUREODAtXFx1REQ5MVxcdUREQzBdfFxcdURCNDBbXFx1REMwMVxcdURDMjAtXFx1REM3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQ29wdGljJyxcbiAgICAgICAgYm1wOiAnXFx1MDNFMi1cXHUwM0VGXFx1MkM4MC1cXHUyQ0YzXFx1MkNGOS1cXHUyQ0ZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0N1bmVpZm9ybScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDhbXFx1REMwMC1cXHVERjk5XXxcXHVEODA5W1xcdURDMDAtXFx1REM2RVxcdURDNzAtXFx1REM3NFxcdURDODAtXFx1REQ0M10nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnQ3lwcmlvdCcsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REMwMC1cXHVEQzA1XFx1REMwOFxcdURDMEEtXFx1REMzNVxcdURDMzdcXHVEQzM4XFx1REMzQ1xcdURDM0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0N5cmlsbGljJyxcbiAgICAgICAgYm1wOiAnXFx1MDQwMC1cXHUwNDg0XFx1MDQ4Ny1cXHUwNTJGXFx1MUM4MC1cXHUxQzg4XFx1MUQyQlxcdTFENzhcXHUyREUwLVxcdTJERkZcXHVBNjQwLVxcdUE2OUZcXHVGRTJFXFx1RkUyRidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdEZXNlcmV0JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMVtcXHVEQzAwLVxcdURDNEZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0RldmFuYWdhcmknLFxuICAgICAgICBibXA6ICdcXHUwOTAwLVxcdTA5NTBcXHUwOTUzLVxcdTA5NjNcXHUwOTY2LVxcdTA5N0ZcXHVBOEUwLVxcdUE4RkQnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnRHVwbG95YW4nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODJGW1xcdURDMDAtXFx1REM2QVxcdURDNzAtXFx1REM3Q1xcdURDODAtXFx1REM4OFxcdURDOTAtXFx1REM5OVxcdURDOUMtXFx1REM5Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnRWd5cHRpYW5fSGllcm9nbHlwaHMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODBDW1xcdURDMDAtXFx1REZGRl18XFx1RDgwRFtcXHVEQzAwLVxcdURDMkVdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0VsYmFzYW4nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAxW1xcdUREMDAtXFx1REQyN10nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnRXRoaW9waWMnLFxuICAgICAgICBibXA6ICdcXHUxMjAwLVxcdTEyNDhcXHUxMjRBLVxcdTEyNERcXHUxMjUwLVxcdTEyNTZcXHUxMjU4XFx1MTI1QS1cXHUxMjVEXFx1MTI2MC1cXHUxMjg4XFx1MTI4QS1cXHUxMjhEXFx1MTI5MC1cXHUxMkIwXFx1MTJCMi1cXHUxMkI1XFx1MTJCOC1cXHUxMkJFXFx1MTJDMFxcdTEyQzItXFx1MTJDNVxcdTEyQzgtXFx1MTJENlxcdTEyRDgtXFx1MTMxMFxcdTEzMTItXFx1MTMxNVxcdTEzMTgtXFx1MTM1QVxcdTEzNUQtXFx1MTM3Q1xcdTEzODAtXFx1MTM5OVxcdTJEODAtXFx1MkQ5NlxcdTJEQTAtXFx1MkRBNlxcdTJEQTgtXFx1MkRBRVxcdTJEQjAtXFx1MkRCNlxcdTJEQjgtXFx1MkRCRVxcdTJEQzAtXFx1MkRDNlxcdTJEQzgtXFx1MkRDRVxcdTJERDAtXFx1MkRENlxcdTJERDgtXFx1MkRERVxcdUFCMDEtXFx1QUIwNlxcdUFCMDktXFx1QUIwRVxcdUFCMTEtXFx1QUIxNlxcdUFCMjAtXFx1QUIyNlxcdUFCMjgtXFx1QUIyRSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdHZW9yZ2lhbicsXG4gICAgICAgIGJtcDogJ1xcdTEwQTAtXFx1MTBDNVxcdTEwQzdcXHUxMENEXFx1MTBEMC1cXHUxMEZBXFx1MTBGQy1cXHUxMEZGXFx1MkQwMC1cXHUyRDI1XFx1MkQyN1xcdTJEMkQnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnR2xhZ29saXRpYycsXG4gICAgICAgIGJtcDogJ1xcdTJDMDAtXFx1MkMyRVxcdTJDMzAtXFx1MkM1RScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MzhbXFx1REMwMC1cXHVEQzA2XFx1REMwOC1cXHVEQzE4XFx1REMxQi1cXHVEQzIxXFx1REMyM1xcdURDMjRcXHVEQzI2LVxcdURDMkFdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0dvdGhpYycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REYzMC1cXHVERjRBXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdHcmFudGhhJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVERjAwLVxcdURGMDNcXHVERjA1LVxcdURGMENcXHVERjBGXFx1REYxMFxcdURGMTMtXFx1REYyOFxcdURGMkEtXFx1REYzMFxcdURGMzJcXHVERjMzXFx1REYzNS1cXHVERjM5XFx1REYzQy1cXHVERjQ0XFx1REY0N1xcdURGNDhcXHVERjRCLVxcdURGNERcXHVERjUwXFx1REY1N1xcdURGNUQtXFx1REY2M1xcdURGNjYtXFx1REY2Q1xcdURGNzAtXFx1REY3NF0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnR3JlZWsnLFxuICAgICAgICBibXA6ICdcXHUwMzcwLVxcdTAzNzNcXHUwMzc1LVxcdTAzNzdcXHUwMzdBLVxcdTAzN0RcXHUwMzdGXFx1MDM4NFxcdTAzODZcXHUwMzg4LVxcdTAzOEFcXHUwMzhDXFx1MDM4RS1cXHUwM0ExXFx1MDNBMy1cXHUwM0UxXFx1MDNGMC1cXHUwM0ZGXFx1MUQyNi1cXHUxRDJBXFx1MUQ1RC1cXHUxRDYxXFx1MUQ2Ni1cXHUxRDZBXFx1MURCRlxcdTFGMDAtXFx1MUYxNVxcdTFGMTgtXFx1MUYxRFxcdTFGMjAtXFx1MUY0NVxcdTFGNDgtXFx1MUY0RFxcdTFGNTAtXFx1MUY1N1xcdTFGNTlcXHUxRjVCXFx1MUY1RFxcdTFGNUYtXFx1MUY3RFxcdTFGODAtXFx1MUZCNFxcdTFGQjYtXFx1MUZDNFxcdTFGQzYtXFx1MUZEM1xcdTFGRDYtXFx1MUZEQlxcdTFGREQtXFx1MUZFRlxcdTFGRjItXFx1MUZGNFxcdTFGRjYtXFx1MUZGRVxcdTIxMjZcXHVBQjY1JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERDQwLVxcdUREOEVcXHVEREEwXXxcXHVEODM0W1xcdURFMDAtXFx1REU0NV0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnR3VqYXJhdGknLFxuICAgICAgICBibXA6ICdcXHUwQTgxLVxcdTBBODNcXHUwQTg1LVxcdTBBOERcXHUwQThGLVxcdTBBOTFcXHUwQTkzLVxcdTBBQThcXHUwQUFBLVxcdTBBQjBcXHUwQUIyXFx1MEFCM1xcdTBBQjUtXFx1MEFCOVxcdTBBQkMtXFx1MEFDNVxcdTBBQzctXFx1MEFDOVxcdTBBQ0ItXFx1MEFDRFxcdTBBRDBcXHUwQUUwLVxcdTBBRTNcXHUwQUU2LVxcdTBBRjFcXHUwQUY5J1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0d1cm11a2hpJyxcbiAgICAgICAgYm1wOiAnXFx1MEEwMS1cXHUwQTAzXFx1MEEwNS1cXHUwQTBBXFx1MEEwRlxcdTBBMTBcXHUwQTEzLVxcdTBBMjhcXHUwQTJBLVxcdTBBMzBcXHUwQTMyXFx1MEEzM1xcdTBBMzVcXHUwQTM2XFx1MEEzOFxcdTBBMzlcXHUwQTNDXFx1MEEzRS1cXHUwQTQyXFx1MEE0N1xcdTBBNDhcXHUwQTRCLVxcdTBBNERcXHUwQTUxXFx1MEE1OS1cXHUwQTVDXFx1MEE1RVxcdTBBNjYtXFx1MEE3NSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdIYW4nLFxuICAgICAgICBibXA6ICdcXHUyRTgwLVxcdTJFOTlcXHUyRTlCLVxcdTJFRjNcXHUyRjAwLVxcdTJGRDVcXHUzMDA1XFx1MzAwN1xcdTMwMjEtXFx1MzAyOVxcdTMwMzgtXFx1MzAzQlxcdTM0MDAtXFx1NERCNVxcdTRFMDAtXFx1OUZENVxcdUY5MDAtXFx1RkE2RFxcdUZBNzAtXFx1RkFEOScsXG4gICAgICAgIGFzdHJhbDogJ1tcXHVEODQwLVxcdUQ4NjhcXHVEODZBLVxcdUQ4NkNcXHVEODZGLVxcdUQ4NzJdW1xcdURDMDAtXFx1REZGRl18XFx1RDg2OVtcXHVEQzAwLVxcdURFRDZcXHVERjAwLVxcdURGRkZdfFxcdUQ4NkRbXFx1REMwMC1cXHVERjM0XFx1REY0MC1cXHVERkZGXXxcXHVEODZFW1xcdURDMDAtXFx1REMxRFxcdURDMjAtXFx1REZGRl18XFx1RDg3M1tcXHVEQzAwLVxcdURFQTFdfFxcdUQ4N0VbXFx1REMwMC1cXHVERTFEXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdIYW5ndWwnLFxuICAgICAgICBibXA6ICdcXHUxMTAwLVxcdTExRkZcXHUzMDJFXFx1MzAyRlxcdTMxMzEtXFx1MzE4RVxcdTMyMDAtXFx1MzIxRVxcdTMyNjAtXFx1MzI3RVxcdUE5NjAtXFx1QTk3Q1xcdUFDMDAtXFx1RDdBM1xcdUQ3QjAtXFx1RDdDNlxcdUQ3Q0ItXFx1RDdGQlxcdUZGQTAtXFx1RkZCRVxcdUZGQzItXFx1RkZDN1xcdUZGQ0EtXFx1RkZDRlxcdUZGRDItXFx1RkZEN1xcdUZGREEtXFx1RkZEQydcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdIYW51bm9vJyxcbiAgICAgICAgYm1wOiAnXFx1MTcyMC1cXHUxNzM0J1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0hhdHJhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1RENFMC1cXHVEQ0YyXFx1RENGNFxcdURDRjVcXHVEQ0ZCLVxcdURDRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0hlYnJldycsXG4gICAgICAgIGJtcDogJ1xcdTA1OTEtXFx1MDVDN1xcdTA1RDAtXFx1MDVFQVxcdTA1RjAtXFx1MDVGNFxcdUZCMUQtXFx1RkIzNlxcdUZCMzgtXFx1RkIzQ1xcdUZCM0VcXHVGQjQwXFx1RkI0MVxcdUZCNDNcXHVGQjQ0XFx1RkI0Ni1cXHVGQjRGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0hpcmFnYW5hJyxcbiAgICAgICAgYm1wOiAnXFx1MzA0MS1cXHUzMDk2XFx1MzA5RC1cXHUzMDlGJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgyQ1xcdURDMDF8XFx1RDgzQ1xcdURFMDAnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW1wZXJpYWxfQXJhbWFpYycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REM0MC1cXHVEQzU1XFx1REM1Ny1cXHVEQzVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbmhlcml0ZWQnLFxuICAgICAgICBibXA6ICdcXHUwMzAwLVxcdTAzNkZcXHUwNDg1XFx1MDQ4NlxcdTA2NEItXFx1MDY1NVxcdTA2NzBcXHUwOTUxXFx1MDk1MlxcdTFBQjAtXFx1MUFCRVxcdTFDRDAtXFx1MUNEMlxcdTFDRDQtXFx1MUNFMFxcdTFDRTItXFx1MUNFOFxcdTFDRURcXHUxQ0Y0XFx1MUNGOFxcdTFDRjlcXHUxREMwLVxcdTFERjVcXHUxREZCLVxcdTFERkZcXHUyMDBDXFx1MjAwRFxcdTIwRDAtXFx1MjBGMFxcdTMwMkEtXFx1MzAyRFxcdTMwOTlcXHUzMDlBXFx1RkUwMC1cXHVGRTBGXFx1RkUyMC1cXHVGRTJEJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVEREZEXFx1REVFMF18XFx1RDgzNFtcXHVERDY3LVxcdURENjlcXHVERDdCLVxcdUREODJcXHVERDg1LVxcdUREOEJcXHVEREFBLVxcdUREQURdfFxcdURCNDBbXFx1REQwMC1cXHVEREVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJbnNjcmlwdGlvbmFsX1BhaGxhdmknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAyW1xcdURGNjAtXFx1REY3MlxcdURGNzgtXFx1REY3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnSW5zY3JpcHRpb25hbF9QYXJ0aGlhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REY0MC1cXHVERjU1XFx1REY1OC1cXHVERjVGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdKYXZhbmVzZScsXG4gICAgICAgIGJtcDogJ1xcdUE5ODAtXFx1QTlDRFxcdUE5RDAtXFx1QTlEOVxcdUE5REVcXHVBOURGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0thaXRoaScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1REM4MC1cXHVEQ0MxXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdLYW5uYWRhJyxcbiAgICAgICAgYm1wOiAnXFx1MEM4MC1cXHUwQzgzXFx1MEM4NS1cXHUwQzhDXFx1MEM4RS1cXHUwQzkwXFx1MEM5Mi1cXHUwQ0E4XFx1MENBQS1cXHUwQ0IzXFx1MENCNS1cXHUwQ0I5XFx1MENCQy1cXHUwQ0M0XFx1MENDNi1cXHUwQ0M4XFx1MENDQS1cXHUwQ0NEXFx1MENENVxcdTBDRDZcXHUwQ0RFXFx1MENFMC1cXHUwQ0UzXFx1MENFNi1cXHUwQ0VGXFx1MENGMVxcdTBDRjInXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnS2F0YWthbmEnLFxuICAgICAgICBibXA6ICdcXHUzMEExLVxcdTMwRkFcXHUzMEZELVxcdTMwRkZcXHUzMUYwLVxcdTMxRkZcXHUzMkQwLVxcdTMyRkVcXHUzMzAwLVxcdTMzNTdcXHVGRjY2LVxcdUZGNkZcXHVGRjcxLVxcdUZGOUQnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODJDXFx1REMwMCdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdLYXlhaF9MaScsXG4gICAgICAgIGJtcDogJ1xcdUE5MDAtXFx1QTkyRFxcdUE5MkYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnS2hhcm9zaHRoaScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REUwMC1cXHVERTAzXFx1REUwNVxcdURFMDZcXHVERTBDLVxcdURFMTNcXHVERTE1LVxcdURFMTdcXHVERTE5LVxcdURFMzNcXHVERTM4LVxcdURFM0FcXHVERTNGLVxcdURFNDdcXHVERTUwLVxcdURFNThdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0tobWVyJyxcbiAgICAgICAgYm1wOiAnXFx1MTc4MC1cXHUxN0REXFx1MTdFMC1cXHUxN0U5XFx1MTdGMC1cXHUxN0Y5XFx1MTlFMC1cXHUxOUZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0tob2praScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1REUwMC1cXHVERTExXFx1REUxMy1cXHVERTNFXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdLaHVkYXdhZGknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA0W1xcdURFQjAtXFx1REVFQVxcdURFRjAtXFx1REVGOV0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTGFvJyxcbiAgICAgICAgYm1wOiAnXFx1MEU4MVxcdTBFODJcXHUwRTg0XFx1MEU4N1xcdTBFODhcXHUwRThBXFx1MEU4RFxcdTBFOTQtXFx1MEU5N1xcdTBFOTktXFx1MEU5RlxcdTBFQTEtXFx1MEVBM1xcdTBFQTVcXHUwRUE3XFx1MEVBQVxcdTBFQUJcXHUwRUFELVxcdTBFQjlcXHUwRUJCLVxcdTBFQkRcXHUwRUMwLVxcdTBFQzRcXHUwRUM2XFx1MEVDOC1cXHUwRUNEXFx1MEVEMC1cXHUwRUQ5XFx1MEVEQy1cXHUwRURGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0xhdGluJyxcbiAgICAgICAgYm1wOiAnQS1aYS16XFx4QUFcXHhCQVxceEMwLVxceEQ2XFx4RDgtXFx4RjZcXHhGOC1cXHUwMkI4XFx1MDJFMC1cXHUwMkU0XFx1MUQwMC1cXHUxRDI1XFx1MUQyQy1cXHUxRDVDXFx1MUQ2Mi1cXHUxRDY1XFx1MUQ2Qi1cXHUxRDc3XFx1MUQ3OS1cXHUxREJFXFx1MUUwMC1cXHUxRUZGXFx1MjA3MVxcdTIwN0ZcXHUyMDkwLVxcdTIwOUNcXHUyMTJBXFx1MjEyQlxcdTIxMzJcXHUyMTRFXFx1MjE2MC1cXHUyMTg4XFx1MkM2MC1cXHUyQzdGXFx1QTcyMi1cXHVBNzg3XFx1QTc4Qi1cXHVBN0FFXFx1QTdCMC1cXHVBN0I3XFx1QTdGNy1cXHVBN0ZGXFx1QUIzMC1cXHVBQjVBXFx1QUI1Qy1cXHVBQjY0XFx1RkIwMC1cXHVGQjA2XFx1RkYyMS1cXHVGRjNBXFx1RkY0MS1cXHVGRjVBJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0xlcGNoYScsXG4gICAgICAgIGJtcDogJ1xcdTFDMDAtXFx1MUMzN1xcdTFDM0ItXFx1MUM0OVxcdTFDNEQtXFx1MUM0RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMaW1idScsXG4gICAgICAgIGJtcDogJ1xcdTE5MDAtXFx1MTkxRVxcdTE5MjAtXFx1MTkyQlxcdTE5MzAtXFx1MTkzQlxcdTE5NDBcXHUxOTQ0LVxcdTE5NEYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTGluZWFyX0EnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAxW1xcdURFMDAtXFx1REYzNlxcdURGNDAtXFx1REY1NVxcdURGNjAtXFx1REY2N10nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTGluZWFyX0InLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdURDMDAtXFx1REMwQlxcdURDMEQtXFx1REMyNlxcdURDMjgtXFx1REMzQVxcdURDM0NcXHVEQzNEXFx1REMzRi1cXHVEQzREXFx1REM1MC1cXHVEQzVEXFx1REM4MC1cXHVEQ0ZBXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMaXN1JyxcbiAgICAgICAgYm1wOiAnXFx1QTREMC1cXHVBNEZGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0x5Y2lhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REU4MC1cXHVERTlDXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMeWRpYW4nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAyW1xcdUREMjAtXFx1REQzOVxcdUREM0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01haGFqYW5pJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVERDUwLVxcdURENzZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01hbGF5YWxhbScsXG4gICAgICAgIGJtcDogJ1xcdTBEMDEtXFx1MEQwM1xcdTBEMDUtXFx1MEQwQ1xcdTBEMEUtXFx1MEQxMFxcdTBEMTItXFx1MEQzQVxcdTBEM0QtXFx1MEQ0NFxcdTBENDYtXFx1MEQ0OFxcdTBENEEtXFx1MEQ0RlxcdTBENTQtXFx1MEQ2M1xcdTBENjYtXFx1MEQ3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYW5kYWljJyxcbiAgICAgICAgYm1wOiAnXFx1MDg0MC1cXHUwODVCXFx1MDg1RSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYW5pY2hhZWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVERUMwLVxcdURFRTZcXHVERUVCLVxcdURFRjZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01hcmNoZW4nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA3W1xcdURDNzAtXFx1REM4RlxcdURDOTItXFx1RENBN1xcdURDQTktXFx1RENCNl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTWVldGVpX01heWVrJyxcbiAgICAgICAgYm1wOiAnXFx1QUFFMC1cXHVBQUY2XFx1QUJDMC1cXHVBQkVEXFx1QUJGMC1cXHVBQkY5J1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01lbmRlX0tpa2FrdWknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODNBW1xcdURDMDAtXFx1RENDNFxcdURDQzctXFx1RENENl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTWVyb2l0aWNfQ3Vyc2l2ZScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1RERBMC1cXHVEREI3XFx1RERCQy1cXHVERENGXFx1REREMi1cXHVEREZGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNZXJvaXRpY19IaWVyb2dseXBocycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REQ4MC1cXHVERDlGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNaWFvJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgxQltcXHVERjAwLVxcdURGNDRcXHVERjUwLVxcdURGN0VcXHVERjhGLVxcdURGOUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01vZGknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA1W1xcdURFMDAtXFx1REU0NFxcdURFNTAtXFx1REU1OV0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTW9uZ29saWFuJyxcbiAgICAgICAgYm1wOiAnXFx1MTgwMFxcdTE4MDFcXHUxODA0XFx1MTgwNi1cXHUxODBFXFx1MTgxMC1cXHUxODE5XFx1MTgyMC1cXHUxODc3XFx1MTg4MC1cXHUxOEFBJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNVtcXHVERTYwLVxcdURFNkNdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01ybycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MUFbXFx1REU0MC1cXHVERTVFXFx1REU2MC1cXHVERTY5XFx1REU2RVxcdURFNkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ011bHRhbmknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA0W1xcdURFODAtXFx1REU4NlxcdURFODhcXHVERThBLVxcdURFOERcXHVERThGLVxcdURFOURcXHVERTlGLVxcdURFQTldJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ015YW5tYXInLFxuICAgICAgICBibXA6ICdcXHUxMDAwLVxcdTEwOUZcXHVBOUUwLVxcdUE5RkVcXHVBQTYwLVxcdUFBN0YnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTmFiYXRhZWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVEQzgwLVxcdURDOUVcXHVEQ0E3LVxcdURDQUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ05ld19UYWlfTHVlJyxcbiAgICAgICAgYm1wOiAnXFx1MTk4MC1cXHUxOUFCXFx1MTlCMC1cXHUxOUM5XFx1MTlEMC1cXHUxOURBXFx1MTlERVxcdTE5REYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnTmV3YScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDVbXFx1REMwMC1cXHVEQzU5XFx1REM1QlxcdURDNURdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ05rbycsXG4gICAgICAgIGJtcDogJ1xcdTA3QzAtXFx1MDdGQSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPZ2hhbScsXG4gICAgICAgIGJtcDogJ1xcdTE2ODAtXFx1MTY5QydcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPbF9DaGlraScsXG4gICAgICAgIGJtcDogJ1xcdTFDNTAtXFx1MUM3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPbGRfSHVuZ2FyaWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwM1tcXHVEQzgwLVxcdURDQjJcXHVEQ0MwLVxcdURDRjJcXHVEQ0ZBLVxcdURDRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ09sZF9JdGFsaWMnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAwW1xcdURGMDAtXFx1REYyM10nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnT2xkX05vcnRoX0FyYWJpYW4nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAyW1xcdURFODAtXFx1REU5Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnT2xkX1Blcm1pYycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REY1MC1cXHVERjdBXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPbGRfUGVyc2lhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDBbXFx1REZBMC1cXHVERkMzXFx1REZDOC1cXHVERkQ1XSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPbGRfU291dGhfQXJhYmlhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REU2MC1cXHVERTdGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPbGRfVHVya2ljJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwM1tcXHVEQzAwLVxcdURDNDhdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ09yaXlhJyxcbiAgICAgICAgYm1wOiAnXFx1MEIwMS1cXHUwQjAzXFx1MEIwNS1cXHUwQjBDXFx1MEIwRlxcdTBCMTBcXHUwQjEzLVxcdTBCMjhcXHUwQjJBLVxcdTBCMzBcXHUwQjMyXFx1MEIzM1xcdTBCMzUtXFx1MEIzOVxcdTBCM0MtXFx1MEI0NFxcdTBCNDdcXHUwQjQ4XFx1MEI0Qi1cXHUwQjREXFx1MEI1NlxcdTBCNTdcXHUwQjVDXFx1MEI1RFxcdTBCNUYtXFx1MEI2M1xcdTBCNjYtXFx1MEI3NydcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPc2FnZScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDFbXFx1RENCMC1cXHVEQ0QzXFx1RENEOC1cXHVEQ0ZCXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPc21hbnlhJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMVtcXHVEQzgwLVxcdURDOURcXHVEQ0EwLVxcdURDQTldJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BhaGF3aF9IbW9uZycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MUFbXFx1REYwMC1cXHVERjQ1XFx1REY1MC1cXHVERjU5XFx1REY1Qi1cXHVERjYxXFx1REY2My1cXHVERjc3XFx1REY3RC1cXHVERjhGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdQYWxteXJlbmUnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODAyW1xcdURDNjAtXFx1REM3Rl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUGF1X0Npbl9IYXUnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA2W1xcdURFQzAtXFx1REVGOF0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUGhhZ3NfUGEnLFxuICAgICAgICBibXA6ICdcXHVBODQwLVxcdUE4NzcnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUGhvZW5pY2lhbicsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDJbXFx1REQwMC1cXHVERDFCXFx1REQxRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUHNhbHRlcl9QYWhsYXZpJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMltcXHVERjgwLVxcdURGOTFcXHVERjk5LVxcdURGOUNcXHVERkE5LVxcdURGQUZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1JlamFuZycsXG4gICAgICAgIGJtcDogJ1xcdUE5MzAtXFx1QTk1M1xcdUE5NUYnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnUnVuaWMnLFxuICAgICAgICBibXA6ICdcXHUxNkEwLVxcdTE2RUFcXHUxNkVFLVxcdTE2RjgnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnU2FtYXJpdGFuJyxcbiAgICAgICAgYm1wOiAnXFx1MDgwMC1cXHUwODJEXFx1MDgzMC1cXHUwODNFJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1NhdXJhc2h0cmEnLFxuICAgICAgICBibXA6ICdcXHVBODgwLVxcdUE4QzVcXHVBOENFLVxcdUE4RDknXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnU2hhcmFkYScsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1REQ4MC1cXHVERENEXFx1REREMC1cXHVERERGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTaGF2aWFuJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMVtcXHVEQzUwLVxcdURDN0ZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1NpZGRoYW0nLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA1W1xcdUREODAtXFx1RERCNVxcdUREQjgtXFx1RERERF0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnU2lnbldyaXRpbmcnLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODM2W1xcdURDMDAtXFx1REU4QlxcdURFOUItXFx1REU5RlxcdURFQTEtXFx1REVBRl0nXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnU2luaGFsYScsXG4gICAgICAgIGJtcDogJ1xcdTBEODJcXHUwRDgzXFx1MEQ4NS1cXHUwRDk2XFx1MEQ5QS1cXHUwREIxXFx1MERCMy1cXHUwREJCXFx1MERCRFxcdTBEQzAtXFx1MERDNlxcdTBEQ0FcXHUwRENGLVxcdTBERDRcXHUwREQ2XFx1MEREOC1cXHUwRERGXFx1MERFNi1cXHUwREVGXFx1MERGMi1cXHUwREY0JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNFtcXHVEREUxLVxcdURERjRdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1NvcmFfU29tcGVuZycsXG4gICAgICAgIGFzdHJhbDogJ1xcdUQ4MDRbXFx1RENEMC1cXHVEQ0U4XFx1RENGMC1cXHVEQ0Y5XSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTdW5kYW5lc2UnLFxuICAgICAgICBibXA6ICdcXHUxQjgwLVxcdTFCQkZcXHUxQ0MwLVxcdTFDQzcnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnU3lsb3RpX05hZ3JpJyxcbiAgICAgICAgYm1wOiAnXFx1QTgwMC1cXHVBODJCJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1N5cmlhYycsXG4gICAgICAgIGJtcDogJ1xcdTA3MDAtXFx1MDcwRFxcdTA3MEYtXFx1MDc0QVxcdTA3NEQtXFx1MDc0RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdUYWdhbG9nJyxcbiAgICAgICAgYm1wOiAnXFx1MTcwMC1cXHUxNzBDXFx1MTcwRS1cXHUxNzE0J1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RhZ2JhbndhJyxcbiAgICAgICAgYm1wOiAnXFx1MTc2MC1cXHUxNzZDXFx1MTc2RS1cXHUxNzcwXFx1MTc3MlxcdTE3NzMnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnVGFpX0xlJyxcbiAgICAgICAgYm1wOiAnXFx1MTk1MC1cXHUxOTZEXFx1MTk3MC1cXHUxOTc0J1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RhaV9UaGFtJyxcbiAgICAgICAgYm1wOiAnXFx1MUEyMC1cXHUxQTVFXFx1MUE2MC1cXHUxQTdDXFx1MUE3Ri1cXHUxQTg5XFx1MUE5MC1cXHUxQTk5XFx1MUFBMC1cXHUxQUFEJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RhaV9WaWV0JyxcbiAgICAgICAgYm1wOiAnXFx1QUE4MC1cXHVBQUMyXFx1QUFEQi1cXHVBQURGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1Rha3JpJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNVtcXHVERTgwLVxcdURFQjdcXHVERUMwLVxcdURFQzldJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RhbWlsJyxcbiAgICAgICAgYm1wOiAnXFx1MEI4MlxcdTBCODNcXHUwQjg1LVxcdTBCOEFcXHUwQjhFLVxcdTBCOTBcXHUwQjkyLVxcdTBCOTVcXHUwQjk5XFx1MEI5QVxcdTBCOUNcXHUwQjlFXFx1MEI5RlxcdTBCQTNcXHUwQkE0XFx1MEJBOC1cXHUwQkFBXFx1MEJBRS1cXHUwQkI5XFx1MEJCRS1cXHUwQkMyXFx1MEJDNi1cXHUwQkM4XFx1MEJDQS1cXHUwQkNEXFx1MEJEMFxcdTBCRDdcXHUwQkU2LVxcdTBCRkEnXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnVGFuZ3V0JyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgxQlxcdURGRTB8W1xcdUQ4MUMtXFx1RDgyMF1bXFx1REMwMC1cXHVERkZGXXxcXHVEODIxW1xcdURDMDAtXFx1REZFQ118XFx1RDgyMltcXHVEQzAwLVxcdURFRjJdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RlbHVndScsXG4gICAgICAgIGJtcDogJ1xcdTBDMDAtXFx1MEMwM1xcdTBDMDUtXFx1MEMwQ1xcdTBDMEUtXFx1MEMxMFxcdTBDMTItXFx1MEMyOFxcdTBDMkEtXFx1MEMzOVxcdTBDM0QtXFx1MEM0NFxcdTBDNDYtXFx1MEM0OFxcdTBDNEEtXFx1MEM0RFxcdTBDNTVcXHUwQzU2XFx1MEM1OC1cXHUwQzVBXFx1MEM2MC1cXHUwQzYzXFx1MEM2Ni1cXHUwQzZGXFx1MEM3OC1cXHUwQzdGJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RoYWFuYScsXG4gICAgICAgIGJtcDogJ1xcdTA3ODAtXFx1MDdCMSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdUaGFpJyxcbiAgICAgICAgYm1wOiAnXFx1MEUwMS1cXHUwRTNBXFx1MEU0MC1cXHUwRTVCJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RpYmV0YW4nLFxuICAgICAgICBibXA6ICdcXHUwRjAwLVxcdTBGNDdcXHUwRjQ5LVxcdTBGNkNcXHUwRjcxLVxcdTBGOTdcXHUwRjk5LVxcdTBGQkNcXHUwRkJFLVxcdTBGQ0NcXHUwRkNFLVxcdTBGRDRcXHUwRkQ5XFx1MEZEQSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdUaWZpbmFnaCcsXG4gICAgICAgIGJtcDogJ1xcdTJEMzAtXFx1MkQ2N1xcdTJENkZcXHUyRDcwXFx1MkQ3RidcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdUaXJodXRhJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwNVtcXHVEQzgwLVxcdURDQzdcXHVEQ0QwLVxcdURDRDldJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1VnYXJpdGljJyxcbiAgICAgICAgYXN0cmFsOiAnXFx1RDgwMFtcXHVERjgwLVxcdURGOURcXHVERjlGXSdcbiAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdWYWknLFxuICAgICAgICBibXA6ICdcXHVBNTAwLVxcdUE2MkInXG4gICAgfSwge1xuICAgICAgICBuYW1lOiAnV2FyYW5nX0NpdGknLFxuICAgICAgICBhc3RyYWw6ICdcXHVEODA2W1xcdURDQTAtXFx1RENGMlxcdURDRkZdJ1xuICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1lpJyxcbiAgICAgICAgYm1wOiAnXFx1QTAwMC1cXHVBNDhDXFx1QTQ5MC1cXHVBNEM2J1xuICAgIH1dKTtcbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZXhwb3J0c1snZGVmYXVsdCddOyIsIid1c2Ugc3RyaWN0Jztcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHN0cikge1xuXHRpZiAodHlwZW9mIHN0ciAhPT0gJ3N0cmluZycpIHtcblx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKCdFeHBlY3RlZCBhIHN0cmluZycpO1xuXHR9XG5cblx0cmV0dXJuIHN0ci50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoLyg/Ol58XFxzfC0pXFxTL2csIGZ1bmN0aW9uIChtKSB7XG5cdFx0cmV0dXJuIG0udG9VcHBlckNhc2UoKTtcblx0fSk7XG59O1xuIiwidmFyIG1hcCA9IHtcblx0XCIuL0N1YmVMb29wXCI6IFtcblx0XHQ5LFxuXHRcdDAsXG5cdFx0MlxuXHRdLFxuXHRcIi4vQ3ViZUxvb3AuanNcIjogW1xuXHRcdDksXG5cdFx0MCxcblx0XHQyXG5cdF0sXG5cdFwiLi9GbG9hdGluZ0Jpb1wiOiBbXG5cdFx0MTAsXG5cdFx0MCxcblx0XHQzXG5cdF0sXG5cdFwiLi9GbG9hdGluZ0Jpby5qc1wiOiBbXG5cdFx0MTAsXG5cdFx0MCxcblx0XHQzXG5cdF0sXG5cdFwiLi9HcmlkTG9vcFwiOiBbXG5cdFx0Mixcblx0XHQwLFxuXHRcdDRcblx0XSxcblx0XCIuL0dyaWRMb29wLmpzXCI6IFtcblx0XHQyLFxuXHRcdDAsXG5cdFx0NFxuXHRdLFxuXHRcIi4vTGlzc2Fqb3V4XCI6IFtcblx0XHQzLFxuXHRcdDAsXG5cdFx0NVxuXHRdLFxuXHRcIi4vTGlzc2Fqb3V4LmpzXCI6IFtcblx0XHQzLFxuXHRcdDAsXG5cdFx0NVxuXHRdLFxuXHRcIi4vTW9ycGhpbmdTcGhlcmVcIjogW1xuXHRcdDQsXG5cdFx0MCxcblx0XHQ2XG5cdF0sXG5cdFwiLi9Nb3JwaGluZ1NwaGVyZS5qc1wiOiBbXG5cdFx0NCxcblx0XHQwLFxuXHRcdDZcblx0XSxcblx0XCIuL09wZW5IZWFkXCI6IFtcblx0XHQ1LFxuXHRcdDAsXG5cdFx0MSxcblx0XHQ3XG5cdF0sXG5cdFwiLi9PcGVuSGVhZC5qc1wiOiBbXG5cdFx0NSxcblx0XHQwLFxuXHRcdDEsXG5cdFx0N1xuXHRdLFxuXHRcIi4vU2t5c2NyYXBlcnNMb29wXCI6IFtcblx0XHQ2LFxuXHRcdDAsXG5cdFx0OFxuXHRdLFxuXHRcIi4vU2t5c2NyYXBlcnNMb29wLmpzXCI6IFtcblx0XHQ2LFxuXHRcdDAsXG5cdFx0OFxuXHRdLFxuXHRcIi4vU3VuTG9vcFwiOiBbXG5cdFx0Nyxcblx0XHQwLFxuXHRcdDlcblx0XSxcblx0XCIuL1N1bkxvb3AuanNcIjogW1xuXHRcdDcsXG5cdFx0MCxcblx0XHQ5XG5cdF0sXG5cdFwiLi9UcmVlRXhhbXBsZVwiOiBbXG5cdFx0OCxcblx0XHQwLFxuXHRcdDEsXG5cdFx0MTBcblx0XSxcblx0XCIuL1RyZWVFeGFtcGxlLmpzXCI6IFtcblx0XHQ4LFxuXHRcdDAsXG5cdFx0MSxcblx0XHQxMFxuXHRdXG59O1xuZnVuY3Rpb24gd2VicGFja0FzeW5jQ29udGV4dChyZXEpIHtcblx0dmFyIGlkcyA9IG1hcFtyZXFdO1xuXHRpZighaWRzKSB7XG5cdFx0cmV0dXJuIFByb21pc2UucmVzb2x2ZSgpLnRoZW4oZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgZSA9IG5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIgKyByZXEgKyBcIidcIik7XG5cdFx0XHRlLmNvZGUgPSAnTU9EVUxFX05PVF9GT1VORCc7XG5cdFx0XHR0aHJvdyBlO1xuXHRcdH0pO1xuXHR9XG5cdHJldHVybiBQcm9taXNlLmFsbChpZHMuc2xpY2UoMSkubWFwKF9fd2VicGFja19yZXF1aXJlX18uZSkpLnRoZW4oZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGlkID0gaWRzWzBdO1xuXHRcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKGlkKTtcblx0fSk7XG59XG53ZWJwYWNrQXN5bmNDb250ZXh0LmtleXMgPSBmdW5jdGlvbiB3ZWJwYWNrQXN5bmNDb250ZXh0S2V5cygpIHtcblx0cmV0dXJuIE9iamVjdC5rZXlzKG1hcCk7XG59O1xud2VicGFja0FzeW5jQ29udGV4dC5pZCA9IDI2O1xubW9kdWxlLmV4cG9ydHMgPSB3ZWJwYWNrQXN5bmNDb250ZXh0OyJdLCJzb3VyY2VSb290IjoiIn0=