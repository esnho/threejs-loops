(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{16:function(e,t,o){"use strict";o.d(t,"a",function(){return n});var r=o(15);var n=function e(t){var o=t.size,n=void 0===o?5:o,i=t.material,a=t.position;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.seed=Math.random();var s=1,c=1,u=1;this.color=new r.Color,this.color.setRGB(s,c,u),this.material=i||new r.MeshBasicMaterial({color:this.color}),this.geometry=new r.BoxGeometry(n,n,n),this.mesh=new r.Mesh(this.geometry,this.material),a&&this.mesh.position.copy(a),this.root=this.mesh}},22:function(e,t,o){var r=o(23);"string"==typeof r&&(r=[[e.i,r,""]]);var n={hmr:!0,transform:void 0,insertInto:void 0};o(1)(r,n);r.locals&&(e.exports=r.locals)},23:function(e,t,o){t=e.exports=o(0)(!1);var r=o(24),n=r(o(25)),i=r(o(26));t.push([e.i,"/* vt323-400normal - latin */\n@font-face {\n  font-family: 'VT323';\n  font-style: normal;\n  font-display: swap;\n  font-weight: 400;\n  src:\n    local('VT323 Regular '),\n    local('VT323-Regular'),\n    url("+n+") format('woff2'), \n    url("+i+") format('woff'); /* Modern Browsers */\n}\n\n",""])},24:function(e,t,o){"use strict";e.exports=function(e,t){return"string"!=typeof e?e:(/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),/["'() \t\n]/.test(e)||t?'"'+e.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':e)}},25:function(e,t,o){e.exports=o.p+"fonts/vt323-latin-400.woff2"},26:function(e,t,o){e.exports=o.p+"fonts/vt323-latin-400.woff"},6:function(e,t,o){"use strict";o.r(t);var r=o(15);function n(e){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function i(e,t){return!t||"object"!==n(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function a(e){return(a=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function s(e,t){return(s=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var c=function(e){function t(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),e=i(this,a(t).call(this));var o=new r.HemisphereLight(16777215,16777215,3);return o.color.setHSL(Math.NormalizeHue(325),.1,.94),o.groundColor.setHSL(Math.NormalizeHue(325),.1,.64),o.position.set(0,2,0),e.add(o),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&s(e,t)}(t,r["Group"]),t}();function u(e){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function h(e,t){return!t||"object"!==u(t)&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function f(e,t){return(f=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}var p=function(e){function t(){var e;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),e=h(this,l(t).call(this));var o=new c;e.add(o);var n=new r.DirectionalLight("white",.65),i=new r.DirectionalLight("white",.55);return n.position.copy(new r.Vector3(9,3.5,0)),i.position.copy(new r.Vector3(-10,2,0)),e.add(n,i),e}return function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&f(e,t)}(t,r["Group"]),t}(),d=o(16);var y=function e(t){var o=t.size,n=void 0===o?5:o,i=t.material,a=t.position,s=t.widthSegments,c=t.heightSegments;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.seed=Math.random();var u=1,h=1,l=1;this.color=new r.Color,this.color.setRGB(u,h,l),this.material=i||new r.MeshBasicMaterial({color:this.color});var f=i.length>1?r.SphereBufferGeometry:r.SphereGeometry;if(this.geometry=new f(n,s||7,c||9),i.length){this.geometry.clearGroups();for(var p=0;p<i.length;p++)this.geometry.addGroup(0,1/0,p)}this.mesh=new r.Mesh(this.geometry,this.material),a&&this.mesh.position.copy(a),this.root=this.mesh};function w(e,t){for(var o=0;o<t.length;o++){var r=t[o];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}o.d(t,"default",function(){return m}),o(22);var m=function(){function e(t){var o=t.scene,n=t.onLoad;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.scene=o,this.editScene(),this.root=new r.Group;var i=new p;this.root.add(i),this.addSkyscrapers(),this.addSky(),this.addGround(),this.addWhereAreYou(),n&&n()}var t,o,n;return t=e,(o=[{key:"editScene",value:function(){var e=this.scene.camera.aspect,t=new r.Color;t.setIntHSL(244,30,8),this.scene.renderer.setClearColor(t),this.scene.camera=new r.OrthographicCamera(7*e/-2,7*e/2,3.5,-3.5,.1,150),this.scene.camera.position.copy(new r.Vector3(10,10,10)),this.scene.camera.lookAt(new r.Vector3(0,0,0))}},{key:"addSkyscrapers",value:function(){var e=new r.MeshStandardMaterial({color:4276048,metalness:.3,roughness:.2}),t=new r.MeshBasicMaterial({color:2301751}),o=new r.MeshBasicMaterial({color:13421789});this.cubes=[];this.cubesParent=new r.Group;for(var n=-5;n<5;n++)for(var i=-5;i<5;i++){for(var a=new d.a({size:1,material:e,position:new r.Vector3(1.5*n+(Math.random()-.5),0,1.5*i)}),s=0;s<80;s++){var c=Math.random()>.5?.5:-.5;if(!(c<0)){var u=.8*Math.random()-.4,h=Math.random()*(Math.random()>.5?.4:-.4);u=.1*Math.round(10*u),h=.2*Math.round(5*h);var l=new d.a({size:.05,material:Math.random()>.1?t:o,position:new r.Vector3(h,u,c)});a.root.add(l.root)}}a.root.scale.copy(new r.Vector3(1,2,1)),this.cubesParent.add(a.root),this.cubes.push(a)}this.root.add(this.cubesParent)}},{key:"addSky",value:function(){var e=new r.MeshStandardMaterial({color:328489,metalness:.1,roughness:.9,side:r.BackSide}),t=new r.MeshBasicMaterial({color:13421789,side:r.BackSide,wireframe:!0}),o=new y({size:5,position:new r.Vector3(-.5,1,0),material:e,heightSegments:72,widthSegments:128});o.root.scale.copy(new r.Vector3(10,9.25,10)),this.root.add(o.root);for(var n=0;n<120;n++){var i=Math.random()*Math.PI*2,a=Math.random()*Math.PI*.6,s=new y({size:.018,material:t,position:new r.Vector3(20*Math.sin(i),8*Math.cos(a),-10)});this.root.add(s.root)}}},{key:"addGround",value:function(){var e=new r.MeshStandardMaterial({color:1250067,metalness:.7,roughness:.9,flatShading:!0}),t=new y({size:3,position:new r.Vector3(0,-1,0),material:e});t.root.scale.copy(new r.Vector3(5,.5,4)),this.root.add(t.root)}},{key:"addWhereAreYou",value:function(){this.whereAreYou=document.createElement("h1"),this.whereAreYou.innerHTML="where are you",this.whereAreYou.style.margin="auto",this.whereAreYou.style.marginTop="30vh",this.whereAreYou.style.verticalAlign="middle",this.whereAreYou.style.fontFamily="'VT323', monospace",this.whereAreYou.style.color="antiquewhite",this.whereAreYou.style.fontWeight="lighter",this.whereAreYou.style.cursor="default",this.whereAreYou.style.letterSpacing="0.2em",document.body.appendChild(this.whereAreYou)}},{key:"update",value:function(e){var t=.2*e;this.updateSkyscrapers(t),this.updateCamera(e)}},{key:"updateSkyscrapers",value:function(e){for(var t=0;t<this.cubesParent.children.length;t++){var o=this.cubesParent.children[t],r=o.position;r.y=Math.sin(t*Math.PI*.25+e),o.position.copy(r)}}},{key:"updateCamera",value:function(e){this.scene.camera.position.copy(new r.Vector3(10*Math.cos(.12*e)+2,Math.cos(.2*e)+1,30)),this.scene.camera.lookAt(new r.Vector3(0,2.5,6)),this.scene.camera.updateProjectionMatrix()}},{key:"onRemove",value:function(){document.body.removeChild(this.whereAreYou)}}])&&w(t.prototype,o),n&&w(t,n),e}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,