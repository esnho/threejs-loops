(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{45:function(e,o,t){e.exports=t.p+"obj/Lowpoly_tree_sample.obj"},8:function(e,o,t){"use strict";t.r(o),t.d(o,"default",function(){return c});var r=t(28),a=t(45),i=t.n(a),n=t(31),s=t(33),h=t(34);function d(e,o){for(var t=0;t<o.length;t++){var r=o[t];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}h(r);var c=function(){function e(o){var t=o.scene,a=o.onLoad;!function(e,o){if(!(e instanceof o))throw new TypeError("Cannot call a class as a function")}(this,e),this.scene=t,this.setupCamera(),t.renderer.shadowMap.enabled=!0,t.renderer.shadowMap.type=r.PCFSoftShadowMap,this.root=new r.Group,this.loadTree(),this.setupLights();var i=new r.MeshStandardMaterial({emissive:6161169,flatShading:!0});i.emissive.setRGB(157/255,239/255,247/255),this.sphere=new s.a({size:6,material:i,widthSegments:20,heightSegments:10,receiveShadow:!0}),this.sphere.root.rotateX(Math.PI/180*26),console.log(this.sphere.root.geometry),this.root.add(this.sphere.root),a&&a()}var o,t,a;return o=e,(t=[{key:"loading",value:function(e){}},{key:"setupLights",value:function(){var e=new n.a({intensity:1.8,castShadow:!0,bias:2e-5,projectionSides:6.5,mapSize:256});e.rotateY(Math.PI),this.root.add(e)}},{key:"setupCamera",value:function(){this.scene.camera.position.copy(new r.Vector3(0,4.5,18)),this.scene.camera.lookAt(new r.Vector3(0,0,0))}},{key:"loadTree",value:function(){var e=new r.OBJLoader;this.onHeadReady=this.onTreeReady.bind(this),this.onHeadLoading=this.onHeadLoading.bind(this),this.onTreeReady=this.onTreeReady.bind(this),e.load(i.a,this.onTreeReady,this.onHeadLoading,function(e){console.log("An error happened",e)})}},{key:"onHeadLoading",value:function(e){var o=e.loaded/e.total;console.log(100*o+"% loaded"),this.loading(Math.sin(o))}},{key:"onTreeReady",value:function(e){e.traverse(function(e){e.castShadow=!0,e.receiveShadow=!0});for(var o=0;o<this.sphere.root.geometry.vertices.length;o++)console.log(this.sphere.root.geometry.vertices[o]),this.addTree(e,this.sphere.root.geometry.vertices[o],.1)}},{key:"addTree",value:function(e,o,t){var a=e.clone();a.position.copy(o),a.scale.copy(new r.Vector3(t,t,t));var i=new r.Vector3(0,1,0);console.log(this.sphere.root.position),a.quaternion.setFromUnitVectors(i,o.sub(this.sphere.root.position).clone().normalize()),a.children[0].material[0].color.setRGB(1,.6,0),a.children[0].material[1].color.setRGB(224/255,252/255,1),a.children[0].material[1].emissive.setRGB(224/255*.2,252/255*.2,.2),a.rotateY(360*Math.random()),console.log(a),this.sphere.root.add(a)}},{key:"update",value:function(e,o){var t=new r.Color;this.sphere.root.material.emissive.getHSL(t),t.s=.5*(Math.sin(e+.27*Math.PI)+1),t.l=.1*(Math.cos(e)+1),this.sphere.root.material.emissive.setHSL(t.h,t.s,t.l);for(var a=0;a<this.sphere.root.children.length;a+=1){var i=this.sphere.root.children[a].children[0],n=i.position;n.y=30*Math.sin(e+.05*a),i.position.copy(n)}this.sphere.root.rotateY(.35*o)}}])&&d(o.prototype,t),a&&d(o,a),e}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,