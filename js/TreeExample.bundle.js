(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{45:function(e,t,o){e.exports=o.p+"obj/Lowpoly_tree_sample.obj"},8:function(e,t,o){"use strict";o.r(t),o.d(t,"default",function(){return c});var a=o(28),r=o(45),i=o.n(r),n=o(31),s=o(33),h=o(34);function d(e,t){for(var o=0;o<t.length;o++){var a=t[o];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}h(a);var c=function(){function e(t){var o=t.scene,r=t.onLoad;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.scene=o,this.setupCamera(),o.renderer.shadowMap.enabled=!0,o.renderer.shadowMap.type=a.PCFShadowMap,this.root=new a.Group,this.loadTree(),this.setupLights();var i=new a.MeshStandardMaterial({emissive:6161169,flatShading:!0});i.emissive.setRGB(157/255,239/255,247/255),this.sphere=new s.a({size:6,material:i,widthSegments:20,heightSegments:10,receiveShadow:!0}),this.sphere.root.rotateX(Math.PI/180*26),console.log(this.sphere.root.geometry),this.root.add(this.sphere.root),r&&r()}var t,o,r;return t=e,(o=[{key:"loading",value:function(e){}},{key:"setupLights",value:function(){var e=new n.a({intensity:1.8,castShadow:!0,bias:2e-5,projectionSides:6.5,mapSize:1024});e.rotateY(Math.PI),this.root.add(e)}},{key:"setupCamera",value:function(){this.scene.camera.position.copy(new a.Vector3(0,4.5,18)),this.scene.camera.lookAt(new a.Vector3(0,0,0))}},{key:"loadTree",value:function(){var e=new a.OBJLoader;this.onHeadReady=this.onTreeReady.bind(this),this.onHeadLoading=this.onHeadLoading.bind(this),this.onTreeReady=this.onTreeReady.bind(this),e.load(i.a,this.onTreeReady,this.onHeadLoading,function(e){console.log("An error happened",e)})}},{key:"onHeadLoading",value:function(e){var t=e.loaded/e.total;console.log(100*t+"% loaded"),this.loading(Math.sin(t))}},{key:"onTreeReady",value:function(e){e.traverse(function(e){e.castShadow=!0,e.receiveShadow=!0});for(var t=0;t<this.sphere.root.geometry.vertices.length;t++)this.addTree(e,this.sphere.root.geometry.vertices[t],.1)}},{key:"addTree",value:function(e,t,o){var r=e.clone();r.position.copy(t),r.scale.copy(new a.Vector3(o,o,o));var i=new a.Vector3(0,1,0);r.quaternion.setFromUnitVectors(i,t.sub(this.sphere.root.position).clone().normalize()),r.children[0].material[0].color.setRGB(1,.6,0),r.children[0].material[1].color.setRGB(224/255,252/255,1),r.children[0].material[1].emissive.setRGB(224/255*.2,252/255*.2,.2),r.rotateY(360*Math.random()),this.sphere.root.add(r)}},{key:"update",value:function(e,t){var o=new a.Color;this.sphere.root.material.emissive.getHSL(o),o.s=.5*(Math.sin(e+.27*Math.PI)+1),o.l=.1*(Math.cos(e)+1),this.sphere.root.material.emissive.setHSL(o.h,o.s,o.l);for(var r=0;r<this.sphere.root.children.length;r+=1){var i=this.sphere.root.children[r].children[0],n=i.position;n.y=30*Math.sin(e+.05*r),i.position.copy(n)}this.sphere.root.rotateY(.35*t)}}])&&d(t.prototype,o),r&&d(t,r),e}()}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,